{"data":{"markdownRemark":{"html":"<p> You are probably here because you got the following error message:</p>\n<blockquote>\n<p>Hooks can only be called inside the body of a function component.</p>\n</blockquote>\n<p>There are three common reasons you might be seeing it:</p>\n<ol>\n<li>You might have <strong>mismatching versions</strong> of React and React DOM.</li>\n<li>You might be <strong>breaking the <a href=\"/docs/hooks-rules.html\">Rules of Hooks</a></strong>.</li>\n<li>You might have <strong>more than one copy of React</strong> in the same app.</li>\n</ol>\n<p>Let’s look at each of these cases.</p>\n<h2 id=\"mismatching-versions-of-react-and-react-dom\"><a href=\"#mismatching-versions-of-react-and-react-dom\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mismatching Versions of React and React DOM </h2>\n<p>You might be using a version of <code class=\"gatsby-code-text\">react-dom</code> (&#x3C; 16.8.0) or <code class=\"gatsby-code-text\">react-native</code> (&#x3C; 0.59) that doesn’t yet support Hooks. You can run <code class=\"gatsby-code-text\">npm ls react-dom</code> or <code class=\"gatsby-code-text\">npm ls react-native</code> in your application folder to check which version you’re using. If you find more than one of them, this might also create problems (more on that below).</p>\n<h2 id=\"breaking-the-rules-of-hooks\"><a href=\"#breaking-the-rules-of-hooks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Breaking the Rules of Hooks </h2>\n<p>You can only call Hooks <strong>while React is rendering a function component</strong>:</p>\n<ul>\n<li>✅ Call them at the top level in the body of a function component.</li>\n<li>✅ Call them at the top level in the body of a <a href=\"/docs/hooks-custom.html\">custom Hook</a>.</li>\n</ul>\n<p><strong>Learn more about this in the <a href=\"/docs/hooks-rules.html\">Rules of Hooks</a>.</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ✅ Good: top-level in a function component</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useWindowWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ✅ Good: top-level in a custom Hook</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">,</span> setWidth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To avoid confusion, it’s <strong>not</strong> supported to call Hooks in other cases:</p>\n<ul>\n<li>🔴 Do not call Hooks in class components.</li>\n<li>🔴 Do not call in event handlers.</li>\n<li>🔴 Do not call Hooks inside functions passed to <code class=\"gatsby-code-text\">useMemo</code>, <code class=\"gatsby-code-text\">useReducer</code>, or <code class=\"gatsby-code-text\">useEffect</code>.</li>\n</ul>\n<p>If you break these rules, you might see this error.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Bad1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 🔴 Bad: inside an event handler (to fix, move it outside!)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Bad2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 🔴 Bad: inside useMemo (to fix, move it outside!)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token function\">createStyle</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Bad3</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 🔴 Bad: inside a class component</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can use the <a href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code> plugin</a> to catch some of these mistakes.</p>\n<blockquote>\n<p>Note</p>\n<p><a href=\"/docs/hooks-custom.html\">Custom Hooks</a> <em>may</em> call other Hooks (that’s their whole purpose). This works because custom Hooks are also supposed to only be called while a function component is rendering.</p>\n</blockquote>\n<h2 id=\"duplicate-react\"><a href=\"#duplicate-react\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Duplicate React </h2>\n<p>In order for Hooks to work, the <code class=\"gatsby-code-text\">react</code> import from your application code needs to resolve to the same module as the <code class=\"gatsby-code-text\">react</code> import from inside the <code class=\"gatsby-code-text\">react-dom</code> package.</p>\n<p>If these <code class=\"gatsby-code-text\">react</code> imports resolve to two different exports objects, you will see this warning. This may happen if you <strong>accidentally end up with two copies</strong> of the <code class=\"gatsby-code-text\">react</code> package.</p>\n<p>If you use Node for package management, you can run this check in your project folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">npm ls react</code></pre></div>\n<p>If you see more than one React, you’ll need to figure out why this happens and fix your dependency tree. For example, maybe a library you’re using incorrectly specifies <code class=\"gatsby-code-text\">react</code> as a dependency (rather than a peer dependency). Until that library is fixed, <a href=\"https://yarnpkg.com/lang/en/docs/selective-version-resolutions/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Yarn resolutions</a> is one possible workaround.</p>\n<p>You can also try to debug this problem by adding some logs and restarting your development server:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Add this in node_modules/react-dom/index.js</span>\nwindow<span class=\"token punctuation\">.</span>React1 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add this in your component file</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>React2 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>React1 <span class=\"token operator\">===</span> window<span class=\"token punctuation\">.</span>React2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If it prints <code class=\"gatsby-code-text\">false</code> then you might have two Reacts and need to figure out why that happened. <a href=\"https://github.com/facebook/react/issues/13991\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">This issue</a> includes some common reasons encountered by the community.</p>\n<p>This problem can also come up when you use <code class=\"gatsby-code-text\">npm link</code> or an equivalent. In that case, your bundler might “see” two Reacts — one in application folder and one in your library folder. Assuming <code class=\"gatsby-code-text\">myapp</code> and <code class=\"gatsby-code-text\">mylib</code> are sibling folders, one possible fix is to run <code class=\"gatsby-code-text\">npm link ../myapp/node_modules/react</code> from <code class=\"gatsby-code-text\">mylib</code>. This should make the library use the application’s React copy.</p>\n<blockquote>\n<p>Note</p>\n<p>In general, React supports using multiple independent copies on one page (for example, if an app and a third-party widget both use it). It only breaks if <code class=\"gatsby-code-text\">require(&#39;react&#39;)</code> resolves differently between the component and the <code class=\"gatsby-code-text\">react-dom</code> copy it was rendered with.</p>\n</blockquote>\n<h2 id=\"other-causes\"><a href=\"#other-causes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other Causes </h2>\n<p>If none of this worked, please comment in <a href=\"https://github.com/facebook/react/issues/13991\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this issue</a> and we’ll try to help. Try to create a small reproducing example — you might discover the problem as you’re doing it.</p>","frontmatter":{"title":"Invalid Hook Call Warning","next":null,"prev":null},"fields":{"path":"content/warnings/invalid-hook-call-warning.md","slug":"warnings/invalid-hook-call-warning.html"}}},"pageContext":{"slug":"warnings/invalid-hook-call-warning.html"}}