{"expireTime":9007200851888162000,"key":"transformer-remark-markdown-ast-b964ec469db2d59b6e1decb4802bd6c8-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note:","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":8,"offset":8},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":8,"offset":8},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">React.PropTypes</code>","position":{"start":{"line":4,"column":3,"offset":13},"end":{"line":4,"column":20,"offset":30},"indent":[]}},{"type":"text","value":" has moved into a different package since React v15.5. Please use ","position":{"start":{"line":4,"column":20,"offset":30},"end":{"line":4,"column":86,"offset":96},"indent":[]}},{"type":"link","title":null,"url":"https://www.npmjs.com/package/prop-types","children":[{"type":"text","value":"the ","position":{"start":{"line":4,"column":87,"offset":97},"end":{"line":4,"column":91,"offset":101},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">prop-types</code>","position":{"start":{"line":4,"column":91,"offset":101},"end":{"line":4,"column":103,"offset":113},"indent":[]}},{"type":"text","value":" library instead","position":{"start":{"line":4,"column":103,"offset":113},"end":{"line":4,"column":119,"offset":129},"indent":[]}}],"position":{"start":{"line":4,"column":86,"offset":96},"end":{"line":4,"column":162,"offset":172},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":4,"column":162,"offset":172},"end":{"line":4,"column":163,"offset":173},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":13},"end":{"line":4,"column":163,"offset":173},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We provide ","position":{"start":{"line":6,"column":2,"offset":177},"end":{"line":6,"column":13,"offset":188},"indent":[]}},{"type":"link","title":null,"url":"/blog/2017/04/07/react-v15.5.0.html#migrating-from-reactproptypes","children":[{"type":"text","value":"a codemod script","position":{"start":{"line":6,"column":14,"offset":189},"end":{"line":6,"column":30,"offset":205},"indent":[]}}],"position":{"start":{"line":6,"column":13,"offset":188},"end":{"line":6,"column":98,"offset":273},"indent":[]}},{"type":"text","value":" to automate the conversion.","position":{"start":{"line":6,"column":98,"offset":273},"end":{"line":6,"column":126,"offset":301},"indent":[]}}],"position":{"start":{"line":6,"column":2,"offset":177},"end":{"line":6,"column":126,"offset":301},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":6,"column":126,"offset":301},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As your app grows, you can catch a lot of bugs with typechecking. For some applications, you can use JavaScript extensions like ","position":{"start":{"line":8,"column":1,"offset":303},"end":{"line":8,"column":129,"offset":431},"indent":[]}},{"type":"link","title":null,"url":"https://flow.org/","children":[{"type":"text","value":"Flow","position":{"start":{"line":8,"column":130,"offset":432},"end":{"line":8,"column":134,"offset":436},"indent":[]}}],"position":{"start":{"line":8,"column":129,"offset":431},"end":{"line":8,"column":154,"offset":456},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" or ","position":{"start":{"line":8,"column":154,"offset":456},"end":{"line":8,"column":158,"offset":460},"indent":[]}},{"type":"link","title":null,"url":"https://www.typescriptlang.org/","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":8,"column":159,"offset":461},"end":{"line":8,"column":169,"offset":471},"indent":[]}}],"position":{"start":{"line":8,"column":158,"offset":460},"end":{"line":8,"column":203,"offset":505},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" to typecheck your whole application. But even if you don’t use those, React has some built-in typechecking abilities. To run typechecking on the props for a component, you can assign the special ","position":{"start":{"line":8,"column":203,"offset":505},"end":{"line":8,"column":399,"offset":701},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">propTypes</code>","position":{"start":{"line":8,"column":399,"offset":701},"end":{"line":8,"column":410,"offset":712},"indent":[]}},{"type":"text","value":" property:","position":{"start":{"line":8,"column":410,"offset":712},"end":{"line":8,"column":420,"offset":722},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":303},"end":{"line":8,"column":420,"offset":722},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nGreeting<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10,"column":1,"offset":724},"end":{"line":24,"column":4,"offset":950},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">PropTypes</code>","position":{"start":{"line":26,"column":1,"offset":952},"end":{"line":26,"column":12,"offset":963},"indent":[]}},{"type":"text","value":" exports a range of validators that can be used to make sure the data you receive is valid. In this example, we’re using ","position":{"start":{"line":26,"column":12,"offset":963},"end":{"line":26,"column":133,"offset":1084},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">PropTypes.string</code>","position":{"start":{"line":26,"column":133,"offset":1084},"end":{"line":26,"column":151,"offset":1102},"indent":[]}},{"type":"text","value":". When an invalid value is provided for a prop, a warning will be shown in the JavaScript console. For performance reasons, ","position":{"start":{"line":26,"column":151,"offset":1102},"end":{"line":26,"column":275,"offset":1226},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">propTypes</code>","position":{"start":{"line":26,"column":275,"offset":1226},"end":{"line":26,"column":286,"offset":1237},"indent":[]}},{"type":"text","value":" is only checked in development mode.","position":{"start":{"line":26,"column":286,"offset":1237},"end":{"line":26,"column":323,"offset":1274},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":952},"end":{"line":26,"column":323,"offset":1274},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#proptypes","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"PropTypes ","position":{"start":{"line":28,"column":5,"offset":1280},"end":{"line":28,"column":27,"offset":1302},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1276},"end":{"line":28,"column":27,"offset":1302},"indent":[]},"data":{"id":"proptypes","htmlAttributes":{"id":"proptypes"},"hProperties":{"id":"proptypes"}}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example documenting the different validators provided:","position":{"start":{"line":30,"column":1,"offset":1304},"end":{"line":30,"column":66,"offset":1369},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1304},"end":{"line":30,"column":66,"offset":1369},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// You can declare that a prop is a specific JS type. By default, these</span>\n  <span class=\"token comment\">// are all optional.</span>\n  optionalArray<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span>\n  optionalBool<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">,</span>\n  optionalFunc<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span>\n  optionalNumber<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n  optionalObject<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">,</span>\n  optionalString<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  optionalSymbol<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>symbol<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Anything that can be rendered: numbers, strings, elements or an array</span>\n  <span class=\"token comment\">// (or fragment) containing these types.</span>\n  optionalNode<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// A React element.</span>\n  optionalElement<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// A React element type (ie. MyComponent).</span>\n  optionalElementType<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>elementType<span class=\"token punctuation\">,</span>\n  \n  <span class=\"token comment\">// You can also declare that a prop is an instance of a class. This uses</span>\n  <span class=\"token comment\">// JS's instanceof operator.</span>\n  optionalMessage<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// You can ensure that your prop is limited to specific values by treating</span>\n  <span class=\"token comment\">// it as an enum.</span>\n  optionalEnum<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'News'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Photos'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// An object that could be one of many types</span>\n  optionalUnion<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOfType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n    PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// An array of a certain type</span>\n  optionalArrayOf<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// An object with property values of a certain type</span>\n  optionalObjectOf<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">objectOf</span><span class=\"token punctuation\">(</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// An object taking on a particular shape</span>\n  optionalObjectWithShape<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">shape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    color<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    fontSize<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  \n  <span class=\"token comment\">// An object with warnings on extra properties</span>\n  optionalObjectWithStrictShape<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">exact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    quantity<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   \n\n  <span class=\"token comment\">// You can chain any of the above with `isRequired` to make sure a warning</span>\n  <span class=\"token comment\">// is shown if the prop isn't provided.</span>\n  requiredFunc<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// A value of any data type</span>\n  requiredAny<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>any<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// You can also specify a custom validator. It should return an Error</span>\n  <span class=\"token comment\">// object if the validation fails. Don't `console.warn` or throw, as this</span>\n  <span class=\"token comment\">// won't work inside `oneOfType`.</span>\n  <span class=\"token function-variable function\">customProp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\">/matchme/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Invalid prop `'</span> <span class=\"token operator\">+</span> propName <span class=\"token operator\">+</span> <span class=\"token string\">'` supplied to'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' `'</span> <span class=\"token operator\">+</span> componentName <span class=\"token operator\">+</span> <span class=\"token string\">'`. Validation failed.'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// You can also supply a custom validator to `arrayOf` and `objectOf`.</span>\n  <span class=\"token comment\">// It should return an Error object if the validation fails. The validator</span>\n  <span class=\"token comment\">// will be called for each key in the array or object. The first two</span>\n  <span class=\"token comment\">// arguments of the validator are the array or object itself, and the</span>\n  <span class=\"token comment\">// current item's key.</span>\n  customArrayProp<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propValue<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> propFullName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\">/matchme/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>propValue<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Invalid prop `'</span> <span class=\"token operator\">+</span> propFullName <span class=\"token operator\">+</span> <span class=\"token string\">'` supplied to'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' `'</span> <span class=\"token operator\">+</span> componentName <span class=\"token operator\">+</span> <span class=\"token string\">'`. Validation failed.'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":32,"column":1,"offset":1371},"end":{"line":122,"column":4,"offset":4407},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#requiring-single-child","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Requiring Single Child ","position":{"start":{"line":124,"column":5,"offset":4413},"end":{"line":124,"column":53,"offset":4461},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":4409},"end":{"line":124,"column":53,"offset":4461},"indent":[]},"data":{"id":"requiring-single-child","htmlAttributes":{"id":"requiring-single-child"},"hProperties":{"id":"requiring-single-child"}}},{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":126,"column":1,"offset":4463},"end":{"line":126,"column":6,"offset":4468},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">PropTypes.element</code>","position":{"start":{"line":126,"column":6,"offset":4468},"end":{"line":126,"column":25,"offset":4487},"indent":[]}},{"type":"text","value":" you can specify that only a single child can be passed to a component as children.","position":{"start":{"line":126,"column":25,"offset":4487},"end":{"line":126,"column":108,"offset":4570},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4463},"end":{"line":126,"column":108,"offset":4570},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// This must be exactly one element or it will warn.</span>\n    <span class=\"token keyword\">const</span> children <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":128,"column":1,"offset":4572},"end":{"line":146,"column":4,"offset":4923},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#default-prop-values","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Default Prop Values ","position":{"start":{"line":148,"column":5,"offset":4929},"end":{"line":148,"column":47,"offset":4971},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":4925},"end":{"line":148,"column":47,"offset":4971},"indent":[]},"data":{"id":"default-prop-values","htmlAttributes":{"id":"default-prop-values"},"hProperties":{"id":"default-prop-values"}}},{"type":"paragraph","children":[{"type":"text","value":"You can define default values for your ","position":{"start":{"line":150,"column":1,"offset":4973},"end":{"line":150,"column":40,"offset":5012},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">props</code>","position":{"start":{"line":150,"column":40,"offset":5012},"end":{"line":150,"column":47,"offset":5019},"indent":[]}},{"type":"text","value":" by assigning to the special ","position":{"start":{"line":150,"column":47,"offset":5019},"end":{"line":150,"column":76,"offset":5048},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">defaultProps</code>","position":{"start":{"line":150,"column":76,"offset":5048},"end":{"line":150,"column":90,"offset":5062},"indent":[]}},{"type":"text","value":" property:","position":{"start":{"line":150,"column":90,"offset":5062},"end":{"line":150,"column":100,"offset":5072},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4973},"end":{"line":150,"column":100,"offset":5072},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Specifies the default values for props:</span>\nGreeting<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Stranger'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Renders \"Hello, Stranger\":</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":152,"column":1,"offset":5074},"end":{"line":171,"column":4,"offset":5407},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you are using a Babel transform like ","position":{"start":{"line":173,"column":1,"offset":5409},"end":{"line":173,"column":41,"offset":5449},"indent":[]}},{"type":"link","title":null,"url":"https://babeljs.io/docs/plugins/transform-class-properties/","children":[{"type":"text","value":"transform-class-properties","position":{"start":{"line":173,"column":42,"offset":5450},"end":{"line":173,"column":68,"offset":5476},"indent":[]}}],"position":{"start":{"line":173,"column":41,"offset":5449},"end":{"line":173,"column":130,"offset":5538},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" , you can also declare ","position":{"start":{"line":173,"column":130,"offset":5538},"end":{"line":173,"column":154,"offset":5562},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">defaultProps</code>","position":{"start":{"line":173,"column":154,"offset":5562},"end":{"line":173,"column":168,"offset":5576},"indent":[]}},{"type":"text","value":" as static property within a React component class. This syntax has not yet been finalized though and will require a compilation step to work within a browser. For more information, see the ","position":{"start":{"line":173,"column":168,"offset":5576},"end":{"line":173,"column":358,"offset":5766},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/tc39/proposal-class-fields","children":[{"type":"text","value":"class fields proposal","position":{"start":{"line":173,"column":359,"offset":5767},"end":{"line":173,"column":380,"offset":5788},"indent":[]}}],"position":{"start":{"line":173,"column":358,"offset":5766},"end":{"line":173,"column":428,"offset":5836},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":173,"column":428,"offset":5836},"end":{"line":173,"column":429,"offset":5837},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":5409},"end":{"line":173,"column":429,"offset":5837},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'stranger'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":175,"column":1,"offset":5839},"end":{"line":187,"column":4,"offset":6029},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":189,"column":1,"offset":6031},"end":{"line":189,"column":5,"offset":6035},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">defaultProps</code>","position":{"start":{"line":189,"column":5,"offset":6035},"end":{"line":189,"column":19,"offset":6049},"indent":[]}},{"type":"text","value":" will be used to ensure that ","position":{"start":{"line":189,"column":19,"offset":6049},"end":{"line":189,"column":48,"offset":6078},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">this.props.name</code>","position":{"start":{"line":189,"column":48,"offset":6078},"end":{"line":189,"column":65,"offset":6095},"indent":[]}},{"type":"text","value":" will have a value if it was not specified by the parent component. The ","position":{"start":{"line":189,"column":65,"offset":6095},"end":{"line":189,"column":137,"offset":6167},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">propTypes</code>","position":{"start":{"line":189,"column":137,"offset":6167},"end":{"line":189,"column":148,"offset":6178},"indent":[]}},{"type":"text","value":" typechecking happens after ","position":{"start":{"line":189,"column":148,"offset":6178},"end":{"line":189,"column":176,"offset":6206},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">defaultProps</code>","position":{"start":{"line":189,"column":176,"offset":6206},"end":{"line":189,"column":190,"offset":6220},"indent":[]}},{"type":"text","value":" are resolved, so typechecking will also apply to the ","position":{"start":{"line":189,"column":190,"offset":6220},"end":{"line":189,"column":244,"offset":6274},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">defaultProps</code>","position":{"start":{"line":189,"column":244,"offset":6274},"end":{"line":189,"column":258,"offset":6288},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":189,"column":258,"offset":6288},"end":{"line":189,"column":259,"offset":6289},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6031},"end":{"line":189,"column":259,"offset":6289},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":190,"column":1,"offset":6290}}}}