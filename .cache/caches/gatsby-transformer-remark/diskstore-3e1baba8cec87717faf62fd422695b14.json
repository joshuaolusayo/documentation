{"expireTime":9007200851888150000,"key":"transformer-remark-markdown-ast-ff2aaa9b8d891ee53fef7344fd11641a-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note:","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":8,"offset":8},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":8,"offset":8},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":4,"column":3,"offset":13},"end":{"line":4,"column":21,"offset":31},"indent":[]}},{"type":"text","value":" is deprecated as of React v15. The recommendation is to explicitly set the value and change handler, instead of using ","position":{"start":{"line":4,"column":21,"offset":31},"end":{"line":4,"column":140,"offset":150},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":4,"column":140,"offset":150},"end":{"line":4,"column":158,"offset":168},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":4,"column":158,"offset":168},"end":{"line":4,"column":159,"offset":169},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":13},"end":{"line":4,"column":159,"offset":169},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":159,"offset":169},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Importing","position":{"start":{"line":6,"column":3,"offset":173},"end":{"line":6,"column":12,"offset":182},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":171},"end":{"line":6,"column":14,"offset":184},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":171},"end":{"line":6,"column":14,"offset":184},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> LinkedStateMixin <span class=\"token keyword\">from</span> <span class=\"token string\">'react-addons-linked-state-mixin'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">var</span> LinkedStateMixin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-addons-linked-state-mixin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES5 with npm</span></code></pre></div>","position":{"start":{"line":8,"column":1,"offset":186},"end":{"line":11,"column":4,"offset":357},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#overview","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Overview ","position":{"start":{"line":13,"column":4,"offset":362},"end":{"line":13,"column":24,"offset":382},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":359},"end":{"line":13,"column":24,"offset":382},"indent":[]},"data":{"id":"overview","htmlAttributes":{"id":"overview"},"hProperties":{"id":"overview"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":15,"column":1,"offset":384},"end":{"line":15,"column":19,"offset":402},"indent":[]}},{"type":"text","value":" is an easy way to express two-way binding with React.","position":{"start":{"line":15,"column":19,"offset":402},"end":{"line":15,"column":73,"offset":456},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":384},"end":{"line":15,"column":73,"offset":456},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In React, data flows one way: from owner to child. We think that this makes your app’s code easier to understand. You can think of it as “one-way data binding.”","position":{"start":{"line":17,"column":1,"offset":458},"end":{"line":17,"column":161,"offset":618},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":458},"end":{"line":17,"column":161,"offset":618},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, there are lots of applications that require you to read some data and flow it back into your program. For example, when developing forms, you’ll often want to update some React ","position":{"start":{"line":19,"column":1,"offset":620},"end":{"line":19,"column":187,"offset":806},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">state</code>","position":{"start":{"line":19,"column":187,"offset":806},"end":{"line":19,"column":194,"offset":813},"indent":[]}},{"type":"text","value":" when you receive user input. Or perhaps you want to perform layout in JavaScript and react to changes in some DOM element size.","position":{"start":{"line":19,"column":194,"offset":813},"end":{"line":19,"column":322,"offset":941},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":620},"end":{"line":19,"column":322,"offset":941},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In React, you would implement this by listening to a “change” event, read from your data source (usually the DOM) and call ","position":{"start":{"line":21,"column":1,"offset":943},"end":{"line":21,"column":124,"offset":1066},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">setState()</code>","position":{"start":{"line":21,"column":124,"offset":1066},"end":{"line":21,"column":136,"offset":1078},"indent":[]}},{"type":"text","value":" on one of your components. “Closing the data flow loop” explicitly leads to more understandable and easier-to-maintain programs. See ","position":{"start":{"line":21,"column":136,"offset":1078},"end":{"line":21,"column":270,"offset":1212},"indent":[]}},{"type":"link","title":null,"url":"/docs/forms.html","children":[{"type":"text","value":"our forms documentation","position":{"start":{"line":21,"column":271,"offset":1213},"end":{"line":21,"column":294,"offset":1236},"indent":[]}}],"position":{"start":{"line":21,"column":270,"offset":1212},"end":{"line":21,"column":313,"offset":1255},"indent":[]}},{"type":"text","value":" for more information.","position":{"start":{"line":21,"column":313,"offset":1255},"end":{"line":21,"column":335,"offset":1277},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":943},"end":{"line":21,"column":335,"offset":1277},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two-way binding — implicitly enforcing that some value in the DOM is always consistent with some React ","position":{"start":{"line":23,"column":1,"offset":1279},"end":{"line":23,"column":105,"offset":1383},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">state</code>","position":{"start":{"line":23,"column":105,"offset":1383},"end":{"line":23,"column":112,"offset":1390},"indent":[]}},{"type":"text","value":" — is concise and supports a wide variety of applications. We’ve provided ","position":{"start":{"line":23,"column":112,"offset":1390},"end":{"line":23,"column":187,"offset":1465},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":23,"column":187,"offset":1465},"end":{"line":23,"column":205,"offset":1483},"indent":[]}},{"type":"text","value":": syntactic sugar for setting up the common data flow loop pattern described above, or “linking” some data source to React ","position":{"start":{"line":23,"column":205,"offset":1483},"end":{"line":23,"column":328,"offset":1606},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">state</code>","position":{"start":{"line":23,"column":328,"offset":1606},"end":{"line":23,"column":335,"offset":1613},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":335,"offset":1613},"end":{"line":23,"column":336,"offset":1614},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1279},"end":{"line":23,"column":336,"offset":1614},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note:","position":{"start":{"line":25,"column":3,"offset":1618},"end":{"line":25,"column":8,"offset":1623},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":1618},"end":{"line":25,"column":8,"offset":1623},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":27,"column":3,"offset":1628},"end":{"line":27,"column":21,"offset":1646},"indent":[]}},{"type":"text","value":" is just a thin wrapper and convention around the ","position":{"start":{"line":27,"column":21,"offset":1646},"end":{"line":27,"column":71,"offset":1696},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">onChange</code>","position":{"start":{"line":27,"column":71,"offset":1696},"end":{"line":27,"column":81,"offset":1706},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":27,"column":81,"offset":1706},"end":{"line":27,"column":82,"offset":1707},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">setState()</code>","position":{"start":{"line":27,"column":82,"offset":1707},"end":{"line":27,"column":94,"offset":1719},"indent":[]}},{"type":"text","value":" pattern. It doesn’t fundamentally change how data flows in your React application.","position":{"start":{"line":27,"column":94,"offset":1719},"end":{"line":27,"column":177,"offset":1802},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":1628},"end":{"line":27,"column":177,"offset":1802},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1616},"end":{"line":27,"column":177,"offset":1802},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#linkedstatemixin-before-and-after","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"LinkedStateMixin: Before and After ","position":{"start":{"line":29,"column":4,"offset":1807},"end":{"line":29,"column":75,"offset":1878},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1804},"end":{"line":29,"column":75,"offset":1878},"indent":[]},"data":{"id":"linkedstatemixin-before-and-after","htmlAttributes":{"id":"linkedstatemixin-before-and-after"},"hProperties":{"id":"linkedstatemixin-before-and-after"}}},{"type":"paragraph","children":[{"type":"text","value":"Here’s a simple form example without using ","position":{"start":{"line":31,"column":1,"offset":1880},"end":{"line":31,"column":44,"offset":1923},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":31,"column":44,"offset":1923},"end":{"line":31,"column":62,"offset":1941},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":31,"column":62,"offset":1941},"end":{"line":31,"column":63,"offset":1942},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1880},"end":{"line":31,"column":63,"offset":1942},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> NoLink <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handleChange</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1944},"end":{"line":48,"column":4,"offset":2354},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This works really well and it’s very clear how data is flowing, however, with a lot of form fields it could get a bit verbose. Let’s use ","position":{"start":{"line":50,"column":1,"offset":2356},"end":{"line":50,"column":138,"offset":2493},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":50,"column":138,"offset":2493},"end":{"line":50,"column":156,"offset":2511},"indent":[]}},{"type":"text","value":" to save us some typing:","position":{"start":{"line":50,"column":156,"offset":2511},"end":{"line":50,"column":180,"offset":2535},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2356},"end":{"line":50,"column":180,"offset":2535},"indent":[]}},{"type":"html","lang":"jsx{4,9}","meta":null,"value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> WithLink <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  mixins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>LinkedStateMixin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">valueLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">linkState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":52,"column":1,"offset":2537},"end":{"line":64,"column":4,"offset":2850},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":66,"column":1,"offset":2852},"end":{"line":66,"column":19,"offset":2870},"indent":[]}},{"type":"text","value":" adds a method to your React component called ","position":{"start":{"line":66,"column":19,"offset":2870},"end":{"line":66,"column":65,"offset":2916},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">linkState()</code>","position":{"start":{"line":66,"column":65,"offset":2916},"end":{"line":66,"column":78,"offset":2929},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":66,"column":78,"offset":2929},"end":{"line":66,"column":80,"offset":2931},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">linkState()</code>","position":{"start":{"line":66,"column":80,"offset":2931},"end":{"line":66,"column":93,"offset":2944},"indent":[]}},{"type":"text","value":" returns a ","position":{"start":{"line":66,"column":93,"offset":2944},"end":{"line":66,"column":104,"offset":2955},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">valueLink</code>","position":{"start":{"line":66,"column":104,"offset":2955},"end":{"line":66,"column":115,"offset":2966},"indent":[]}},{"type":"text","value":" object which contains the current value of the React state and a callback to change it.","position":{"start":{"line":66,"column":115,"offset":2966},"end":{"line":66,"column":203,"offset":3054},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2852},"end":{"line":66,"column":203,"offset":3054},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">valueLink</code>","position":{"start":{"line":68,"column":1,"offset":3056},"end":{"line":68,"column":12,"offset":3067},"indent":[]}},{"type":"text","value":" objects can be passed up and down the tree as props, so it’s easy (and explicit) to set up two-way binding between a component deep in the hierarchy and state that lives higher in the hierarchy.","position":{"start":{"line":68,"column":12,"offset":3067},"end":{"line":68,"column":207,"offset":3262},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3056},"end":{"line":68,"column":207,"offset":3262},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that checkboxes have a special behavior regarding their ","position":{"start":{"line":70,"column":1,"offset":3264},"end":{"line":70,"column":62,"offset":3325},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">value</code>","position":{"start":{"line":70,"column":62,"offset":3325},"end":{"line":70,"column":69,"offset":3332},"indent":[]}},{"type":"text","value":" attribute, which is the value that will be sent on form submit if the checkbox is checked (defaults to ","position":{"start":{"line":70,"column":69,"offset":3332},"end":{"line":70,"column":173,"offset":3436},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">on</code>","position":{"start":{"line":70,"column":173,"offset":3436},"end":{"line":70,"column":177,"offset":3440},"indent":[]}},{"type":"text","value":"). The ","position":{"start":{"line":70,"column":177,"offset":3440},"end":{"line":70,"column":184,"offset":3447},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">value</code>","position":{"start":{"line":70,"column":184,"offset":3447},"end":{"line":70,"column":191,"offset":3454},"indent":[]}},{"type":"text","value":" attribute is not updated when the checkbox is checked or unchecked. For checkboxes, you should use ","position":{"start":{"line":70,"column":191,"offset":3454},"end":{"line":70,"column":291,"offset":3554},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">checkedLink</code>","position":{"start":{"line":70,"column":291,"offset":3554},"end":{"line":70,"column":304,"offset":3567},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":70,"column":304,"offset":3567},"end":{"line":70,"column":316,"offset":3579},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">valueLink</code>","position":{"start":{"line":70,"column":316,"offset":3579},"end":{"line":70,"column":327,"offset":3590},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":70,"column":327,"offset":3590},"end":{"line":70,"column":328,"offset":3591},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3264},"end":{"line":70,"column":328,"offset":3591},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">&lt;input type=&quot;checkbox&quot; checkedLink={this.linkState(&#39;booleanValue&#39;)} /&gt;</code></pre></div>","position":{"start":{"line":71,"column":1,"offset":3592},"end":{"line":73,"column":4,"offset":3670},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#under-the-hood","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Under the Hood ","position":{"start":{"line":75,"column":4,"offset":3675},"end":{"line":75,"column":36,"offset":3707},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3672},"end":{"line":75,"column":36,"offset":3707},"indent":[]},"data":{"id":"under-the-hood","htmlAttributes":{"id":"under-the-hood"},"hProperties":{"id":"under-the-hood"}}},{"type":"paragraph","children":[{"type":"text","value":"There are two sides to ","position":{"start":{"line":77,"column":1,"offset":3709},"end":{"line":77,"column":24,"offset":3732},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":77,"column":24,"offset":3732},"end":{"line":77,"column":42,"offset":3750},"indent":[]}},{"type":"text","value":": the place where you create the ","position":{"start":{"line":77,"column":42,"offset":3750},"end":{"line":77,"column":75,"offset":3783},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">valueLink</code>","position":{"start":{"line":77,"column":75,"offset":3783},"end":{"line":77,"column":86,"offset":3794},"indent":[]}},{"type":"text","value":" instance and the place where you use it. To prove how simple ","position":{"start":{"line":77,"column":86,"offset":3794},"end":{"line":77,"column":148,"offset":3856},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":77,"column":148,"offset":3856},"end":{"line":77,"column":166,"offset":3874},"indent":[]}},{"type":"text","value":" is, let’s rewrite each side separately to be more explicit.","position":{"start":{"line":77,"column":166,"offset":3874},"end":{"line":77,"column":226,"offset":3934},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3709},"end":{"line":77,"column":226,"offset":3934},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#valuelink-without-linkedstatemixin","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"valueLink Without LinkedStateMixin ","position":{"start":{"line":79,"column":5,"offset":3940},"end":{"line":79,"column":77,"offset":4012},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3936},"end":{"line":79,"column":77,"offset":4012},"indent":[]},"data":{"id":"valuelink-without-linkedstatemixin","htmlAttributes":{"id":"valuelink-without-linkedstatemixin"},"hProperties":{"id":"valuelink-without-linkedstatemixin"}}},{"type":"html","lang":"jsx{7-9,11-14}","meta":null,"value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> WithoutMixin <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">handleChange</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> newValue<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">var</span> valueLink <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      requestChange<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">valueLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>valueLink<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":81,"column":1,"offset":4014},"end":{"line":99,"column":4,"offset":4474},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As you can see, ","position":{"start":{"line":101,"column":1,"offset":4476},"end":{"line":101,"column":17,"offset":4492},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">valueLink</code>","position":{"start":{"line":101,"column":17,"offset":4492},"end":{"line":101,"column":28,"offset":4503},"indent":[]}},{"type":"text","value":" objects are very simple objects that just have a ","position":{"start":{"line":101,"column":28,"offset":4503},"end":{"line":101,"column":78,"offset":4553},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">value</code>","position":{"start":{"line":101,"column":78,"offset":4553},"end":{"line":101,"column":85,"offset":4560},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":101,"column":85,"offset":4560},"end":{"line":101,"column":90,"offset":4565},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">requestChange</code>","position":{"start":{"line":101,"column":90,"offset":4565},"end":{"line":101,"column":105,"offset":4580},"indent":[]}},{"type":"text","value":" prop. And ","position":{"start":{"line":101,"column":105,"offset":4580},"end":{"line":101,"column":116,"offset":4591},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">LinkedStateMixin</code>","position":{"start":{"line":101,"column":116,"offset":4591},"end":{"line":101,"column":134,"offset":4609},"indent":[]}},{"type":"text","value":" is similarly simple: it just populates those fields with a value from ","position":{"start":{"line":101,"column":134,"offset":4609},"end":{"line":101,"column":205,"offset":4680},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">this.state</code>","position":{"start":{"line":101,"column":205,"offset":4680},"end":{"line":101,"column":217,"offset":4692},"indent":[]}},{"type":"text","value":" and a callback that calls ","position":{"start":{"line":101,"column":217,"offset":4692},"end":{"line":101,"column":244,"offset":4719},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">this.setState()</code>","position":{"start":{"line":101,"column":244,"offset":4719},"end":{"line":101,"column":261,"offset":4736},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":101,"column":261,"offset":4736},"end":{"line":101,"column":262,"offset":4737},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":4476},"end":{"line":101,"column":262,"offset":4737},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#linkedstatemixin-without-valuelink","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"LinkedStateMixin Without valueLink ","position":{"start":{"line":103,"column":5,"offset":4743},"end":{"line":103,"column":77,"offset":4815},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":4739},"end":{"line":103,"column":77,"offset":4815},"indent":[]},"data":{"id":"linkedstatemixin-without-valuelink","htmlAttributes":{"id":"linkedstatemixin-without-valuelink"},"hProperties":{"id":"linkedstatemixin-without-valuelink"}}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">var</span> LinkedStateMixin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-addons-linked-state-mixin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> WithoutLink <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  mixins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>LinkedStateMixin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> valueLink <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">linkState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      valueLink<span class=\"token punctuation\">.</span><span class=\"token function\">requestChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>valueLink<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":105,"column":1,"offset":4817},"end":{"line":122,"column":4,"offset":5343},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":124,"column":1,"offset":5345},"end":{"line":124,"column":5,"offset":5349},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">valueLink</code>","position":{"start":{"line":124,"column":5,"offset":5349},"end":{"line":124,"column":16,"offset":5360},"indent":[]}},{"type":"text","value":" prop is also quite simple. It simply handles the ","position":{"start":{"line":124,"column":16,"offset":5360},"end":{"line":124,"column":66,"offset":5410},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">onChange</code>","position":{"start":{"line":124,"column":66,"offset":5410},"end":{"line":124,"column":76,"offset":5420},"indent":[]}},{"type":"text","value":" event and calls ","position":{"start":{"line":124,"column":76,"offset":5420},"end":{"line":124,"column":93,"offset":5437},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">this.props.valueLink.requestChange()</code>","position":{"start":{"line":124,"column":93,"offset":5437},"end":{"line":124,"column":131,"offset":5475},"indent":[]}},{"type":"text","value":" and also uses ","position":{"start":{"line":124,"column":131,"offset":5475},"end":{"line":124,"column":146,"offset":5490},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">this.props.valueLink.value</code>","position":{"start":{"line":124,"column":146,"offset":5490},"end":{"line":124,"column":174,"offset":5518},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":124,"column":174,"offset":5518},"end":{"line":124,"column":186,"offset":5530},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">this.props.value</code>","position":{"start":{"line":124,"column":186,"offset":5530},"end":{"line":124,"column":204,"offset":5548},"indent":[]}},{"type":"text","value":". That’s it!","position":{"start":{"line":124,"column":204,"offset":5548},"end":{"line":124,"column":216,"offset":5560},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":5345},"end":{"line":124,"column":216,"offset":5560},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":125,"column":1,"offset":5561}}}}