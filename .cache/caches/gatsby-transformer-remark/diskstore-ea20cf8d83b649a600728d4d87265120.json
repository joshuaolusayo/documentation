{"expireTime":9007200851888155000,"key":"transformer-remark-markdown-ast-958f64ec9f4e976f7e5b6ae3ffa017c3-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A higher-order component (HOC) is an advanced technique in React for reusing component logic. HOCs are not part of the React API, per se. They are a pattern that emerges from React’s compositional nature.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":205,"offset":205},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":205,"offset":205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Concretely, ","position":{"start":{"line":4,"column":1,"offset":207},"end":{"line":4,"column":13,"offset":219},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"a higher-order component is a function that takes a component and returns a new component.","position":{"start":{"line":4,"column":15,"offset":221},"end":{"line":4,"column":105,"offset":311},"indent":[]}}],"position":{"start":{"line":4,"column":13,"offset":219},"end":{"line":4,"column":107,"offset":313},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":207},"end":{"line":4,"column":107,"offset":313},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">higherOrderComponent</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":315},"end":{"line":8,"column":4,"offset":390},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whereas a component transforms props into UI, a higher-order component transforms a component into another component.","position":{"start":{"line":10,"column":1,"offset":392},"end":{"line":10,"column":118,"offset":509},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":392},"end":{"line":10,"column":118,"offset":509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"HOCs are common in third-party React libraries, such as Redux’s ","position":{"start":{"line":12,"column":1,"offset":511},"end":{"line":12,"column":65,"offset":575},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/reduxjs/react-redux/blob/master/docs/api/connect.md#connect","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">connect</code>","position":{"start":{"line":12,"column":66,"offset":576},"end":{"line":12,"column":75,"offset":585},"indent":[]}}],"position":{"start":{"line":12,"column":65,"offset":575},"end":{"line":12,"column":156,"offset":666},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" and Relay’s ","position":{"start":{"line":12,"column":156,"offset":666},"end":{"line":12,"column":169,"offset":679},"indent":[]}},{"type":"link","title":null,"url":"http://facebook.github.io/relay/docs/en/fragment-container.html","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">createFragmentContainer</code>","position":{"start":{"line":12,"column":170,"offset":680},"end":{"line":12,"column":195,"offset":705},"indent":[]}}],"position":{"start":{"line":12,"column":169,"offset":679},"end":{"line":12,"column":261,"offset":771},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":12,"column":261,"offset":771},"end":{"line":12,"column":262,"offset":772},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":511},"end":{"line":12,"column":262,"offset":772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this document, we’ll discuss why higher-order components are useful, and how to write your own.","position":{"start":{"line":14,"column":1,"offset":774},"end":{"line":14,"column":99,"offset":872},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":774},"end":{"line":14,"column":99,"offset":872},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#use-hocs-for-cross-cutting-concerns","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Use HOCs For Cross-Cutting Concerns ","position":{"start":{"line":16,"column":4,"offset":877},"end":{"line":16,"column":78,"offset":951},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":874},"end":{"line":16,"column":78,"offset":951},"indent":[]},"data":{"id":"use-hocs-for-cross-cutting-concerns","htmlAttributes":{"id":"use-hocs-for-cross-cutting-concerns"},"hProperties":{"id":"use-hocs-for-cross-cutting-concerns"}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":18,"column":5,"offset":957},"end":{"line":18,"column":9,"offset":961},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":955},"end":{"line":18,"column":11,"offset":963},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":955},"end":{"line":18,"column":11,"offset":963},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We previously recommended mixins as a way to handle cross-cutting concerns. We’ve since realized that mixins create more trouble than they are worth. ","position":{"start":{"line":20,"column":3,"offset":968},"end":{"line":20,"column":153,"offset":1118},"indent":[]}},{"type":"link","title":null,"url":"/blog/2016/07/13/mixins-considered-harmful.html","children":[{"type":"text","value":"Read more","position":{"start":{"line":20,"column":154,"offset":1119},"end":{"line":20,"column":163,"offset":1128},"indent":[]}}],"position":{"start":{"line":20,"column":153,"offset":1118},"end":{"line":20,"column":213,"offset":1178},"indent":[]}},{"type":"text","value":" about why we’ve moved away from mixins and how you can transition your existing components.","position":{"start":{"line":20,"column":213,"offset":1178},"end":{"line":20,"column":305,"offset":1270},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":968},"end":{"line":20,"column":305,"offset":1270},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":953},"end":{"line":20,"column":305,"offset":1270},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Components are the primary unit of code reuse in React. However, you’ll find that some patterns aren’t a straightforward fit for traditional components.","position":{"start":{"line":22,"column":1,"offset":1272},"end":{"line":22,"column":153,"offset":1424},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1272},"end":{"line":22,"column":153,"offset":1424},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, say you have a ","position":{"start":{"line":24,"column":1,"offset":1426},"end":{"line":24,"column":29,"offset":1454},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">CommentList</code>","position":{"start":{"line":24,"column":29,"offset":1454},"end":{"line":24,"column":42,"offset":1467},"indent":[]}},{"type":"text","value":" component that subscribes to an external data source to render a list of comments:","position":{"start":{"line":24,"column":42,"offset":1467},"end":{"line":24,"column":125,"offset":1550},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1426},"end":{"line":24,"column":125,"offset":1550},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CommentList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// \"DataSource\" is some global data source</span>\n      comments<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Subscribe to changes</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Clean up listener</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update component state whenever the data source changes</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      comments<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comment</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Comment</span></span> <span class=\"token attr-name\">comment</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":1552},"end":{"line":64,"column":4,"offset":2381},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Later, you write a component for subscribing to a single blog post, which follows a similar pattern:","position":{"start":{"line":66,"column":1,"offset":2383},"end":{"line":66,"column":101,"offset":2483},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2383},"end":{"line":66,"column":101,"offset":2483},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPost</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      blogPost<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      blogPost<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TextBlock</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>blogPost<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2485},"end":{"line":96,"column":4,"offset":3058},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">CommentList</code>","position":{"start":{"line":98,"column":1,"offset":3060},"end":{"line":98,"column":14,"offset":3073},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":98,"column":14,"offset":3073},"end":{"line":98,"column":19,"offset":3078},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">BlogPost</code>","position":{"start":{"line":98,"column":19,"offset":3078},"end":{"line":98,"column":29,"offset":3088},"indent":[]}},{"type":"text","value":" aren’t identical — they call different methods on ","position":{"start":{"line":98,"column":29,"offset":3088},"end":{"line":98,"column":80,"offset":3139},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">DataSource</code>","position":{"start":{"line":98,"column":80,"offset":3139},"end":{"line":98,"column":92,"offset":3151},"indent":[]}},{"type":"text","value":", and they render different output. But much of their implementation is the same:","position":{"start":{"line":98,"column":92,"offset":3151},"end":{"line":98,"column":173,"offset":3232},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3060},"end":{"line":98,"column":173,"offset":3232},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"On mount, add a change listener to ","position":{"start":{"line":100,"column":3,"offset":3236},"end":{"line":100,"column":38,"offset":3271},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">DataSource</code>","position":{"start":{"line":100,"column":38,"offset":3271},"end":{"line":100,"column":50,"offset":3283},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":100,"column":50,"offset":3283},"end":{"line":100,"column":51,"offset":3284},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":3236},"end":{"line":100,"column":51,"offset":3284},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3234},"end":{"line":100,"column":51,"offset":3284},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Inside the listener, call ","position":{"start":{"line":101,"column":3,"offset":3287},"end":{"line":101,"column":29,"offset":3313},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">setState</code>","position":{"start":{"line":101,"column":29,"offset":3313},"end":{"line":101,"column":39,"offset":3323},"indent":[]}},{"type":"text","value":" whenever the data source changes.","position":{"start":{"line":101,"column":39,"offset":3323},"end":{"line":101,"column":73,"offset":3357},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":3287},"end":{"line":101,"column":73,"offset":3357},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3285},"end":{"line":101,"column":73,"offset":3357},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"On unmount, remove the change listener.","position":{"start":{"line":102,"column":3,"offset":3360},"end":{"line":102,"column":42,"offset":3399},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":3360},"end":{"line":102,"column":42,"offset":3399},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3358},"end":{"line":102,"column":42,"offset":3399},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3234},"end":{"line":102,"column":42,"offset":3399},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can imagine that in a large app, this same pattern of subscribing to ","position":{"start":{"line":104,"column":1,"offset":3401},"end":{"line":104,"column":74,"offset":3474},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">DataSource</code>","position":{"start":{"line":104,"column":74,"offset":3474},"end":{"line":104,"column":86,"offset":3486},"indent":[]}},{"type":"text","value":" and calling ","position":{"start":{"line":104,"column":86,"offset":3486},"end":{"line":104,"column":99,"offset":3499},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">setState</code>","position":{"start":{"line":104,"column":99,"offset":3499},"end":{"line":104,"column":109,"offset":3509},"indent":[]}},{"type":"text","value":" will occur over and over again. We want an abstraction that allows us to define this logic in a single place and share it across many components. This is where higher-order components excel.","position":{"start":{"line":104,"column":109,"offset":3509},"end":{"line":104,"column":300,"offset":3700},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3401},"end":{"line":104,"column":300,"offset":3700},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can write a function that creates components, like ","position":{"start":{"line":106,"column":1,"offset":3702},"end":{"line":106,"column":55,"offset":3756},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">CommentList</code>","position":{"start":{"line":106,"column":55,"offset":3756},"end":{"line":106,"column":68,"offset":3769},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":106,"column":68,"offset":3769},"end":{"line":106,"column":73,"offset":3774},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">BlogPost</code>","position":{"start":{"line":106,"column":73,"offset":3774},"end":{"line":106,"column":83,"offset":3784},"indent":[]}},{"type":"text","value":", that subscribe to ","position":{"start":{"line":106,"column":83,"offset":3784},"end":{"line":106,"column":103,"offset":3804},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">DataSource</code>","position":{"start":{"line":106,"column":103,"offset":3804},"end":{"line":106,"column":115,"offset":3816},"indent":[]}},{"type":"text","value":". The function will accept as one of its arguments a child component that receives the subscribed data as a prop. Let’s call the function ","position":{"start":{"line":106,"column":115,"offset":3816},"end":{"line":106,"column":253,"offset":3954},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">withSubscription</code>","position":{"start":{"line":106,"column":253,"offset":3954},"end":{"line":106,"column":271,"offset":3972},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":106,"column":271,"offset":3972},"end":{"line":106,"column":272,"offset":3973},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3702},"end":{"line":106,"column":272,"offset":3973},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> CommentListWithSubscription <span class=\"token operator\">=</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span>\n  CommentList<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">DataSource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> BlogPostWithSubscription <span class=\"token operator\">=</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span>\n  BlogPost<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">DataSource<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":108,"column":1,"offset":3975},"end":{"line":118,"column":4,"offset":4224},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The first parameter is the wrapped component. The second parameter retrieves the data we’re interested in, given a ","position":{"start":{"line":120,"column":1,"offset":4226},"end":{"line":120,"column":116,"offset":4341},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">DataSource</code>","position":{"start":{"line":120,"column":116,"offset":4341},"end":{"line":120,"column":128,"offset":4353},"indent":[]}},{"type":"text","value":" and the current props.","position":{"start":{"line":120,"column":128,"offset":4353},"end":{"line":120,"column":151,"offset":4376},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4226},"end":{"line":120,"column":151,"offset":4376},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When ","position":{"start":{"line":122,"column":1,"offset":4378},"end":{"line":122,"column":6,"offset":4383},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">CommentListWithSubscription</code>","position":{"start":{"line":122,"column":6,"offset":4383},"end":{"line":122,"column":35,"offset":4412},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":122,"column":35,"offset":4412},"end":{"line":122,"column":40,"offset":4417},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">BlogPostWithSubscription</code>","position":{"start":{"line":122,"column":40,"offset":4417},"end":{"line":122,"column":66,"offset":4443},"indent":[]}},{"type":"text","value":" are rendered, ","position":{"start":{"line":122,"column":66,"offset":4443},"end":{"line":122,"column":81,"offset":4458},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">CommentList</code>","position":{"start":{"line":122,"column":81,"offset":4458},"end":{"line":122,"column":94,"offset":4471},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":122,"column":94,"offset":4471},"end":{"line":122,"column":99,"offset":4476},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">BlogPost</code>","position":{"start":{"line":122,"column":99,"offset":4476},"end":{"line":122,"column":109,"offset":4486},"indent":[]}},{"type":"text","value":" will be passed a ","position":{"start":{"line":122,"column":109,"offset":4486},"end":{"line":122,"column":127,"offset":4504},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">data</code>","position":{"start":{"line":122,"column":127,"offset":4504},"end":{"line":122,"column":133,"offset":4510},"indent":[]}},{"type":"text","value":" prop with the most current data retrieved from ","position":{"start":{"line":122,"column":133,"offset":4510},"end":{"line":122,"column":181,"offset":4558},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">DataSource</code>","position":{"start":{"line":122,"column":181,"offset":4558},"end":{"line":122,"column":193,"offset":4570},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":122,"column":193,"offset":4570},"end":{"line":122,"column":194,"offset":4571},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4378},"end":{"line":122,"column":194,"offset":4571},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// This function takes a component...</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent<span class=\"token punctuation\">,</span> selectData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...and returns another component...</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token function\">selectData</span><span class=\"token punctuation\">(</span>DataSource<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ... that takes care of the subscription...</span>\n      DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token function\">selectData</span><span class=\"token punctuation\">(</span>DataSource<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ... and renders the wrapped component with the fresh data!</span>\n      <span class=\"token comment\">// Notice that we pass through any additional props</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":124,"column":1,"offset":4573},"end":{"line":159,"column":4,"offset":5513},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that a HOC doesn’t modify the input component, nor does it use inheritance to copy its behavior. Rather, a HOC ","position":{"start":{"line":161,"column":1,"offset":5515},"end":{"line":161,"column":117,"offset":5631},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"composes","position":{"start":{"line":161,"column":118,"offset":5632},"end":{"line":161,"column":126,"offset":5640},"indent":[]}}],"position":{"start":{"line":161,"column":117,"offset":5631},"end":{"line":161,"column":127,"offset":5641},"indent":[]}},{"type":"text","value":" the original component by ","position":{"start":{"line":161,"column":127,"offset":5641},"end":{"line":161,"column":154,"offset":5668},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"wrapping","position":{"start":{"line":161,"column":155,"offset":5669},"end":{"line":161,"column":163,"offset":5677},"indent":[]}}],"position":{"start":{"line":161,"column":154,"offset":5668},"end":{"line":161,"column":164,"offset":5678},"indent":[]}},{"type":"text","value":" it in a container component. A HOC is a pure function with zero side-effects.","position":{"start":{"line":161,"column":164,"offset":5678},"end":{"line":161,"column":242,"offset":5756},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5515},"end":{"line":161,"column":242,"offset":5756},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"And that’s it! The wrapped component receives all the props of the container, along with a new prop, ","position":{"start":{"line":163,"column":1,"offset":5758},"end":{"line":163,"column":102,"offset":5859},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">data</code>","position":{"start":{"line":163,"column":102,"offset":5859},"end":{"line":163,"column":108,"offset":5865},"indent":[]}},{"type":"text","value":", which it uses to render its output. The HOC isn’t concerned with how or why the data is used, and the wrapped component isn’t concerned with where the data came from.","position":{"start":{"line":163,"column":108,"offset":5865},"end":{"line":163,"column":276,"offset":6033},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5758},"end":{"line":163,"column":276,"offset":6033},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":165,"column":1,"offset":6035},"end":{"line":165,"column":9,"offset":6043},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">withSubscription</code>","position":{"start":{"line":165,"column":9,"offset":6043},"end":{"line":165,"column":27,"offset":6061},"indent":[]}},{"type":"text","value":" is a normal function, you can add as many or as few arguments as you like. For example, you may want to make the name of the ","position":{"start":{"line":165,"column":27,"offset":6061},"end":{"line":165,"column":153,"offset":6187},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">data</code>","position":{"start":{"line":165,"column":153,"offset":6187},"end":{"line":165,"column":159,"offset":6193},"indent":[]}},{"type":"text","value":" prop configurable, to further isolate the HOC from the wrapped component. Or you could accept an argument that configures ","position":{"start":{"line":165,"column":159,"offset":6193},"end":{"line":165,"column":282,"offset":6316},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">shouldComponentUpdate</code>","position":{"start":{"line":165,"column":282,"offset":6316},"end":{"line":165,"column":305,"offset":6339},"indent":[]}},{"type":"text","value":", or one that configures the data source. These are all possible because the HOC has full control over how the component is defined.","position":{"start":{"line":165,"column":305,"offset":6339},"end":{"line":165,"column":437,"offset":6471},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":6035},"end":{"line":165,"column":437,"offset":6471},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Like components, the contract between ","position":{"start":{"line":167,"column":1,"offset":6473},"end":{"line":167,"column":39,"offset":6511},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">withSubscription</code>","position":{"start":{"line":167,"column":39,"offset":6511},"end":{"line":167,"column":57,"offset":6529},"indent":[]}},{"type":"text","value":" and the wrapped component is entirely props-based. This makes it easy to swap one HOC for a different one, as long as they provide the same props to the wrapped component. This may be useful if you change data-fetching libraries, for example.","position":{"start":{"line":167,"column":57,"offset":6529},"end":{"line":167,"column":300,"offset":6772},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":6473},"end":{"line":167,"column":300,"offset":6772},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#dont-mutate-the-original-component-use-composition","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Don’t Mutate the Original Component. Use Composition. ","position":{"start":{"line":169,"column":4,"offset":6777},"end":{"line":169,"column":111,"offset":6884},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":6774},"end":{"line":169,"column":111,"offset":6884},"indent":[]},"data":{"id":"dont-mutate-the-original-component-use-composition","htmlAttributes":{"id":"dont-mutate-the-original-component-use-composition"},"hProperties":{"id":"dont-mutate-the-original-component-use-composition"}}},{"type":"paragraph","children":[{"type":"text","value":"Resist the temptation to modify a component’s prototype (or otherwise mutate it) inside a HOC.","position":{"start":{"line":171,"column":1,"offset":6886},"end":{"line":171,"column":95,"offset":6980},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":6886},"end":{"line":171,"column":95,"offset":6980},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">InputComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">InputComponent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">componentDidUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Current props: '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Previous props: '</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The fact that we're returning the original input is a hint that it has</span>\n  <span class=\"token comment\">// been mutated.</span>\n  <span class=\"token keyword\">return</span> InputComponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// EnhancedComponent will log whenever props are received</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span>InputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":173,"column":1,"offset":6982},"end":{"line":186,"column":4,"offset":7431},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are a few problems with this. One is that the input component cannot be reused separately from the enhanced component. More crucially, if you apply another HOC to ","position":{"start":{"line":188,"column":1,"offset":7433},"end":{"line":188,"column":170,"offset":7602},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">EnhancedComponent</code>","position":{"start":{"line":188,"column":170,"offset":7602},"end":{"line":188,"column":189,"offset":7621},"indent":[]}},{"type":"text","value":" that ","position":{"start":{"line":188,"column":189,"offset":7621},"end":{"line":188,"column":195,"offset":7627},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"also","position":{"start":{"line":188,"column":196,"offset":7628},"end":{"line":188,"column":200,"offset":7632},"indent":[]}}],"position":{"start":{"line":188,"column":195,"offset":7627},"end":{"line":188,"column":201,"offset":7633},"indent":[]}},{"type":"text","value":" mutates ","position":{"start":{"line":188,"column":201,"offset":7633},"end":{"line":188,"column":210,"offset":7642},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">componentDidUpdate</code>","position":{"start":{"line":188,"column":210,"offset":7642},"end":{"line":188,"column":230,"offset":7662},"indent":[]}},{"type":"text","value":", the first HOC’s functionality will be overridden! This HOC also won’t work with function components, which do not have lifecycle methods.","position":{"start":{"line":188,"column":230,"offset":7662},"end":{"line":188,"column":369,"offset":7801},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":7433},"end":{"line":188,"column":369,"offset":7801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Mutating HOCs are a leaky abstraction—the consumer must know how they are implemented in order to avoid conflicts with other HOCs.","position":{"start":{"line":190,"column":1,"offset":7803},"end":{"line":190,"column":131,"offset":7933},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":7803},"end":{"line":190,"column":131,"offset":7933},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of mutation, HOCs should use composition, by wrapping the input component in a container component:","position":{"start":{"line":192,"column":1,"offset":7935},"end":{"line":192,"column":108,"offset":8042},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":7935},"end":{"line":192,"column":108,"offset":8042},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Current props: '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Previous props: '</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Wraps the input component in a container, without mutating it. Good!</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":194,"column":1,"offset":8044},"end":{"line":207,"column":4,"offset":8430},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This HOC has the same functionality as the mutating version while avoiding the potential for clashes. It works equally well with class and function components. And because it’s a pure function, it’s composable with other HOCs, or even with itself.","position":{"start":{"line":209,"column":1,"offset":8432},"end":{"line":209,"column":248,"offset":8679},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":8432},"end":{"line":209,"column":248,"offset":8679},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You may have noticed similarities between HOCs and a pattern called ","position":{"start":{"line":211,"column":1,"offset":8681},"end":{"line":211,"column":69,"offset":8749},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"container components","position":{"start":{"line":211,"column":71,"offset":8751},"end":{"line":211,"column":91,"offset":8771},"indent":[]}}],"position":{"start":{"line":211,"column":69,"offset":8749},"end":{"line":211,"column":93,"offset":8773},"indent":[]}},{"type":"text","value":". Container components are part of a strategy of separating responsibility between high-level and low-level concerns. Containers manage things like subscriptions and state, and pass props to components that handle things like rendering UI. HOCs use containers as part of their implementation. You can think of HOCs as parameterized container component definitions.","position":{"start":{"line":211,"column":93,"offset":8773},"end":{"line":211,"column":457,"offset":9137},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":8681},"end":{"line":211,"column":457,"offset":9137},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#convention-pass-unrelated-props-through-to-the-wrapped-component","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Convention: Pass Unrelated Props Through to the Wrapped Component ","position":{"start":{"line":213,"column":4,"offset":9142},"end":{"line":213,"column":137,"offset":9275},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":9139},"end":{"line":213,"column":137,"offset":9275},"indent":[]},"data":{"id":"convention-pass-unrelated-props-through-to-the-wrapped-component","htmlAttributes":{"id":"convention-pass-unrelated-props-through-to-the-wrapped-component"},"hProperties":{"id":"convention-pass-unrelated-props-through-to-the-wrapped-component"}}},{"type":"paragraph","children":[{"type":"text","value":"HOCs add features to a component. They shouldn’t drastically alter its contract. It’s expected that the component returned from a HOC has a similar interface to the wrapped component.","position":{"start":{"line":215,"column":1,"offset":9277},"end":{"line":215,"column":184,"offset":9460},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":9277},"end":{"line":215,"column":184,"offset":9460},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"HOCs should pass through props that are unrelated to its specific concern. Most HOCs contain a render method that looks something like this:","position":{"start":{"line":217,"column":1,"offset":9462},"end":{"line":217,"column":141,"offset":9602},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":9462},"end":{"line":217,"column":141,"offset":9602},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Filter out extra props that are specific to this HOC and shouldn't be</span>\n  <span class=\"token comment\">// passed through</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> extraProp<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>passThroughProps <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Inject props into the wrapped component. These are usually state values or</span>\n  <span class=\"token comment\">// instance methods.</span>\n  <span class=\"token keyword\">const</span> injectedProp <span class=\"token operator\">=</span> someStateOrInstanceMethod<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Pass props to wrapped component</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span>\n      <span class=\"token attr-name\">injectedProp</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>injectedProp<span class=\"token punctuation\">}</span></span>\n      <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">passThroughProps</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":219,"column":1,"offset":9604},"end":{"line":237,"column":4,"offset":10077},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This convention helps ensure that HOCs are as flexible and reusable as possible.","position":{"start":{"line":239,"column":1,"offset":10079},"end":{"line":239,"column":81,"offset":10159},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":10079},"end":{"line":239,"column":81,"offset":10159},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#convention-maximizing-composability","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Convention: Maximizing Composability ","position":{"start":{"line":241,"column":4,"offset":10164},"end":{"line":241,"column":79,"offset":10239},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":10161},"end":{"line":241,"column":79,"offset":10239},"indent":[]},"data":{"id":"convention-maximizing-composability","htmlAttributes":{"id":"convention-maximizing-composability"},"hProperties":{"id":"convention-maximizing-composability"}}},{"type":"paragraph","children":[{"type":"text","value":"Not all HOCs look the same. Sometimes they accept only a single argument, the wrapped component:","position":{"start":{"line":243,"column":1,"offset":10241},"end":{"line":243,"column":97,"offset":10337},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":10241},"end":{"line":243,"column":97,"offset":10337},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> NavbarWithRouter <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Navbar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":245,"column":1,"offset":10339},"end":{"line":247,"column":4,"offset":10393},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Usually, HOCs accept additional arguments. In this example from Relay, a config object is used to specify a component’s data dependencies:","position":{"start":{"line":249,"column":1,"offset":10395},"end":{"line":249,"column":139,"offset":10533},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":10395},"end":{"line":249,"column":139,"offset":10533},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> CommentWithRelay <span class=\"token operator\">=</span> Relay<span class=\"token punctuation\">.</span><span class=\"token function\">createContainer</span><span class=\"token punctuation\">(</span>Comment<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":251,"column":1,"offset":10535},"end":{"line":253,"column":4,"offset":10609},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The most common signature for HOCs looks like this:","position":{"start":{"line":255,"column":1,"offset":10611},"end":{"line":255,"column":52,"offset":10662},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":10611},"end":{"line":255,"column":52,"offset":10662},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// React Redux's `connect`</span>\n<span class=\"token keyword\">const</span> ConnectedComment <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">,</span> commentActions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CommentList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":257,"column":1,"offset":10664},"end":{"line":260,"column":4,"offset":10780},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"What?!","position":{"start":{"line":262,"column":2,"offset":10783},"end":{"line":262,"column":8,"offset":10789},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":10782},"end":{"line":262,"column":9,"offset":10790},"indent":[]}},{"type":"text","value":" If you break it apart, it’s easier to see what’s going on.","position":{"start":{"line":262,"column":9,"offset":10790},"end":{"line":262,"column":68,"offset":10849},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":10782},"end":{"line":262,"column":68,"offset":10849},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// connect is a function that returns another function</span>\n<span class=\"token keyword\">const</span> enhance <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentListSelector<span class=\"token punctuation\">,</span> commentListActions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// The returned function is a HOC, which returns a component that is connected</span>\n<span class=\"token comment\">// to the Redux store</span>\n<span class=\"token keyword\">const</span> ConnectedComment <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>CommentList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":264,"column":1,"offset":10851},"end":{"line":270,"column":4,"offset":11129},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In other words, ","position":{"start":{"line":271,"column":1,"offset":11130},"end":{"line":271,"column":17,"offset":11146},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">connect</code>","position":{"start":{"line":271,"column":17,"offset":11146},"end":{"line":271,"column":26,"offset":11155},"indent":[]}},{"type":"text","value":" is a higher-order function that returns a higher-order component!","position":{"start":{"line":271,"column":26,"offset":11155},"end":{"line":271,"column":92,"offset":11221},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":11130},"end":{"line":271,"column":92,"offset":11221},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This form may seem confusing or unnecessary, but it has a useful property. Single-argument HOCs like the one returned by the ","position":{"start":{"line":273,"column":1,"offset":11223},"end":{"line":273,"column":126,"offset":11348},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">connect</code>","position":{"start":{"line":273,"column":126,"offset":11348},"end":{"line":273,"column":135,"offset":11357},"indent":[]}},{"type":"text","value":" function have the signature ","position":{"start":{"line":273,"column":135,"offset":11357},"end":{"line":273,"column":164,"offset":11386},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">Component =&gt; Component</code>","position":{"start":{"line":273,"column":164,"offset":11386},"end":{"line":273,"column":188,"offset":11410},"indent":[]}},{"type":"text","value":". Functions whose output type is the same as its input type are really easy to compose together.","position":{"start":{"line":273,"column":188,"offset":11410},"end":{"line":273,"column":284,"offset":11506},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":11223},"end":{"line":273,"column":284,"offset":11506},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Instead of doing this...</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ... you can use a function composition utility</span>\n<span class=\"token comment\">// compose(f, g, h) is the same as (...args) => f(g(h(...args)))</span>\n<span class=\"token keyword\">const</span> enhance <span class=\"token operator\">=</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// These are both single-argument HOCs</span>\n  withRouter<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":275,"column":1,"offset":11508},"end":{"line":287,"column":4,"offset":11903},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"(This same property also allows ","position":{"start":{"line":289,"column":1,"offset":11905},"end":{"line":289,"column":33,"offset":11937},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">connect</code>","position":{"start":{"line":289,"column":33,"offset":11937},"end":{"line":289,"column":42,"offset":11946},"indent":[]}},{"type":"text","value":" and other enhancer-style HOCs to be used as decorators, an experimental JavaScript proposal.)","position":{"start":{"line":289,"column":42,"offset":11946},"end":{"line":289,"column":136,"offset":12040},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":11905},"end":{"line":289,"column":136,"offset":12040},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":291,"column":1,"offset":12042},"end":{"line":291,"column":5,"offset":12046},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">compose</code>","position":{"start":{"line":291,"column":5,"offset":12046},"end":{"line":291,"column":14,"offset":12055},"indent":[]}},{"type":"text","value":" utility function is provided by many third-party libraries including lodash (as ","position":{"start":{"line":291,"column":14,"offset":12055},"end":{"line":291,"column":95,"offset":12136},"indent":[]}},{"type":"link","title":null,"url":"https://lodash.com/docs/#flowRight","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">lodash.flowRight</code>","position":{"start":{"line":291,"column":96,"offset":12137},"end":{"line":291,"column":114,"offset":12155},"indent":[]}}],"position":{"start":{"line":291,"column":95,"offset":12136},"end":{"line":291,"column":151,"offset":12192},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"), ","position":{"start":{"line":291,"column":151,"offset":12192},"end":{"line":291,"column":154,"offset":12195},"indent":[]}},{"type":"link","title":null,"url":"https://redux.js.org/api/compose","children":[{"type":"text","value":"Redux","position":{"start":{"line":291,"column":155,"offset":12196},"end":{"line":291,"column":160,"offset":12201},"indent":[]}}],"position":{"start":{"line":291,"column":154,"offset":12195},"end":{"line":291,"column":195,"offset":12236},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":", and ","position":{"start":{"line":291,"column":195,"offset":12236},"end":{"line":291,"column":201,"offset":12242},"indent":[]}},{"type":"link","title":null,"url":"https://ramdajs.com/docs/#compose","children":[{"type":"text","value":"Ramda","position":{"start":{"line":291,"column":202,"offset":12243},"end":{"line":291,"column":207,"offset":12248},"indent":[]}}],"position":{"start":{"line":291,"column":201,"offset":12242},"end":{"line":291,"column":243,"offset":12284},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":291,"column":243,"offset":12284},"end":{"line":291,"column":244,"offset":12285},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":12042},"end":{"line":291,"column":244,"offset":12285},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#convention-wrap-the-display-name-for-easy-debugging","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Convention: Wrap the Display Name for Easy Debugging ","position":{"start":{"line":293,"column":4,"offset":12290},"end":{"line":293,"column":111,"offset":12397},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":12287},"end":{"line":293,"column":111,"offset":12397},"indent":[]},"data":{"id":"convention-wrap-the-display-name-for-easy-debugging","htmlAttributes":{"id":"convention-wrap-the-display-name-for-easy-debugging"},"hProperties":{"id":"convention-wrap-the-display-name-for-easy-debugging"}}},{"type":"paragraph","children":[{"type":"text","value":"The container components created by HOCs show up in the ","position":{"start":{"line":295,"column":1,"offset":12399},"end":{"line":295,"column":57,"offset":12455},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/facebook/react-devtools","children":[{"type":"text","value":"React Developer Tools","position":{"start":{"line":295,"column":58,"offset":12456},"end":{"line":295,"column":79,"offset":12477},"indent":[]}}],"position":{"start":{"line":295,"column":57,"offset":12455},"end":{"line":295,"column":124,"offset":12522},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" like any other component. To ease debugging, choose a display name that communicates that it’s the result of a HOC.","position":{"start":{"line":295,"column":124,"offset":12522},"end":{"line":295,"column":240,"offset":12638},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":12399},"end":{"line":295,"column":240,"offset":12638},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The most common technique is to wrap the display name of the wrapped component. So if your higher-order component is named ","position":{"start":{"line":297,"column":1,"offset":12640},"end":{"line":297,"column":124,"offset":12763},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">withSubscription</code>","position":{"start":{"line":297,"column":124,"offset":12763},"end":{"line":297,"column":142,"offset":12781},"indent":[]}},{"type":"text","value":", and the wrapped component’s display name is ","position":{"start":{"line":297,"column":142,"offset":12781},"end":{"line":297,"column":188,"offset":12827},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">CommentList</code>","position":{"start":{"line":297,"column":188,"offset":12827},"end":{"line":297,"column":201,"offset":12840},"indent":[]}},{"type":"text","value":", use the display name ","position":{"start":{"line":297,"column":201,"offset":12840},"end":{"line":297,"column":224,"offset":12863},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">WithSubscription(CommentList)</code>","position":{"start":{"line":297,"column":224,"offset":12863},"end":{"line":297,"column":255,"offset":12894},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":297,"column":255,"offset":12894},"end":{"line":297,"column":256,"offset":12895},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":12640},"end":{"line":297,"column":256,"offset":12895},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">WithSubscription</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">}</span>\n  WithSubscription<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">WithSubscription(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> WithSubscription<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> WrappedComponent<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">||</span> WrappedComponent<span class=\"token punctuation\">.</span>name <span class=\"token operator\">||</span> <span class=\"token string\">'Component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":299,"column":1,"offset":12897},"end":{"line":309,"column":4,"offset":13258},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#caveats","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Caveats ","position":{"start":{"line":312,"column":4,"offset":13264},"end":{"line":312,"column":22,"offset":13282},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":13261},"end":{"line":312,"column":22,"offset":13282},"indent":[]},"data":{"id":"caveats","htmlAttributes":{"id":"caveats"},"hProperties":{"id":"caveats"}}},{"type":"paragraph","children":[{"type":"text","value":"Higher-order components come with a few caveats that aren’t immediately obvious if you’re new to React.","position":{"start":{"line":314,"column":1,"offset":13284},"end":{"line":314,"column":104,"offset":13387},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":13284},"end":{"line":314,"column":104,"offset":13387},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#dont-use-hocs-inside-the-render-method","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Don’t Use HOCs Inside the render Method ","position":{"start":{"line":316,"column":5,"offset":13393},"end":{"line":316,"column":86,"offset":13474},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":13389},"end":{"line":316,"column":86,"offset":13474},"indent":[]},"data":{"id":"dont-use-hocs-inside-the-render-method","htmlAttributes":{"id":"dont-use-hocs-inside-the-render-method"},"hProperties":{"id":"dont-use-hocs-inside-the-render-method"}}},{"type":"paragraph","children":[{"type":"text","value":"React’s diffing algorithm (called reconciliation) uses component identity to determine whether it should update the existing subtree or throw it away and mount a new one. If the component returned from ","position":{"start":{"line":318,"column":1,"offset":13476},"end":{"line":318,"column":203,"offset":13678},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">render</code>","position":{"start":{"line":318,"column":203,"offset":13678},"end":{"line":318,"column":211,"offset":13686},"indent":[]}},{"type":"text","value":" is identical (","position":{"start":{"line":318,"column":211,"offset":13686},"end":{"line":318,"column":226,"offset":13701},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">===</code>","position":{"start":{"line":318,"column":226,"offset":13701},"end":{"line":318,"column":231,"offset":13706},"indent":[]}},{"type":"text","value":") to the component from the previous render, React recursively updates the subtree by diffing it with the new one. If they’re not equal, the previous subtree is unmounted completely.","position":{"start":{"line":318,"column":231,"offset":13706},"end":{"line":318,"column":413,"offset":13888},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":13476},"end":{"line":318,"column":413,"offset":13888},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Normally, you shouldn’t need to think about this. But it matters for HOCs because it means you can’t apply a HOC to a component within the render method of a component:","position":{"start":{"line":320,"column":1,"offset":13890},"end":{"line":320,"column":169,"offset":14058},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":13890},"end":{"line":320,"column":169,"offset":14058},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// A new version of EnhancedComponent is created on every render</span>\n  <span class=\"token comment\">// EnhancedComponent1 !== EnhancedComponent2</span>\n  <span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// That causes the entire subtree to unmount/remount each time!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EnhancedComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":322,"column":1,"offset":14060},"end":{"line":330,"column":4,"offset":14344},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The problem here isn’t just about performance — remounting a component causes the state of that component and all of its children to be lost.","position":{"start":{"line":332,"column":1,"offset":14346},"end":{"line":332,"column":142,"offset":14487},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":14346},"end":{"line":332,"column":142,"offset":14487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead, apply HOCs outside the component definition so that the resulting component is created only once. Then, its identity will be consistent across renders. This is usually what you want, anyway.","position":{"start":{"line":334,"column":1,"offset":14489},"end":{"line":334,"column":200,"offset":14688},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":14489},"end":{"line":334,"column":200,"offset":14688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In those rare cases where you need to apply a HOC dynamically, you can also do it inside a component’s lifecycle methods or its constructor.","position":{"start":{"line":336,"column":1,"offset":14690},"end":{"line":336,"column":141,"offset":14830},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":14690},"end":{"line":336,"column":141,"offset":14830},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#static-methods-must-be-copied-over","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Static Methods Must Be Copied Over ","position":{"start":{"line":338,"column":5,"offset":14836},"end":{"line":338,"column":77,"offset":14908},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":14832},"end":{"line":338,"column":77,"offset":14908},"indent":[]},"data":{"id":"static-methods-must-be-copied-over","htmlAttributes":{"id":"static-methods-must-be-copied-over"},"hProperties":{"id":"static-methods-must-be-copied-over"}}},{"type":"paragraph","children":[{"type":"text","value":"Sometimes it’s useful to define a static method on a React component. For example, Relay containers expose a static method ","position":{"start":{"line":340,"column":1,"offset":14910},"end":{"line":340,"column":124,"offset":15033},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">getFragment</code>","position":{"start":{"line":340,"column":124,"offset":15033},"end":{"line":340,"column":137,"offset":15046},"indent":[]}},{"type":"text","value":" to facilitate the composition of GraphQL fragments.","position":{"start":{"line":340,"column":137,"offset":15046},"end":{"line":340,"column":189,"offset":15098},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":14910},"end":{"line":340,"column":189,"offset":15098},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When you apply a HOC to a component, though, the original component is wrapped with a container component. That means the new component does not have any of the static methods of the original component.","position":{"start":{"line":342,"column":1,"offset":15100},"end":{"line":342,"column":203,"offset":15302},"indent":[]}}],"position":{"start":{"line":342,"column":1,"offset":15100},"end":{"line":342,"column":203,"offset":15302},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Define a static method</span>\nWrappedComponent<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">staticMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Now apply a HOC</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// The enhanced component has no static method</span>\n<span class=\"token keyword\">typeof</span> EnhancedComponent<span class=\"token punctuation\">.</span>staticMethod <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span> <span class=\"token comment\">// true</span></code></pre></div>","position":{"start":{"line":344,"column":1,"offset":15304},"end":{"line":352,"column":4,"offset":15574},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To solve this, you could copy the methods onto the container before returning it:","position":{"start":{"line":354,"column":1,"offset":15576},"end":{"line":354,"column":82,"offset":15657},"indent":[]}}],"position":{"start":{"line":354,"column":1,"offset":15576},"end":{"line":354,"column":82,"offset":15657},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Enhance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Must know exactly which method(s) to copy :(</span>\n  Enhance<span class=\"token punctuation\">.</span>staticMethod <span class=\"token operator\">=</span> WrappedComponent<span class=\"token punctuation\">.</span>staticMethod<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Enhance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":356,"column":1,"offset":15659},"end":{"line":363,"column":4,"offset":15881},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"However, this requires you to know exactly which methods need to be copied. You can use ","position":{"start":{"line":365,"column":1,"offset":15883},"end":{"line":365,"column":89,"offset":15971},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/mridgway/hoist-non-react-statics","children":[{"type":"text","value":"hoist-non-react-statics","position":{"start":{"line":365,"column":90,"offset":15972},"end":{"line":365,"column":113,"offset":15995},"indent":[]}}],"position":{"start":{"line":365,"column":89,"offset":15971},"end":{"line":365,"column":167,"offset":16049},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" to automatically copy all non-React static methods:","position":{"start":{"line":365,"column":167,"offset":16049},"end":{"line":365,"column":219,"offset":16101},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":15883},"end":{"line":365,"column":219,"offset":16101},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> hoistNonReactStatic <span class=\"token keyword\">from</span> <span class=\"token string\">'hoist-non-react-statics'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Enhance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">hoistNonReactStatic</span><span class=\"token punctuation\">(</span>Enhance<span class=\"token punctuation\">,</span> WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Enhance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":367,"column":1,"offset":16103},"end":{"line":374,"column":4,"offset":16328},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Another possible solution is to export the static method separately from the component itself.","position":{"start":{"line":376,"column":1,"offset":16330},"end":{"line":376,"column":95,"offset":16424},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":16330},"end":{"line":376,"column":95,"offset":16424},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Instead of...</span>\nMyComponent<span class=\"token punctuation\">.</span>someFunction <span class=\"token operator\">=</span> someFunction<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...export the method separately...</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> someFunction <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...and in the consuming module, import both</span>\n<span class=\"token keyword\">import</span> MyComponent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> someFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent.js'</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":378,"column":1,"offset":16426},"end":{"line":388,"column":4,"offset":16695},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#refs-arent-passed-through","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Refs Aren’t Passed Through ","position":{"start":{"line":390,"column":5,"offset":16701},"end":{"line":390,"column":60,"offset":16756},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":16697},"end":{"line":390,"column":60,"offset":16756},"indent":[]},"data":{"id":"refs-arent-passed-through","htmlAttributes":{"id":"refs-arent-passed-through"},"hProperties":{"id":"refs-arent-passed-through"}}},{"type":"paragraph","children":[{"type":"text","value":"While the convention for higher-order components is to pass through all props to the wrapped component, this does not work for refs. That’s because ","position":{"start":{"line":392,"column":1,"offset":16758},"end":{"line":392,"column":149,"offset":16906},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">ref</code>","position":{"start":{"line":392,"column":149,"offset":16906},"end":{"line":392,"column":154,"offset":16911},"indent":[]}},{"type":"text","value":" is not really a prop — like ","position":{"start":{"line":392,"column":154,"offset":16911},"end":{"line":392,"column":183,"offset":16940},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">key</code>","position":{"start":{"line":392,"column":183,"offset":16940},"end":{"line":392,"column":188,"offset":16945},"indent":[]}},{"type":"text","value":", it’s handled specially by React. If you add a ref to an element whose component is the result of a HOC, the ref refers to an instance of the outermost container component, not the wrapped component.","position":{"start":{"line":392,"column":188,"offset":16945},"end":{"line":392,"column":388,"offset":17145},"indent":[]}}],"position":{"start":{"line":392,"column":1,"offset":16758},"end":{"line":392,"column":388,"offset":17145},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The solution for this problem is to use the ","position":{"start":{"line":394,"column":1,"offset":17147},"end":{"line":394,"column":45,"offset":17191},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">React.forwardRef</code>","position":{"start":{"line":394,"column":45,"offset":17191},"end":{"line":394,"column":63,"offset":17209},"indent":[]}},{"type":"text","value":" API (introduced with React 16.3). ","position":{"start":{"line":394,"column":63,"offset":17209},"end":{"line":394,"column":98,"offset":17244},"indent":[]}},{"type":"link","title":null,"url":"/docs/forwarding-refs.html","children":[{"type":"text","value":"Learn more about it in the forwarding refs section","position":{"start":{"line":394,"column":99,"offset":17245},"end":{"line":394,"column":149,"offset":17295},"indent":[]}}],"position":{"start":{"line":394,"column":98,"offset":17244},"end":{"line":394,"column":178,"offset":17324},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":394,"column":178,"offset":17324},"end":{"line":394,"column":179,"offset":17325},"indent":[]}}],"position":{"start":{"line":394,"column":1,"offset":17147},"end":{"line":394,"column":179,"offset":17325},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":395,"column":1,"offset":17326}}}}