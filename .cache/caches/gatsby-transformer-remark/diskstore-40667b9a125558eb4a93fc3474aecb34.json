{"expireTime":9007200851888154000,"key":"transformer-remark-markdown-html-ast-5f97382aada1533b5bfa8990c0847e80-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Handling events with React elements is very similar to handling events on DOM elements. There are some syntax differences:","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":123,"offset":123}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":123,"offset":123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React events are named using camelCase, rather than lowercase.","position":{"start":{"line":4,"column":3,"offset":127},"end":{"line":4,"column":65,"offset":189}}}],"position":{"start":{"line":4,"column":1,"offset":125},"end":{"line":4,"column":65,"offset":189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"With JSX you pass a function as the event handler, rather than a string.","position":{"start":{"line":5,"column":3,"offset":192},"end":{"line":5,"column":75,"offset":264}}}],"position":{"start":{"line":5,"column":1,"offset":190},"end":{"line":5,"column":75,"offset":264}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4,"column":1,"offset":125},"end":{"line":5,"column":75,"offset":264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, the HTML:","position":{"start":{"line":7,"column":1,"offset":266},"end":{"line":7,"column":23,"offset":288}}}],"position":{"start":{"line":7,"column":1,"offset":266},"end":{"line":7,"column":23,"offset":288}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>activateLasers()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  Activate Lasers\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":9,"column":1,"offset":290},"end":{"line":13,"column":4,"offset":365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"is slightly different in React:","position":{"start":{"line":15,"column":1,"offset":367},"end":{"line":15,"column":32,"offset":398}}}],"position":{"start":{"line":15,"column":1,"offset":367},"end":{"line":15,"column":32,"offset":398}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>activateLasers<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  Activate Lasers</span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":17,"column":1,"offset":400},"end":{"line":21,"column":4,"offset":474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another difference is that you cannot return ","position":{"start":{"line":23,"column":1,"offset":476},"end":{"line":23,"column":46,"offset":521}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">false</code>","position":{"start":{"line":23,"column":46,"offset":521},"end":{"line":23,"column":53,"offset":528}}},{"type":"text","value":" to prevent default behavior in React. You must call ","position":{"start":{"line":23,"column":53,"offset":528},"end":{"line":23,"column":106,"offset":581}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">preventDefault</code>","position":{"start":{"line":23,"column":106,"offset":581},"end":{"line":23,"column":122,"offset":597}}},{"type":"text","value":" explicitly. For example, with plain HTML, to prevent the default link behavior of opening a new page, you can write:","position":{"start":{"line":23,"column":122,"offset":597},"end":{"line":23,"column":239,"offset":714}}}],"position":{"start":{"line":23,"column":1,"offset":476},"end":{"line":23,"column":239,"offset":714}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console.log(<span class=\"token punctuation\">'</span>The link was clicked.<span class=\"token punctuation\">'</span>); return false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  Click me\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":716},"end":{"line":29,"column":4,"offset":817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In React, this could instead be:","position":{"start":{"line":31,"column":1,"offset":819},"end":{"line":31,"column":33,"offset":851}}}],"position":{"start":{"line":31,"column":1,"offset":819},"end":{"line":31,"column":33,"offset":851}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ActionLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The link was clicked.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      Click me</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":33,"column":1,"offset":853},"end":{"line":46,"column":4,"offset":1073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here, ","position":{"start":{"line":48,"column":1,"offset":1075},"end":{"line":48,"column":7,"offset":1081}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">e</code>","position":{"start":{"line":48,"column":7,"offset":1081},"end":{"line":48,"column":10,"offset":1084}}},{"type":"text","value":" is a synthetic event. React defines these synthetic events according to the ","position":{"start":{"line":48,"column":10,"offset":1084},"end":{"line":48,"column":87,"offset":1161}}},{"type":"element","tagName":"a","properties":{"href":"https://www.w3.org/TR/DOM-Level-3-Events/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"W3C spec","position":{"start":{"line":48,"column":88,"offset":1162},"end":{"line":48,"column":96,"offset":1170}}}],"position":{"start":{"line":48,"column":87,"offset":1161},"end":{"line":48,"column":140,"offset":1214}}},{"type":"text","value":", so you don’t need to worry about cross-browser compatibility. See the ","position":{"start":{"line":48,"column":140,"offset":1214},"end":{"line":48,"column":212,"offset":1286}}},{"type":"element","tagName":"a","properties":{"href":"/docs/events.html"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">SyntheticEvent</code>","position":{"start":{"line":48,"column":213,"offset":1287},"end":{"line":48,"column":229,"offset":1303}}}],"position":{"start":{"line":48,"column":212,"offset":1286},"end":{"line":48,"column":249,"offset":1323}}},{"type":"text","value":" reference guide to learn more.","position":{"start":{"line":48,"column":249,"offset":1323},"end":{"line":48,"column":280,"offset":1354}}}],"position":{"start":{"line":48,"column":1,"offset":1075},"end":{"line":48,"column":280,"offset":1354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When using React, you generally don’t need to call ","position":{"start":{"line":50,"column":1,"offset":1356},"end":{"line":50,"column":52,"offset":1407}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">addEventListener</code>","position":{"start":{"line":50,"column":52,"offset":1407},"end":{"line":50,"column":70,"offset":1425}}},{"type":"text","value":" to add listeners to a DOM element after it is created. Instead, just provide a listener when the element is initially rendered.","position":{"start":{"line":50,"column":70,"offset":1425},"end":{"line":50,"column":198,"offset":1553}}}],"position":{"start":{"line":50,"column":1,"offset":1356},"end":{"line":50,"column":198,"offset":1553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you define a component using an ","position":{"start":{"line":52,"column":1,"offset":1555},"end":{"line":52,"column":38,"offset":1592}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"ES6 class","position":{"start":{"line":52,"column":39,"offset":1593},"end":{"line":52,"column":48,"offset":1602}}}],"position":{"start":{"line":52,"column":38,"offset":1592},"end":{"line":52,"column":121,"offset":1675}}},{"type":"text","value":", a common pattern is for an event handler to be a method on the class. For example, this ","position":{"start":{"line":52,"column":121,"offset":1675},"end":{"line":52,"column":211,"offset":1765}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">Toggle</code>","position":{"start":{"line":52,"column":211,"offset":1765},"end":{"line":52,"column":219,"offset":1773}}},{"type":"text","value":" component renders a button that lets the user toggle between “ON” and “OFF” states:","position":{"start":{"line":52,"column":219,"offset":1773},"end":{"line":52,"column":303,"offset":1857}}}],"position":{"start":{"line":52,"column":1,"offset":1555},"end":{"line":52,"column":303,"offset":1857}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Toggle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>isToggleOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// This binding is necessary to make `this` work in the callback</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      isToggleOn<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>isToggleOn</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isToggleOn <span class=\"token operator\">?</span> <span class=\"token string\">'ON'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'OFF'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toggle</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":54,"column":1,"offset":1859},"end":{"line":83,"column":4,"offset":2437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://codepen.io/gaearon/pen/xEmzGg?editors=0010","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":85,"column":4,"offset":2442},"end":{"line":85,"column":21,"offset":2459}}}],"position":{"start":{"line":85,"column":2,"offset":2440},"end":{"line":85,"column":23,"offset":2461}}}],"position":{"start":{"line":85,"column":1,"offset":2439},"end":{"line":85,"column":76,"offset":2514}}}],"position":{"start":{"line":85,"column":1,"offset":2439},"end":{"line":85,"column":76,"offset":2514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You have to be careful about the meaning of ","position":{"start":{"line":87,"column":1,"offset":2516},"end":{"line":87,"column":45,"offset":2560}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">this</code>","position":{"start":{"line":87,"column":45,"offset":2560},"end":{"line":87,"column":51,"offset":2566}}},{"type":"text","value":" in JSX callbacks. In JavaScript, class methods are not ","position":{"start":{"line":87,"column":51,"offset":2566},"end":{"line":87,"column":107,"offset":2622}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"bound","position":{"start":{"line":87,"column":108,"offset":2623},"end":{"line":87,"column":113,"offset":2628}}}],"position":{"start":{"line":87,"column":107,"offset":2622},"end":{"line":87,"column":207,"offset":2722}}},{"type":"text","value":" by default. If you forget to bind ","position":{"start":{"line":87,"column":207,"offset":2722},"end":{"line":87,"column":242,"offset":2757}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">this.handleClick</code>","position":{"start":{"line":87,"column":242,"offset":2757},"end":{"line":87,"column":260,"offset":2775}}},{"type":"text","value":" and pass it to ","position":{"start":{"line":87,"column":260,"offset":2775},"end":{"line":87,"column":276,"offset":2791}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">onClick</code>","position":{"start":{"line":87,"column":276,"offset":2791},"end":{"line":87,"column":285,"offset":2800}}},{"type":"text","value":", ","position":{"start":{"line":87,"column":285,"offset":2800},"end":{"line":87,"column":287,"offset":2802}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">this</code>","position":{"start":{"line":87,"column":287,"offset":2802},"end":{"line":87,"column":293,"offset":2808}}},{"type":"text","value":" will be ","position":{"start":{"line":87,"column":293,"offset":2808},"end":{"line":87,"column":302,"offset":2817}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">undefined</code>","position":{"start":{"line":87,"column":302,"offset":2817},"end":{"line":87,"column":313,"offset":2828}}},{"type":"text","value":" when the function is actually called.","position":{"start":{"line":87,"column":313,"offset":2828},"end":{"line":87,"column":351,"offset":2866}}}],"position":{"start":{"line":87,"column":1,"offset":2516},"end":{"line":87,"column":351,"offset":2866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is not React-specific behavior; it is a part of ","position":{"start":{"line":89,"column":1,"offset":2868},"end":{"line":89,"column":54,"offset":2921}}},{"type":"element","tagName":"a","properties":{"href":"https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"how functions work in JavaScript","position":{"start":{"line":89,"column":55,"offset":2922},"end":{"line":89,"column":87,"offset":2954}}}],"position":{"start":{"line":89,"column":54,"offset":2921},"end":{"line":89,"column":180,"offset":3047}}},{"type":"text","value":". Generally, if you refer to a method without ","position":{"start":{"line":89,"column":180,"offset":3047},"end":{"line":89,"column":226,"offset":3093}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">()</code>","position":{"start":{"line":89,"column":226,"offset":3093},"end":{"line":89,"column":230,"offset":3097}}},{"type":"text","value":" after it, such as ","position":{"start":{"line":89,"column":230,"offset":3097},"end":{"line":89,"column":249,"offset":3116}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">onClick={this.handleClick}</code>","position":{"start":{"line":89,"column":249,"offset":3116},"end":{"line":89,"column":277,"offset":3144}}},{"type":"text","value":", you should bind that method.","position":{"start":{"line":89,"column":277,"offset":3144},"end":{"line":89,"column":307,"offset":3174}}}],"position":{"start":{"line":89,"column":1,"offset":2868},"end":{"line":89,"column":307,"offset":3174}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If calling ","position":{"start":{"line":91,"column":1,"offset":3176},"end":{"line":91,"column":12,"offset":3187}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">bind</code>","position":{"start":{"line":91,"column":12,"offset":3187},"end":{"line":91,"column":18,"offset":3193}}},{"type":"text","value":" annoys you, there are two ways you can get around this. If you are using the experimental ","position":{"start":{"line":91,"column":18,"offset":3193},"end":{"line":91,"column":109,"offset":3284}}},{"type":"element","tagName":"a","properties":{"href":"https://babeljs.io/docs/plugins/transform-class-properties/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"public class fields syntax","position":{"start":{"line":91,"column":110,"offset":3285},"end":{"line":91,"column":136,"offset":3311}}}],"position":{"start":{"line":91,"column":109,"offset":3284},"end":{"line":91,"column":198,"offset":3373}}},{"type":"text","value":", you can use class fields to correctly bind callbacks:","position":{"start":{"line":91,"column":198,"offset":3373},"end":{"line":91,"column":253,"offset":3428}}}],"position":{"start":{"line":91,"column":1,"offset":3176},"end":{"line":91,"column":253,"offset":3428}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// This syntax ensures `this` is bound within handleClick.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Warning: this is *experimental* syntax.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":93,"column":1,"offset":3430},"end":{"line":109,"column":4,"offset":3774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This syntax is enabled by default in ","position":{"start":{"line":111,"column":1,"offset":3776},"end":{"line":111,"column":38,"offset":3813}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebookincubator/create-react-app","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Create React App","position":{"start":{"line":111,"column":39,"offset":3814},"end":{"line":111,"column":55,"offset":3830}}}],"position":{"start":{"line":111,"column":38,"offset":3813},"end":{"line":111,"column":111,"offset":3886}}},{"type":"text","value":".","position":{"start":{"line":111,"column":111,"offset":3886},"end":{"line":111,"column":112,"offset":3887}}}],"position":{"start":{"line":111,"column":1,"offset":3776},"end":{"line":111,"column":112,"offset":3887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you aren’t using class fields syntax, you can use an ","position":{"start":{"line":113,"column":1,"offset":3889},"end":{"line":113,"column":57,"offset":3945}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"arrow function","position":{"start":{"line":113,"column":58,"offset":3946},"end":{"line":113,"column":72,"offset":3960}}}],"position":{"start":{"line":113,"column":57,"offset":3945},"end":{"line":113,"column":163,"offset":4051}}},{"type":"text","value":" in the callback:","position":{"start":{"line":113,"column":163,"offset":4051},"end":{"line":113,"column":180,"offset":4068}}}],"position":{"start":{"line":113,"column":1,"offset":3889},"end":{"line":113,"column":180,"offset":4068}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// This syntax ensures `this` is bound within handleClick</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":115,"column":1,"offset":4070},"end":{"line":130,"column":4,"offset":4372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The problem with this syntax is that a different callback is created each time the ","position":{"start":{"line":132,"column":1,"offset":4374},"end":{"line":132,"column":84,"offset":4457}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">LoggingButton</code>","position":{"start":{"line":132,"column":84,"offset":4457},"end":{"line":132,"column":99,"offset":4472}}},{"type":"text","value":" renders. In most cases, this is fine. However, if this callback is passed as a prop to lower components, those components might do an extra re-rendering. We generally recommend binding in the constructor or using the class fields syntax, to avoid this sort of performance problem.","position":{"start":{"line":132,"column":99,"offset":4472},"end":{"line":132,"column":380,"offset":4753}}}],"position":{"start":{"line":132,"column":1,"offset":4374},"end":{"line":132,"column":380,"offset":4753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"passing-arguments-to-event-handlers"},"children":[{"type":"element","tagName":"a","properties":{"href":"#passing-arguments-to-event-handlers","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Passing Arguments to Event Handlers ","position":{"start":{"line":134,"column":4,"offset":4758},"end":{"line":134,"column":78,"offset":4832}}}],"position":{"start":{"line":134,"column":1,"offset":4755},"end":{"line":134,"column":78,"offset":4832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside a loop, it is common to want to pass an extra parameter to an event handler. For example, if ","position":{"start":{"line":136,"column":1,"offset":4834},"end":{"line":136,"column":101,"offset":4934}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">id</code>","position":{"start":{"line":136,"column":101,"offset":4934},"end":{"line":136,"column":105,"offset":4938}}},{"type":"text","value":" is the row ID, either of the following would work:","position":{"start":{"line":136,"column":105,"offset":4938},"end":{"line":136,"column":156,"offset":4989}}}],"position":{"start":{"line":136,"column":1,"offset":4834},"end":{"line":136,"column":156,"offset":4989}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete Row</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete Row</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":138,"column":1,"offset":4991},"end":{"line":141,"column":4,"offset":5135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The above two lines are equivalent, and use ","position":{"start":{"line":143,"column":1,"offset":5137},"end":{"line":143,"column":45,"offset":5181}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"arrow functions","position":{"start":{"line":143,"column":46,"offset":5182},"end":{"line":143,"column":61,"offset":5197}}}],"position":{"start":{"line":143,"column":45,"offset":5181},"end":{"line":143,"column":155,"offset":5291}}},{"type":"text","value":" and ","position":{"start":{"line":143,"column":155,"offset":5291},"end":{"line":143,"column":160,"offset":5296}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">Function.prototype.bind</code>","position":{"start":{"line":143,"column":161,"offset":5297},"end":{"line":143,"column":186,"offset":5322}}}],"position":{"start":{"line":143,"column":160,"offset":5296},"end":{"line":143,"column":283,"offset":5419}}},{"type":"text","value":" respectively.","position":{"start":{"line":143,"column":283,"offset":5419},"end":{"line":143,"column":297,"offset":5433}}}],"position":{"start":{"line":143,"column":1,"offset":5137},"end":{"line":143,"column":297,"offset":5433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In both cases, the ","position":{"start":{"line":145,"column":1,"offset":5435},"end":{"line":145,"column":20,"offset":5454}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">e</code>","position":{"start":{"line":145,"column":20,"offset":5454},"end":{"line":145,"column":23,"offset":5457}}},{"type":"text","value":" argument representing the React event will be passed as a second argument after the ID. With an arrow function, we have to pass it explicitly, but with ","position":{"start":{"line":145,"column":23,"offset":5457},"end":{"line":145,"column":176,"offset":5610}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">bind</code>","position":{"start":{"line":145,"column":176,"offset":5610},"end":{"line":145,"column":182,"offset":5616}}},{"type":"text","value":" any further arguments are automatically forwarded.","position":{"start":{"line":145,"column":182,"offset":5616},"end":{"line":145,"column":233,"offset":5667}}}],"position":{"start":{"line":145,"column":1,"offset":5435},"end":{"line":145,"column":233,"offset":5667}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":146,"column":1,"offset":5668}}}}