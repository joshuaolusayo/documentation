{"expireTime":9007200851888146000,"key":"transformer-remark-markdown-html-ast-afe264c8ebff65962e041ade5ef30582-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The unknown-prop warning will fire if you attempt to render a DOM element with a prop that is not recognized by React as a legal DOM attribute/property. You should ensure that your DOM elements do not have spurious props floating around.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":238,"offset":237}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":238,"offset":237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are a couple of likely reasons this warning could be appearing:","position":{"start":{"line":3,"column":1,"offset":239},"end":{"line":3,"column":70,"offset":308}}}],"position":{"start":{"line":3,"column":1,"offset":239},"end":{"line":3,"column":70,"offset":308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Are you using ","position":{"start":{"line":5,"column":4,"offset":313},"end":{"line":5,"column":18,"offset":327}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">{...this.props}</code>","position":{"start":{"line":5,"column":18,"offset":327},"end":{"line":5,"column":35,"offset":344}}},{"type":"text","value":" or ","position":{"start":{"line":5,"column":35,"offset":344},"end":{"line":5,"column":39,"offset":348}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">cloneElement(element, this.props)</code>","position":{"start":{"line":5,"column":39,"offset":348},"end":{"line":5,"column":74,"offset":383}}},{"type":"text","value":"? Your component is transferring its own props directly to a child element (eg. ","position":{"start":{"line":5,"column":74,"offset":383},"end":{"line":5,"column":154,"offset":463}}},{"type":"element","tagName":"a","properties":{"href":"/docs/transferring-props.html"},"children":[{"type":"text","value":"transferring props","position":{"start":{"line":5,"column":155,"offset":464},"end":{"line":5,"column":173,"offset":482}}}],"position":{"start":{"line":5,"column":154,"offset":463},"end":{"line":5,"column":205,"offset":514}}},{"type":"text","value":"). When transferring props to a child component, you should ensure that you are not accidentally forwarding props that were intended to be interpreted by the parent component.","position":{"start":{"line":5,"column":205,"offset":514},"end":{"line":5,"column":380,"offset":689}}}],"position":{"start":{"line":5,"column":1,"offset":310},"end":{"line":6,"column":1,"offset":690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You are using a non-standard DOM attribute on a native DOM node, perhaps to represent custom data. If you are trying to attach custom data to a standard DOM element, consider using a custom data attribute as described ","position":{"start":{"line":7,"column":4,"offset":694},"end":{"line":7,"column":222,"offset":912}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"on MDN","position":{"start":{"line":7,"column":223,"offset":913},"end":{"line":7,"column":229,"offset":919}}}],"position":{"start":{"line":7,"column":222,"offset":912},"end":{"line":7,"column":309,"offset":999}}},{"type":"text","value":".","position":{"start":{"line":7,"column":309,"offset":999},"end":{"line":7,"column":310,"offset":1000}}}],"position":{"start":{"line":7,"column":1,"offset":691},"end":{"line":8,"column":1,"offset":1001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered.","position":{"start":{"line":9,"column":4,"offset":1005},"end":{"line":9,"column":246,"offset":1247}}}],"position":{"start":{"line":9,"column":1,"offset":1002},"end":{"line":10,"column":1,"offset":1248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You are using a React component without an upper case. React interprets it as a DOM tag because ","position":{"start":{"line":11,"column":4,"offset":1252},"end":{"line":11,"column":100,"offset":1348}}},{"type":"element","tagName":"a","properties":{"href":"/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized"},"children":[{"type":"text","value":"React JSX transform uses the upper vs. lower case convention to distinguish between user-defined components and DOM tags","position":{"start":{"line":11,"column":101,"offset":1349},"end":{"line":11,"column":221,"offset":1469}}}],"position":{"start":{"line":11,"column":100,"offset":1348},"end":{"line":11,"column":291,"offset":1539}}},{"type":"text","value":".","position":{"start":{"line":11,"column":291,"offset":1539},"end":{"line":11,"column":292,"offset":1540}}}],"position":{"start":{"line":11,"column":1,"offset":1249},"end":{"line":11,"column":292,"offset":1540}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5,"column":1,"offset":310},"end":{"line":11,"column":292,"offset":1540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":13,"column":1,"offset":1542},"end":{"line":13,"column":4,"offset":1545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To fix this, composite components should “consume” any prop that is intended for the composite component and not intended for the child component. Example:","position":{"start":{"line":15,"column":1,"offset":1547},"end":{"line":15,"column":156,"offset":1702}}}],"position":{"start":{"line":15,"column":1,"offset":1547},"end":{"line":15,"column":156,"offset":1702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Bad:","position":{"start":{"line":17,"column":3,"offset":1706},"end":{"line":17,"column":7,"offset":1710}}}],"position":{"start":{"line":17,"column":1,"offset":1704},"end":{"line":17,"column":9,"offset":1712}}},{"type":"text","value":" Unexpected ","position":{"start":{"line":17,"column":9,"offset":1712},"end":{"line":17,"column":21,"offset":1724}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">layout</code>","position":{"start":{"line":17,"column":21,"offset":1724},"end":{"line":17,"column":29,"offset":1732}}},{"type":"text","value":" prop is forwarded to the ","position":{"start":{"line":17,"column":29,"offset":1732},"end":{"line":17,"column":55,"offset":1758}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">div</code>","position":{"start":{"line":17,"column":55,"offset":1758},"end":{"line":17,"column":60,"offset":1763}}},{"type":"text","value":" tag.","position":{"start":{"line":17,"column":60,"offset":1763},"end":{"line":17,"column":65,"offset":1768}}}],"position":{"start":{"line":17,"column":1,"offset":1704},"end":{"line":17,"column":65,"offset":1768}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyDiv</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>layout <span class=\"token operator\">===</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// BAD! Because you know for sure \"layout\" is not a prop that &lt;div> understands.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getHorizontalStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// BAD! Because you know for sure \"layout\" is not a prop that &lt;div> understands.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getVerticalStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":19,"column":1,"offset":1770},"end":{"line":29,"column":4,"offset":2145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Good:","position":{"start":{"line":31,"column":3,"offset":2149},"end":{"line":31,"column":8,"offset":2154}}}],"position":{"start":{"line":31,"column":1,"offset":2147},"end":{"line":31,"column":10,"offset":2156}}},{"type":"text","value":" The spread operator can be used to pull variables off props, and put the remaining props into a variable.","position":{"start":{"line":31,"column":10,"offset":2156},"end":{"line":31,"column":116,"offset":2262}}}],"position":{"start":{"line":31,"column":1,"offset":2147},"end":{"line":31,"column":116,"offset":2262}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyDiv</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> layout<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>layout <span class=\"token operator\">===</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getHorizontalStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getVerticalStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":33,"column":1,"offset":2264},"end":{"line":42,"column":4,"offset":2497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Good:","position":{"start":{"line":44,"column":3,"offset":2501},"end":{"line":44,"column":8,"offset":2506}}}],"position":{"start":{"line":44,"column":1,"offset":2499},"end":{"line":44,"column":10,"offset":2508}}},{"type":"text","value":" You can also assign the props to a new object and delete the keys that you’re using from the new object. Be sure not to delete the props from the original ","position":{"start":{"line":44,"column":10,"offset":2508},"end":{"line":44,"column":166,"offset":2664}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">this.props</code>","position":{"start":{"line":44,"column":166,"offset":2664},"end":{"line":44,"column":178,"offset":2676}}},{"type":"text","value":" object, since that object should be considered immutable.","position":{"start":{"line":44,"column":178,"offset":2676},"end":{"line":44,"column":236,"offset":2734}}}],"position":{"start":{"line":44,"column":1,"offset":2499},"end":{"line":44,"column":236,"offset":2734}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyDiv</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> divProps <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">delete</span> divProps<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>layout <span class=\"token operator\">===</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">divProps</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getHorizontalStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">divProps</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getVerticalStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":46,"column":1,"offset":2736},"end":{"line":58,"column":4,"offset":3020}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":1,"offset":3021}}}}