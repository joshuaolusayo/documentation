{"expireTime":9007200851888168000,"key":"transformer-remark-markdown-html-ast-d9a7f7d43790bcaad71d6a68cd8b0741-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We recently spoke at one of f8’s breakout session about Flux, a data flow architecture that works well with React.  Check out the video here:","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":142,"offset":142}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":142,"offset":142}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 48.46153846153846%; position: relative; height: 0; overflow: hidden; \" > <figure><iframe src=\"//www.youtube-nocookie.com/embed/nYkdrAPrdcw?list=PLb0IAmt7-GS188xDYE-u1ShQmFFGbrk0v&amp;start=621\" frameborder=\"0\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe></figure> </div>","position":{"start":{"line":4,"column":1,"offset":144},"end":{"line":4,"column":193,"offset":336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To summarize, Flux works well for us because the single directional data flow makes it easy to understand and modify an application as it becomes more complicated. We found that two-way data bindings lead to cascading updates, where changing one data model led to another data model updating, making it very difficult to predict what would change as the result of a single user interaction.","position":{"start":{"line":6,"column":1,"offset":338},"end":{"line":6,"column":391,"offset":728}}}],"position":{"start":{"line":6,"column":1,"offset":338},"end":{"line":6,"column":391,"offset":728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Flux, the Dispatcher is a singleton that directs the flow of data and ensures that updates do not cascade. As an application grows, the Dispatcher becomes more vital, as it can also manage dependencies between stores by invoking the registered callbacks in a specific order.","position":{"start":{"line":8,"column":1,"offset":730},"end":{"line":8,"column":278,"offset":1007}}}],"position":{"start":{"line":8,"column":1,"offset":730},"end":{"line":8,"column":278,"offset":1007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When a user interacts with a React view, the view sends an action (usually represented as a JavaScript object with some fields) through the dispatcher, which notifies the various stores that hold the application’s data and business logic. When the stores change state, they notify the views that something has updated. This works especially well with React’s declarative model, which allows the stores to send updates without specifying how to transition views between states.","position":{"start":{"line":10,"column":1,"offset":1009},"end":{"line":10,"column":477,"offset":1485}}}],"position":{"start":{"line":10,"column":1,"offset":1009},"end":{"line":10,"column":477,"offset":1485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Flux is more of a pattern than a formal framework, so you can start using Flux immediately without a lot of new code. An ","position":{"start":{"line":12,"column":1,"offset":1487},"end":{"line":12,"column":122,"offset":1608}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebook/flux/tree/master/examples/flux-todomvc","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"example of this architecture","position":{"start":{"line":12,"column":123,"offset":1609},"end":{"line":12,"column":151,"offset":1637}}}],"position":{"start":{"line":12,"column":122,"offset":1608},"end":{"line":12,"column":220,"offset":1706}}},{"type":"text","value":" is available, along with more ","position":{"start":{"line":12,"column":220,"offset":1706},"end":{"line":12,"column":251,"offset":1737}}},{"type":"element","tagName":"a","properties":{"href":"https://facebook.github.io/flux/docs/overview.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"detailed documentation","position":{"start":{"line":12,"column":252,"offset":1738},"end":{"line":12,"column":274,"offset":1760}}}],"position":{"start":{"line":12,"column":251,"offset":1737},"end":{"line":12,"column":327,"offset":1813}}},{"type":"text","value":" and a ","position":{"start":{"line":12,"column":327,"offset":1813},"end":{"line":12,"column":334,"offset":1820}}},{"type":"element","tagName":"a","properties":{"href":"https://facebook.github.io/flux/docs/todo-list.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"tutorial","position":{"start":{"line":12,"column":335,"offset":1821},"end":{"line":12,"column":343,"offset":1829}}}],"position":{"start":{"line":12,"column":334,"offset":1820},"end":{"line":12,"column":397,"offset":1883}}},{"type":"text","value":". Look for more examples to come in the future.","position":{"start":{"line":12,"column":397,"offset":1883},"end":{"line":12,"column":444,"offset":1930}}}],"position":{"start":{"line":12,"column":1,"offset":1487},"end":{"line":12,"column":444,"offset":1930}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":13,"column":1,"offset":1931}}}}