{"expireTime":9007200851888155000,"key":"transformer-remark-markdown-html-ast-dfb9ce2fed3279b47c64ce13bdf7a6fb-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Hooks","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":7,"offset":7}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":8,"offset":8}}},{"type":"text","value":" are a new addition in React 16.8. They let you use state and other React features without writing a class.","position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":115,"offset":115}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":115,"offset":115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This page answers some of the frequently asked questions about ","position":{"start":{"line":4,"column":1,"offset":117},"end":{"line":4,"column":64,"offset":180}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-overview.html"},"children":[{"type":"text","value":"Hooks","position":{"start":{"line":4,"column":65,"offset":181},"end":{"line":4,"column":70,"offset":186}}}],"position":{"start":{"line":4,"column":64,"offset":180},"end":{"line":4,"column":98,"offset":214}}},{"type":"text","value":".","position":{"start":{"line":4,"column":98,"offset":214},"end":{"line":4,"column":99,"offset":215}}}],"position":{"start":{"line":4,"column":1,"offset":117},"end":{"line":4,"column":99,"offset":215}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!--\n  if you ever need to regenerate this, this snippet in the devtools console might help:\n\n  $$('.anchor').map(a =>\n    `${' '.repeat(2 * +a.parentNode.nodeName.slice(1))}` +\n    `[${a.parentNode.textContent}](${a.getAttribute('href')})`\n  ).join('\\n')\n-->","position":{"start":{"line":6,"column":1,"offset":217},"end":{"line":13,"column":4,"offset":476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#adoption-strategy"},"children":[{"type":"text","value":"Adoption Strategy","position":{"start":{"line":15,"column":6,"offset":483},"end":{"line":15,"column":23,"offset":500}}}],"position":{"start":{"line":15,"column":5,"offset":482},"end":{"line":15,"column":44,"offset":521}}}],"position":{"start":{"line":15,"column":3,"offset":480},"end":{"line":15,"column":46,"offset":523}}}],"position":{"start":{"line":15,"column":3,"offset":480},"end":{"line":15,"column":46,"offset":523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#which-versions-of-react-include-hooks"},"children":[{"type":"text","value":"Which versions of React include Hooks?","position":{"start":{"line":16,"column":6,"offset":529},"end":{"line":16,"column":44,"offset":567}}}],"position":{"start":{"line":16,"column":5,"offset":528},"end":{"line":16,"column":85,"offset":608}}}],"position":{"start":{"line":16,"column":3,"offset":526},"end":{"line":16,"column":85,"offset":608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-i-need-to-rewrite-all-my-class-components"},"children":[{"type":"text","value":"Do I need to rewrite all my class components?","position":{"start":{"line":17,"column":6,"offset":614},"end":{"line":17,"column":51,"offset":659}}}],"position":{"start":{"line":17,"column":5,"offset":613},"end":{"line":17,"column":99,"offset":707}}}],"position":{"start":{"line":17,"column":3,"offset":611},"end":{"line":17,"column":99,"offset":707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-can-i-do-with-hooks-that-i-couldnt-with-classes"},"children":[{"type":"text","value":"What can I do with Hooks that I couldn’t with classes?","position":{"start":{"line":18,"column":6,"offset":713},"end":{"line":18,"column":60,"offset":767}}}],"position":{"start":{"line":18,"column":5,"offset":712},"end":{"line":18,"column":116,"offset":823}}}],"position":{"start":{"line":18,"column":3,"offset":710},"end":{"line":18,"column":116,"offset":823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-much-of-my-react-knowledge-stays-relevant"},"children":[{"type":"text","value":"How much of my React knowledge stays relevant?","position":{"start":{"line":19,"column":6,"offset":829},"end":{"line":19,"column":52,"offset":875}}}],"position":{"start":{"line":19,"column":5,"offset":828},"end":{"line":19,"column":101,"offset":924}}}],"position":{"start":{"line":19,"column":3,"offset":826},"end":{"line":19,"column":101,"offset":924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#should-i-use-hooks-classes-or-a-mix-of-both"},"children":[{"type":"text","value":"Should I use Hooks, classes, or a mix of both?","position":{"start":{"line":20,"column":6,"offset":930},"end":{"line":20,"column":52,"offset":976}}}],"position":{"start":{"line":20,"column":5,"offset":929},"end":{"line":20,"column":99,"offset":1023}}}],"position":{"start":{"line":20,"column":3,"offset":927},"end":{"line":20,"column":99,"offset":1023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-hooks-cover-all-use-cases-for-classes"},"children":[{"type":"text","value":"Do Hooks cover all use cases for classes?","position":{"start":{"line":21,"column":6,"offset":1029},"end":{"line":21,"column":47,"offset":1070}}}],"position":{"start":{"line":21,"column":5,"offset":1028},"end":{"line":21,"column":91,"offset":1114}}}],"position":{"start":{"line":21,"column":3,"offset":1026},"end":{"line":21,"column":91,"offset":1114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-hooks-replace-render-props-and-higher-order-components"},"children":[{"type":"text","value":"Do Hooks replace render props and higher-order components?","position":{"start":{"line":22,"column":6,"offset":1120},"end":{"line":22,"column":64,"offset":1178}}}],"position":{"start":{"line":22,"column":5,"offset":1119},"end":{"line":22,"column":125,"offset":1239}}}],"position":{"start":{"line":22,"column":3,"offset":1117},"end":{"line":22,"column":125,"offset":1239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router"},"children":[{"type":"text","value":"What do Hooks mean for popular APIs like Redux connect() and React Router?","position":{"start":{"line":23,"column":6,"offset":1245},"end":{"line":23,"column":80,"offset":1319}}}],"position":{"start":{"line":23,"column":5,"offset":1244},"end":{"line":23,"column":155,"offset":1394}}}],"position":{"start":{"line":23,"column":3,"offset":1242},"end":{"line":23,"column":155,"offset":1394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-hooks-work-with-static-typing"},"children":[{"type":"text","value":"Do Hooks work with static typing?","position":{"start":{"line":24,"column":6,"offset":1400},"end":{"line":24,"column":39,"offset":1433}}}],"position":{"start":{"line":24,"column":5,"offset":1399},"end":{"line":24,"column":75,"offset":1469}}}],"position":{"start":{"line":24,"column":3,"offset":1397},"end":{"line":24,"column":75,"offset":1469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-test-components-that-use-hooks"},"children":[{"type":"text","value":"How to test components that use Hooks?","position":{"start":{"line":25,"column":6,"offset":1475},"end":{"line":25,"column":44,"offset":1513}}}],"position":{"start":{"line":25,"column":5,"offset":1474},"end":{"line":25,"column":85,"offset":1554}}}],"position":{"start":{"line":25,"column":3,"offset":1472},"end":{"line":25,"column":85,"offset":1554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-exactly-do-the-lint-rules-enforce"},"children":[{"type":"text","value":"What exactly do the lint rules enforce?","position":{"start":{"line":26,"column":6,"offset":1560},"end":{"line":26,"column":45,"offset":1599}}}],"position":{"start":{"line":26,"column":5,"offset":1559},"end":{"line":26,"column":87,"offset":1641}}}],"position":{"start":{"line":26,"column":3,"offset":1557},"end":{"line":26,"column":87,"offset":1641}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":3,"offset":526},"end":{"line":26,"column":87,"offset":1641}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":1,"offset":478},"end":{"line":26,"column":87,"offset":1641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#from-classes-to-hooks"},"children":[{"type":"text","value":"From Classes to Hooks","position":{"start":{"line":27,"column":6,"offset":1647},"end":{"line":27,"column":27,"offset":1668}}}],"position":{"start":{"line":27,"column":5,"offset":1646},"end":{"line":27,"column":52,"offset":1693}}}],"position":{"start":{"line":27,"column":3,"offset":1644},"end":{"line":27,"column":54,"offset":1695}}}],"position":{"start":{"line":27,"column":3,"offset":1644},"end":{"line":27,"column":54,"offset":1695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-do-lifecycle-methods-correspond-to-hooks"},"children":[{"type":"text","value":"How do lifecycle methods correspond to Hooks?","position":{"start":{"line":28,"column":6,"offset":1701},"end":{"line":28,"column":51,"offset":1746}}}],"position":{"start":{"line":28,"column":5,"offset":1700},"end":{"line":28,"column":99,"offset":1794}}}],"position":{"start":{"line":28,"column":3,"offset":1698},"end":{"line":28,"column":99,"offset":1794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-can-i-do-data-fetching-with-hooks"},"children":[{"type":"text","value":"How can I do data fetching with Hooks?","position":{"start":{"line":29,"column":6,"offset":1800},"end":{"line":29,"column":44,"offset":1838}}}],"position":{"start":{"line":29,"column":5,"offset":1799},"end":{"line":29,"column":85,"offset":1879}}}],"position":{"start":{"line":29,"column":3,"offset":1797},"end":{"line":29,"column":85,"offset":1879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-instance-variables"},"children":[{"type":"text","value":"Is there something like instance variables?","position":{"start":{"line":30,"column":6,"offset":1885},"end":{"line":30,"column":49,"offset":1928}}}],"position":{"start":{"line":30,"column":5,"offset":1884},"end":{"line":30,"column":95,"offset":1974}}}],"position":{"start":{"line":30,"column":3,"offset":1882},"end":{"line":30,"column":95,"offset":1974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#should-i-use-one-or-many-state-variables"},"children":[{"type":"text","value":"Should I use one or many state variables?","position":{"start":{"line":31,"column":6,"offset":1980},"end":{"line":31,"column":47,"offset":2021}}}],"position":{"start":{"line":31,"column":5,"offset":1979},"end":{"line":31,"column":91,"offset":2065}}}],"position":{"start":{"line":31,"column":3,"offset":1977},"end":{"line":31,"column":91,"offset":2065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#can-i-run-an-effect-only-on-updates"},"children":[{"type":"text","value":"Can I run an effect only on updates?","position":{"start":{"line":32,"column":6,"offset":2071},"end":{"line":32,"column":42,"offset":2107}}}],"position":{"start":{"line":32,"column":5,"offset":2070},"end":{"line":32,"column":81,"offset":2146}}}],"position":{"start":{"line":32,"column":3,"offset":2068},"end":{"line":32,"column":81,"offset":2146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-get-the-previous-props-or-state"},"children":[{"type":"text","value":"How to get the previous props or state?","position":{"start":{"line":33,"column":6,"offset":2152},"end":{"line":33,"column":45,"offset":2191}}}],"position":{"start":{"line":33,"column":5,"offset":2151},"end":{"line":33,"column":87,"offset":2233}}}],"position":{"start":{"line":33,"column":3,"offset":2149},"end":{"line":33,"column":87,"offset":2233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#why-am-i-seeing-stale-props-or-state-inside-my-function"},"children":[{"type":"text","value":"Why am I seeing stale props or state inside my function?","position":{"start":{"line":34,"column":6,"offset":2239},"end":{"line":34,"column":62,"offset":2295}}}],"position":{"start":{"line":34,"column":5,"offset":2238},"end":{"line":34,"column":121,"offset":2354}}}],"position":{"start":{"line":34,"column":3,"offset":2236},"end":{"line":34,"column":121,"offset":2354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-getderivedstatefromprops"},"children":[{"type":"text","value":"How do I implement getDerivedStateFromProps?","position":{"start":{"line":35,"column":6,"offset":2360},"end":{"line":35,"column":50,"offset":2404}}}],"position":{"start":{"line":35,"column":5,"offset":2359},"end":{"line":35,"column":97,"offset":2451}}}],"position":{"start":{"line":35,"column":3,"offset":2357},"end":{"line":35,"column":97,"offset":2451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-forceupdate"},"children":[{"type":"text","value":"Is there something like forceUpdate?","position":{"start":{"line":36,"column":6,"offset":2457},"end":{"line":36,"column":42,"offset":2493}}}],"position":{"start":{"line":36,"column":5,"offset":2456},"end":{"line":36,"column":81,"offset":2532}}}],"position":{"start":{"line":36,"column":3,"offset":2454},"end":{"line":36,"column":81,"offset":2532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#can-i-make-a-ref-to-a-function-component"},"children":[{"type":"text","value":"Can I make a ref to a function component?","position":{"start":{"line":37,"column":6,"offset":2538},"end":{"line":37,"column":47,"offset":2579}}}],"position":{"start":{"line":37,"column":5,"offset":2537},"end":{"line":37,"column":91,"offset":2623}}}],"position":{"start":{"line":37,"column":3,"offset":2535},"end":{"line":37,"column":91,"offset":2623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-can-i-measure-a-dom-node"},"children":[{"type":"text","value":"How can I measure a DOM node?","position":{"start":{"line":38,"column":6,"offset":2629},"end":{"line":38,"column":35,"offset":2658}}}],"position":{"start":{"line":38,"column":5,"offset":2628},"end":{"line":38,"column":67,"offset":2690}}}],"position":{"start":{"line":38,"column":3,"offset":2626},"end":{"line":38,"column":67,"offset":2690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-does-const-thing-setthing--usestate-mean"},"children":[{"type":"text","value":"What does const [thing, setThing] = useState() mean?","position":{"start":{"line":39,"column":6,"offset":2696},"end":{"line":39,"column":58,"offset":2748}}}],"position":{"start":{"line":39,"column":5,"offset":2695},"end":{"line":39,"column":107,"offset":2797}}}],"position":{"start":{"line":39,"column":3,"offset":2693},"end":{"line":39,"column":107,"offset":2797}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":3,"offset":1698},"end":{"line":39,"column":107,"offset":2797}}},{"type":"text","value":"\n"}],"position":{"start":{"line":27,"column":1,"offset":1642},"end":{"line":39,"column":107,"offset":2797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#performance-optimizations"},"children":[{"type":"text","value":"Performance Optimizations","position":{"start":{"line":40,"column":6,"offset":2803},"end":{"line":40,"column":31,"offset":2828}}}],"position":{"start":{"line":40,"column":5,"offset":2802},"end":{"line":40,"column":60,"offset":2857}}}],"position":{"start":{"line":40,"column":3,"offset":2800},"end":{"line":40,"column":62,"offset":2859}}}],"position":{"start":{"line":40,"column":3,"offset":2800},"end":{"line":40,"column":62,"offset":2859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#can-i-skip-an-effect-on-updates"},"children":[{"type":"text","value":"Can I skip an effect on updates?","position":{"start":{"line":41,"column":6,"offset":2865},"end":{"line":41,"column":38,"offset":2897}}}],"position":{"start":{"line":41,"column":5,"offset":2864},"end":{"line":41,"column":73,"offset":2932}}}],"position":{"start":{"line":41,"column":3,"offset":2862},"end":{"line":41,"column":73,"offset":2932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#is-it-safe-to-omit-functions-from-the-list-of-dependencies"},"children":[{"type":"text","value":"Is it safe to omit functions from the list of dependencies?","position":{"start":{"line":42,"column":6,"offset":2938},"end":{"line":42,"column":65,"offset":2997}}}],"position":{"start":{"line":42,"column":5,"offset":2937},"end":{"line":42,"column":127,"offset":3059}}}],"position":{"start":{"line":42,"column":3,"offset":2935},"end":{"line":42,"column":127,"offset":3059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-can-i-do-if-my-effect-dependencies-change-too-often"},"children":[{"type":"text","value":"What can I do if my effect dependencies change too often?","position":{"start":{"line":43,"column":6,"offset":3065},"end":{"line":43,"column":63,"offset":3122}}}],"position":{"start":{"line":43,"column":5,"offset":3064},"end":{"line":43,"column":123,"offset":3182}}}],"position":{"start":{"line":43,"column":3,"offset":3062},"end":{"line":43,"column":123,"offset":3182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-shouldcomponentupdate"},"children":[{"type":"text","value":"How do I implement shouldComponentUpdate?","position":{"start":{"line":44,"column":6,"offset":3188},"end":{"line":44,"column":47,"offset":3229}}}],"position":{"start":{"line":44,"column":5,"offset":3187},"end":{"line":44,"column":91,"offset":3273}}}],"position":{"start":{"line":44,"column":3,"offset":3185},"end":{"line":44,"column":91,"offset":3273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-memoize-calculations"},"children":[{"type":"text","value":"How to memoize calculations?","position":{"start":{"line":45,"column":6,"offset":3279},"end":{"line":45,"column":34,"offset":3307}}}],"position":{"start":{"line":45,"column":5,"offset":3278},"end":{"line":45,"column":65,"offset":3338}}}],"position":{"start":{"line":45,"column":3,"offset":3276},"end":{"line":45,"column":65,"offset":3338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-create-expensive-objects-lazily"},"children":[{"type":"text","value":"How to create expensive objects lazily?","position":{"start":{"line":46,"column":6,"offset":3344},"end":{"line":46,"column":45,"offset":3383}}}],"position":{"start":{"line":46,"column":5,"offset":3343},"end":{"line":46,"column":87,"offset":3425}}}],"position":{"start":{"line":46,"column":3,"offset":3341},"end":{"line":46,"column":87,"offset":3425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#are-hooks-slow-because-of-creating-functions-in-render"},"children":[{"type":"text","value":"Are Hooks slow because of creating functions in render?","position":{"start":{"line":47,"column":6,"offset":3431},"end":{"line":47,"column":61,"offset":3486}}}],"position":{"start":{"line":47,"column":5,"offset":3430},"end":{"line":47,"column":119,"offset":3544}}}],"position":{"start":{"line":47,"column":3,"offset":3428},"end":{"line":47,"column":119,"offset":3544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-avoid-passing-callbacks-down"},"children":[{"type":"text","value":"How to avoid passing callbacks down?","position":{"start":{"line":48,"column":6,"offset":3550},"end":{"line":48,"column":42,"offset":3586}}}],"position":{"start":{"line":48,"column":5,"offset":3549},"end":{"line":48,"column":81,"offset":3625}}}],"position":{"start":{"line":48,"column":3,"offset":3547},"end":{"line":48,"column":81,"offset":3625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-read-an-often-changing-value-from-usecallback"},"children":[{"type":"text","value":"How to read an often-changing value from useCallback?","position":{"start":{"line":49,"column":6,"offset":3631},"end":{"line":49,"column":59,"offset":3684}}}],"position":{"start":{"line":49,"column":5,"offset":3630},"end":{"line":49,"column":115,"offset":3740}}}],"position":{"start":{"line":49,"column":3,"offset":3628},"end":{"line":49,"column":115,"offset":3740}}},{"type":"text","value":"\n"}],"position":{"start":{"line":41,"column":3,"offset":2862},"end":{"line":49,"column":115,"offset":3740}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2798},"end":{"line":49,"column":115,"offset":3740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#under-the-hood"},"children":[{"type":"text","value":"Under the Hood","position":{"start":{"line":50,"column":6,"offset":3746},"end":{"line":50,"column":20,"offset":3760}}}],"position":{"start":{"line":50,"column":5,"offset":3745},"end":{"line":50,"column":38,"offset":3778}}}],"position":{"start":{"line":50,"column":3,"offset":3743},"end":{"line":50,"column":40,"offset":3780}}}],"position":{"start":{"line":50,"column":3,"offset":3743},"end":{"line":50,"column":40,"offset":3780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-does-react-associate-hook-calls-with-components"},"children":[{"type":"text","value":"How does React associate Hook calls with components?","position":{"start":{"line":51,"column":6,"offset":3786},"end":{"line":51,"column":58,"offset":3838}}}],"position":{"start":{"line":51,"column":5,"offset":3785},"end":{"line":51,"column":113,"offset":3893}}}],"position":{"start":{"line":51,"column":3,"offset":3783},"end":{"line":51,"column":113,"offset":3893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-is-the-prior-art-for-hooks"},"children":[{"type":"text","value":"What is the prior art for Hooks?","position":{"start":{"line":52,"column":6,"offset":3899},"end":{"line":52,"column":38,"offset":3931}}}],"position":{"start":{"line":52,"column":5,"offset":3898},"end":{"line":52,"column":73,"offset":3966}}}],"position":{"start":{"line":52,"column":3,"offset":3896},"end":{"line":52,"column":73,"offset":3966}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":3,"offset":3783},"end":{"line":52,"column":73,"offset":3966}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":1,"offset":3741},"end":{"line":52,"column":73,"offset":3966}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":1,"offset":478},"end":{"line":52,"column":73,"offset":3966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"adoption-strategy"},"children":[{"type":"element","tagName":"a","properties":{"href":"#adoption-strategy","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Adoption Strategy ","position":{"start":{"line":54,"column":4,"offset":3971},"end":{"line":54,"column":42,"offset":4009}}}],"position":{"start":{"line":54,"column":1,"offset":3968},"end":{"line":54,"column":42,"offset":4009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"which-versions-of-react-include-hooks"},"children":[{"type":"element","tagName":"a","properties":{"href":"#which-versions-of-react-include-hooks","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Which versions of React include Hooks? ","position":{"start":{"line":56,"column":5,"offset":4015},"end":{"line":56,"column":84,"offset":4094}}}],"position":{"start":{"line":56,"column":1,"offset":4011},"end":{"line":56,"column":84,"offset":4094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Starting with 16.8.0, React includes a stable implementation of React Hooks for:","position":{"start":{"line":58,"column":1,"offset":4096},"end":{"line":58,"column":81,"offset":4176}}}],"position":{"start":{"line":58,"column":1,"offset":4096},"end":{"line":58,"column":81,"offset":4176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React DOM","position":{"start":{"line":60,"column":3,"offset":4180},"end":{"line":60,"column":12,"offset":4189}}}],"position":{"start":{"line":60,"column":1,"offset":4178},"end":{"line":60,"column":12,"offset":4189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React Native","position":{"start":{"line":61,"column":3,"offset":4192},"end":{"line":61,"column":15,"offset":4204}}}],"position":{"start":{"line":61,"column":1,"offset":4190},"end":{"line":61,"column":15,"offset":4204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React DOM Server","position":{"start":{"line":62,"column":3,"offset":4207},"end":{"line":62,"column":19,"offset":4223}}}],"position":{"start":{"line":62,"column":1,"offset":4205},"end":{"line":62,"column":19,"offset":4223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React Test Renderer","position":{"start":{"line":63,"column":3,"offset":4226},"end":{"line":63,"column":22,"offset":4245}}}],"position":{"start":{"line":63,"column":1,"offset":4224},"end":{"line":63,"column":22,"offset":4245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React Shallow Renderer","position":{"start":{"line":64,"column":3,"offset":4248},"end":{"line":64,"column":25,"offset":4270}}}],"position":{"start":{"line":64,"column":1,"offset":4246},"end":{"line":64,"column":25,"offset":4270}}},{"type":"text","value":"\n"}],"position":{"start":{"line":60,"column":1,"offset":4178},"end":{"line":64,"column":25,"offset":4270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that ","position":{"start":{"line":66,"column":1,"offset":4272},"end":{"line":66,"column":11,"offset":4282}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"to enable Hooks, all React packages need to be 16.8.0 or higher","position":{"start":{"line":66,"column":13,"offset":4284},"end":{"line":66,"column":76,"offset":4347}}}],"position":{"start":{"line":66,"column":11,"offset":4282},"end":{"line":66,"column":78,"offset":4349}}},{"type":"text","value":". Hooks won’t work if you forget to update, for example, React DOM.","position":{"start":{"line":66,"column":78,"offset":4349},"end":{"line":66,"column":145,"offset":4416}}}],"position":{"start":{"line":66,"column":1,"offset":4272},"end":{"line":66,"column":145,"offset":4416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://reactnative.dev/blog/2019/03/12/releasing-react-native-059","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"React Native 0.59","position":{"start":{"line":68,"column":2,"offset":4419},"end":{"line":68,"column":19,"offset":4436}}}],"position":{"start":{"line":68,"column":1,"offset":4418},"end":{"line":68,"column":88,"offset":4505}}},{"type":"text","value":" and above support Hooks.","position":{"start":{"line":68,"column":88,"offset":4505},"end":{"line":68,"column":113,"offset":4530}}}],"position":{"start":{"line":68,"column":1,"offset":4418},"end":{"line":68,"column":113,"offset":4530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"do-i-need-to-rewrite-all-my-class-components"},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-i-need-to-rewrite-all-my-class-components","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Do I need to rewrite all my class components? ","position":{"start":{"line":70,"column":5,"offset":4536},"end":{"line":70,"column":98,"offset":4629}}}],"position":{"start":{"line":70,"column":1,"offset":4532},"end":{"line":70,"column":98,"offset":4629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"No. There are ","position":{"start":{"line":72,"column":1,"offset":4631},"end":{"line":72,"column":15,"offset":4645}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-intro.html#gradual-adoption-strategy"},"children":[{"type":"text","value":"no plans","position":{"start":{"line":72,"column":16,"offset":4646},"end":{"line":72,"column":24,"offset":4654}}}],"position":{"start":{"line":72,"column":15,"offset":4645},"end":{"line":72,"column":75,"offset":4705}}},{"type":"text","value":" to remove classes from React — we all need to keep shipping products and can’t afford rewrites. We recommend trying Hooks in new code.","position":{"start":{"line":72,"column":75,"offset":4705},"end":{"line":72,"column":211,"offset":4841}}}],"position":{"start":{"line":72,"column":1,"offset":4631},"end":{"line":72,"column":211,"offset":4841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"what-can-i-do-with-hooks-that-i-couldnt-with-classes"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-can-i-do-with-hooks-that-i-couldnt-with-classes","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What can I do with Hooks that I couldn’t with classes? ","position":{"start":{"line":74,"column":5,"offset":4847},"end":{"line":74,"column":115,"offset":4957}}}],"position":{"start":{"line":74,"column":1,"offset":4843},"end":{"line":74,"column":115,"offset":4957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hooks offer a powerful and expressive new way to reuse functionality between components. ","position":{"start":{"line":76,"column":1,"offset":4959},"end":{"line":76,"column":90,"offset":5048}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-custom.html"},"children":[{"type":"text","value":"“Building Your Own Hooks”","position":{"start":{"line":76,"column":91,"offset":5049},"end":{"line":76,"column":116,"offset":5074}}}],"position":{"start":{"line":76,"column":90,"offset":5048},"end":{"line":76,"column":142,"offset":5100}}},{"type":"text","value":" provides a glimpse of what’s possible. ","position":{"start":{"line":76,"column":142,"offset":5100},"end":{"line":76,"column":182,"offset":5140}}},{"type":"element","tagName":"a","properties":{"href":"https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"This article","position":{"start":{"line":76,"column":183,"offset":5141},"end":{"line":76,"column":195,"offset":5153}}}],"position":{"start":{"line":76,"column":182,"offset":5140},"end":{"line":76,"column":270,"offset":5228}}},{"type":"text","value":" by a React core team member dives deeper into the new capabilities unlocked by Hooks.","position":{"start":{"line":76,"column":270,"offset":5228},"end":{"line":76,"column":356,"offset":5314}}}],"position":{"start":{"line":76,"column":1,"offset":4959},"end":{"line":76,"column":356,"offset":5314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-much-of-my-react-knowledge-stays-relevant"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-much-of-my-react-knowledge-stays-relevant","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How much of my React knowledge stays relevant? ","position":{"start":{"line":78,"column":5,"offset":5320},"end":{"line":78,"column":100,"offset":5415}}}],"position":{"start":{"line":78,"column":1,"offset":5316},"end":{"line":78,"column":100,"offset":5415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hooks are a more direct way to use the React features you already know — such as state, lifecycle, context, and refs. They don’t fundamentally change how React works, and your knowledge of components, props, and top-down data flow is just as relevant.","position":{"start":{"line":80,"column":1,"offset":5417},"end":{"line":80,"column":253,"offset":5669}}}],"position":{"start":{"line":80,"column":1,"offset":5417},"end":{"line":80,"column":253,"offset":5669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hooks do have a learning curve of their own. If there’s something missing in this documentation, ","position":{"start":{"line":82,"column":1,"offset":5671},"end":{"line":82,"column":98,"offset":5768}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/reactjs/reactjs.org/issues/new","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"raise an issue","position":{"start":{"line":82,"column":99,"offset":5769},"end":{"line":82,"column":113,"offset":5783}}}],"position":{"start":{"line":82,"column":98,"offset":5768},"end":{"line":82,"column":165,"offset":5835}}},{"type":"text","value":" and we’ll try to help.","position":{"start":{"line":82,"column":165,"offset":5835},"end":{"line":82,"column":188,"offset":5858}}}],"position":{"start":{"line":82,"column":1,"offset":5671},"end":{"line":82,"column":188,"offset":5858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"should-i-use-hooks-classes-or-a-mix-of-both"},"children":[{"type":"element","tagName":"a","properties":{"href":"#should-i-use-hooks-classes-or-a-mix-of-both","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Should I use Hooks, classes, or a mix of both? ","position":{"start":{"line":84,"column":5,"offset":5864},"end":{"line":84,"column":98,"offset":5957}}}],"position":{"start":{"line":84,"column":1,"offset":5860},"end":{"line":84,"column":98,"offset":5957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you’re ready, we’d encourage you to start trying Hooks in new components you write. Make sure everyone on your team is on board with using them and familiar with this documentation. We don’t recommend rewriting your existing classes to Hooks unless you planned to rewrite them anyway (e.g. to fix bugs).","position":{"start":{"line":86,"column":1,"offset":5959},"end":{"line":86,"column":309,"offset":6267}}}],"position":{"start":{"line":86,"column":1,"offset":5959},"end":{"line":86,"column":309,"offset":6267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can’t use Hooks ","position":{"start":{"line":88,"column":1,"offset":6269},"end":{"line":88,"column":21,"offset":6289}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inside","position":{"start":{"line":88,"column":22,"offset":6290},"end":{"line":88,"column":28,"offset":6296}}}],"position":{"start":{"line":88,"column":21,"offset":6289},"end":{"line":88,"column":29,"offset":6297}}},{"type":"text","value":" a class component, but you can definitely mix classes and function components with Hooks in a single tree. Whether a component is a class or a function that uses Hooks is an implementation detail of that component. In the longer term, we expect Hooks to be the primary way people write React components.","position":{"start":{"line":88,"column":29,"offset":6297},"end":{"line":88,"column":333,"offset":6601}}}],"position":{"start":{"line":88,"column":1,"offset":6269},"end":{"line":88,"column":333,"offset":6601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"do-hooks-cover-all-use-cases-for-classes"},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-hooks-cover-all-use-cases-for-classes","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Do Hooks cover all use cases for classes? ","position":{"start":{"line":90,"column":5,"offset":6607},"end":{"line":90,"column":90,"offset":6692}}}],"position":{"start":{"line":90,"column":1,"offset":6603},"end":{"line":90,"column":90,"offset":6692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our goal is for Hooks to cover all use cases for classes as soon as possible. There are no Hook equivalents to the uncommon ","position":{"start":{"line":92,"column":1,"offset":6694},"end":{"line":92,"column":125,"offset":6818}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">getSnapshotBeforeUpdate</code>","position":{"start":{"line":92,"column":125,"offset":6818},"end":{"line":92,"column":150,"offset":6843}}},{"type":"text","value":", ","position":{"start":{"line":92,"column":150,"offset":6843},"end":{"line":92,"column":152,"offset":6845}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">getDerivedStateFromError</code>","position":{"start":{"line":92,"column":152,"offset":6845},"end":{"line":92,"column":178,"offset":6871}}},{"type":"text","value":" and ","position":{"start":{"line":92,"column":178,"offset":6871},"end":{"line":92,"column":183,"offset":6876}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">componentDidCatch</code>","position":{"start":{"line":92,"column":183,"offset":6876},"end":{"line":92,"column":202,"offset":6895}}},{"type":"text","value":" lifecycles yet, but we plan to add them soon.","position":{"start":{"line":92,"column":202,"offset":6895},"end":{"line":92,"column":248,"offset":6941}}}],"position":{"start":{"line":92,"column":1,"offset":6694},"end":{"line":92,"column":248,"offset":6941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is an early time for Hooks, and some third-party libraries might not be compatible with Hooks at the moment.","position":{"start":{"line":94,"column":1,"offset":6943},"end":{"line":94,"column":112,"offset":7054}}}],"position":{"start":{"line":94,"column":1,"offset":6943},"end":{"line":94,"column":112,"offset":7054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"do-hooks-replace-render-props-and-higher-order-components"},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-hooks-replace-render-props-and-higher-order-components","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Do Hooks replace render props and higher-order components? ","position":{"start":{"line":96,"column":5,"offset":7060},"end":{"line":96,"column":124,"offset":7179}}}],"position":{"start":{"line":96,"column":1,"offset":7056},"end":{"line":96,"column":124,"offset":7179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Often, render props and higher-order components render only a single child. We think Hooks are a simpler way to serve this use case. There is still a place for both patterns (for example, a virtual scroller component might have a ","position":{"start":{"line":98,"column":1,"offset":7181},"end":{"line":98,"column":231,"offset":7411}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">renderItem</code>","position":{"start":{"line":98,"column":231,"offset":7411},"end":{"line":98,"column":243,"offset":7423}}},{"type":"text","value":" prop, or a visual container component might have its own DOM structure). But in most cases, Hooks will be sufficient and can help reduce nesting in your tree.","position":{"start":{"line":98,"column":243,"offset":7423},"end":{"line":98,"column":402,"offset":7582}}}],"position":{"start":{"line":98,"column":1,"offset":7181},"end":{"line":98,"column":402,"offset":7582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What do Hooks mean for popular APIs like Redux ","position":{"start":{"line":100,"column":5,"offset":7588},"end":{"line":100,"column":52,"offset":7635}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">connect()</code>","position":{"start":{"line":100,"column":52,"offset":7635},"end":{"line":100,"column":63,"offset":7646}}},{"type":"text","value":" and React Router? ","position":{"start":{"line":100,"column":63,"offset":7646},"end":{"line":100,"column":156,"offset":7739}}}],"position":{"start":{"line":100,"column":1,"offset":7584},"end":{"line":100,"column":156,"offset":7739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can continue to use the exact same APIs as you always have; they’ll continue to work.","position":{"start":{"line":102,"column":1,"offset":7741},"end":{"line":102,"column":90,"offset":7830}}}],"position":{"start":{"line":102,"column":1,"offset":7741},"end":{"line":102,"column":90,"offset":7830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"React Redux since v7.1.0 ","position":{"start":{"line":104,"column":1,"offset":7832},"end":{"line":104,"column":26,"offset":7857}}},{"type":"element","tagName":"a","properties":{"href":"https://react-redux.js.org/api/hooks","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"supports Hooks API","position":{"start":{"line":104,"column":27,"offset":7858},"end":{"line":104,"column":45,"offset":7876}}}],"position":{"start":{"line":104,"column":26,"offset":7857},"end":{"line":104,"column":84,"offset":7915}}},{"type":"text","value":" and exposes hooks like ","position":{"start":{"line":104,"column":84,"offset":7915},"end":{"line":104,"column":108,"offset":7939}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useDispatch</code>","position":{"start":{"line":104,"column":108,"offset":7939},"end":{"line":104,"column":121,"offset":7952}}},{"type":"text","value":" or ","position":{"start":{"line":104,"column":121,"offset":7952},"end":{"line":104,"column":125,"offset":7956}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useSelector</code>","position":{"start":{"line":104,"column":125,"offset":7956},"end":{"line":104,"column":138,"offset":7969}}},{"type":"text","value":".","position":{"start":{"line":104,"column":138,"offset":7969},"end":{"line":104,"column":139,"offset":7970}}}],"position":{"start":{"line":104,"column":1,"offset":7832},"end":{"line":104,"column":139,"offset":7970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"React Router ","position":{"start":{"line":106,"column":1,"offset":7972},"end":{"line":106,"column":14,"offset":7985}}},{"type":"element","tagName":"a","properties":{"href":"https://reacttraining.com/react-router/web/api/Hooks","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"supports hooks","position":{"start":{"line":106,"column":15,"offset":7986},"end":{"line":106,"column":29,"offset":8000}}}],"position":{"start":{"line":106,"column":14,"offset":7985},"end":{"line":106,"column":84,"offset":8055}}},{"type":"text","value":" since v5.1.","position":{"start":{"line":106,"column":84,"offset":8055},"end":{"line":106,"column":96,"offset":8067}}}],"position":{"start":{"line":106,"column":1,"offset":7972},"end":{"line":106,"column":96,"offset":8067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Other libraries might support hooks in the future too.","position":{"start":{"line":108,"column":1,"offset":8069},"end":{"line":108,"column":55,"offset":8123}}}],"position":{"start":{"line":108,"column":1,"offset":8069},"end":{"line":108,"column":55,"offset":8123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"do-hooks-work-with-static-typing"},"children":[{"type":"element","tagName":"a","properties":{"href":"#do-hooks-work-with-static-typing","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Do Hooks work with static typing? ","position":{"start":{"line":110,"column":5,"offset":8129},"end":{"line":110,"column":74,"offset":8198}}}],"position":{"start":{"line":110,"column":1,"offset":8125},"end":{"line":110,"column":74,"offset":8198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hooks were designed with static typing in mind. Because they’re functions, they are easier to type correctly than patterns like higher-order components. The latest Flow and TypeScript React definitions include support for React Hooks.","position":{"start":{"line":112,"column":1,"offset":8200},"end":{"line":112,"column":235,"offset":8434}}}],"position":{"start":{"line":112,"column":1,"offset":8200},"end":{"line":112,"column":235,"offset":8434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Importantly, custom Hooks give you the power to constrain React API if you’d like to type them more strictly in some way. React gives you the primitives, but you can combine them in different ways than what we provide out of the box.","position":{"start":{"line":114,"column":1,"offset":8436},"end":{"line":114,"column":234,"offset":8669}}}],"position":{"start":{"line":114,"column":1,"offset":8436},"end":{"line":114,"column":234,"offset":8669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-to-test-components-that-use-hooks"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-test-components-that-use-hooks","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How to test components that use Hooks? ","position":{"start":{"line":116,"column":5,"offset":8675},"end":{"line":116,"column":84,"offset":8754}}}],"position":{"start":{"line":116,"column":1,"offset":8671},"end":{"line":116,"column":84,"offset":8754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From React’s point of view, a component using Hooks is just a regular component. If your testing solution doesn’t rely on React internals, testing components with Hooks shouldn’t be different from how you normally test components.","position":{"start":{"line":118,"column":1,"offset":8756},"end":{"line":118,"column":231,"offset":8986}}}],"position":{"start":{"line":118,"column":1,"offset":8756},"end":{"line":118,"column":231,"offset":8986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":120,"column":2,"offset":8989},"end":{"line":120,"column":6,"offset":8993}}}],"position":{"start":{"line":120,"column":2,"offset":8989},"end":{"line":120,"column":6,"offset":8993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/docs/testing-recipes.html"},"children":[{"type":"text","value":"Testing Recipes","position":{"start":{"line":122,"column":3,"offset":8998},"end":{"line":122,"column":18,"offset":9013}}}],"position":{"start":{"line":122,"column":2,"offset":8997},"end":{"line":122,"column":47,"offset":9042}}},{"type":"text","value":" include many examples that you can copy and paste.","position":{"start":{"line":122,"column":47,"offset":9042},"end":{"line":122,"column":98,"offset":9093}}}],"position":{"start":{"line":122,"column":2,"offset":8997},"end":{"line":122,"column":98,"offset":9093}}},{"type":"text","value":"\n"}],"position":{"start":{"line":120,"column":1,"offset":8988},"end":{"line":122,"column":98,"offset":9093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, let’s say we have this counter component:","position":{"start":{"line":124,"column":1,"offset":9095},"end":{"line":124,"column":55,"offset":9149}}}],"position":{"start":{"line":124,"column":1,"offset":9095},"end":{"line":124,"column":55,"offset":9149}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Click me\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":126,"column":1,"offset":9151},"end":{"line":141,"column":4,"offset":9461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We’ll test it using React DOM. To make sure that the behavior matches what happens in the browser, we’ll wrap the code rendering and updating it into ","position":{"start":{"line":143,"column":1,"offset":9463},"end":{"line":143,"column":151,"offset":9613}}},{"type":"element","tagName":"a","properties":{"href":"/docs/test-utils.html#act"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">ReactTestUtils.act()</code>","position":{"start":{"line":143,"column":152,"offset":9614},"end":{"line":143,"column":174,"offset":9636}}}],"position":{"start":{"line":143,"column":151,"offset":9613},"end":{"line":143,"column":202,"offset":9664}}},{"type":"text","value":" calls:","position":{"start":{"line":143,"column":202,"offset":9664},"end":{"line":143,"column":209,"offset":9671}}}],"position":{"start":{"line":143,"column":1,"offset":9463},"end":{"line":143,"column":209,"offset":9671}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> Counter <span class=\"token keyword\">from</span> <span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can render and update a counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Test first render and effect</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 0 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 0 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Test second render and effect</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 1 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 1 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":145,"column":1,"offset":9673},"end":{"line":180,"column":4,"offset":10637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The calls to ","position":{"start":{"line":182,"column":1,"offset":10639},"end":{"line":182,"column":14,"offset":10652}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">act()</code>","position":{"start":{"line":182,"column":14,"offset":10652},"end":{"line":182,"column":21,"offset":10659}}},{"type":"text","value":" will also flush the effects inside of them.","position":{"start":{"line":182,"column":21,"offset":10659},"end":{"line":182,"column":65,"offset":10703}}}],"position":{"start":{"line":182,"column":1,"offset":10639},"end":{"line":182,"column":65,"offset":10703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you need to test a custom Hook, you can do so by creating a component in your test, and using your Hook from it. Then you can test the component you wrote.","position":{"start":{"line":184,"column":1,"offset":10705},"end":{"line":184,"column":159,"offset":10863}}}],"position":{"start":{"line":184,"column":1,"offset":10705},"end":{"line":184,"column":159,"offset":10863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To reduce the boilerplate, we recommend using ","position":{"start":{"line":186,"column":1,"offset":10865},"end":{"line":186,"column":47,"offset":10911}}},{"type":"element","tagName":"a","properties":{"href":"https://testing-library.com/react","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"React Testing Library","position":{"start":{"line":186,"column":48,"offset":10912},"end":{"line":186,"column":69,"offset":10933}}}],"position":{"start":{"line":186,"column":47,"offset":10911},"end":{"line":186,"column":105,"offset":10969}}},{"type":"text","value":" which is designed to encourage writing tests that use your components as the end users do.","position":{"start":{"line":186,"column":105,"offset":10969},"end":{"line":186,"column":196,"offset":11060}}}],"position":{"start":{"line":186,"column":1,"offset":10865},"end":{"line":186,"column":196,"offset":11060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For more information, check out ","position":{"start":{"line":188,"column":1,"offset":11062},"end":{"line":188,"column":33,"offset":11094}}},{"type":"element","tagName":"a","properties":{"href":"/docs/testing-recipes.html"},"children":[{"type":"text","value":"Testing Recipes","position":{"start":{"line":188,"column":34,"offset":11095},"end":{"line":188,"column":49,"offset":11110}}}],"position":{"start":{"line":188,"column":33,"offset":11094},"end":{"line":188,"column":78,"offset":11139}}},{"type":"text","value":".","position":{"start":{"line":188,"column":78,"offset":11139},"end":{"line":188,"column":79,"offset":11140}}}],"position":{"start":{"line":188,"column":1,"offset":11062},"end":{"line":188,"column":79,"offset":11140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"what-exactly-do-the-lint-rules-enforce"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-exactly-do-the-lint-rules-enforce","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What exactly do the ","position":{"start":{"line":190,"column":5,"offset":11146},"end":{"line":190,"column":25,"offset":11166}}},{"type":"element","tagName":"a","properties":{"href":"https://www.npmjs.com/package/eslint-plugin-react-hooks","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"lint rules","position":{"start":{"line":190,"column":26,"offset":11167},"end":{"line":190,"column":36,"offset":11177}}}],"position":{"start":{"line":190,"column":25,"offset":11166},"end":{"line":190,"column":94,"offset":11235}}},{"type":"text","value":" enforce? ","position":{"start":{"line":190,"column":94,"offset":11235},"end":{"line":190,"column":145,"offset":11286}}}],"position":{"start":{"line":190,"column":1,"offset":11142},"end":{"line":190,"column":145,"offset":11286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We provide an ","position":{"start":{"line":192,"column":1,"offset":11288},"end":{"line":192,"column":15,"offset":11302}}},{"type":"element","tagName":"a","properties":{"href":"https://www.npmjs.com/package/eslint-plugin-react-hooks","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"ESLint plugin","position":{"start":{"line":192,"column":16,"offset":11303},"end":{"line":192,"column":29,"offset":11316}}}],"position":{"start":{"line":192,"column":15,"offset":11302},"end":{"line":192,"column":87,"offset":11374}}},{"type":"text","value":" that enforces ","position":{"start":{"line":192,"column":87,"offset":11374},"end":{"line":192,"column":102,"offset":11389}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-rules.html"},"children":[{"type":"text","value":"rules of Hooks","position":{"start":{"line":192,"column":103,"offset":11390},"end":{"line":192,"column":117,"offset":11404}}}],"position":{"start":{"line":192,"column":102,"offset":11389},"end":{"line":192,"column":142,"offset":11429}}},{"type":"text","value":" to avoid bugs. It assumes that any function starting with ”","position":{"start":{"line":192,"column":142,"offset":11429},"end":{"line":192,"column":202,"offset":11489}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">use</code>","position":{"start":{"line":192,"column":202,"offset":11489},"end":{"line":192,"column":207,"offset":11494}}},{"type":"text","value":"” and a capital letter right after it is a Hook. We recognize this heuristic isn’t perfect and there may be some false positives, but without an ecosystem-wide convention there is just no way to make Hooks work well — and longer names will discourage people from either adopting Hooks or following the convention.","position":{"start":{"line":192,"column":207,"offset":11494},"end":{"line":192,"column":521,"offset":11808}}}],"position":{"start":{"line":192,"column":1,"offset":11288},"end":{"line":192,"column":521,"offset":11808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In particular, the rule enforces that:","position":{"start":{"line":194,"column":1,"offset":11810},"end":{"line":194,"column":39,"offset":11848}}}],"position":{"start":{"line":194,"column":1,"offset":11810},"end":{"line":194,"column":39,"offset":11848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Calls to Hooks are either inside a ","position":{"start":{"line":196,"column":3,"offset":11852},"end":{"line":196,"column":38,"offset":11887}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">PascalCase</code>","position":{"start":{"line":196,"column":38,"offset":11887},"end":{"line":196,"column":50,"offset":11899}}},{"type":"text","value":" function (assumed to be a component) or another ","position":{"start":{"line":196,"column":50,"offset":11899},"end":{"line":196,"column":99,"offset":11948}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useSomething</code>","position":{"start":{"line":196,"column":99,"offset":11948},"end":{"line":196,"column":113,"offset":11962}}},{"type":"text","value":" function (assumed to be a custom Hook).","position":{"start":{"line":196,"column":113,"offset":11962},"end":{"line":196,"column":153,"offset":12002}}}],"position":{"start":{"line":196,"column":1,"offset":11850},"end":{"line":196,"column":153,"offset":12002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Hooks are called in the same order on every render.","position":{"start":{"line":197,"column":3,"offset":12005},"end":{"line":197,"column":54,"offset":12056}}}],"position":{"start":{"line":197,"column":1,"offset":12003},"end":{"line":197,"column":54,"offset":12056}}},{"type":"text","value":"\n"}],"position":{"start":{"line":196,"column":1,"offset":11850},"end":{"line":197,"column":54,"offset":12056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are a few more heuristics, and they might change over time as we fine-tune the rule to balance finding bugs with avoiding false positives.","position":{"start":{"line":199,"column":1,"offset":12058},"end":{"line":199,"column":145,"offset":12202}}}],"position":{"start":{"line":199,"column":1,"offset":12058},"end":{"line":199,"column":145,"offset":12202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"from-classes-to-hooks"},"children":[{"type":"element","tagName":"a","properties":{"href":"#from-classes-to-hooks","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"From Classes to Hooks ","position":{"start":{"line":201,"column":4,"offset":12207},"end":{"line":201,"column":50,"offset":12253}}}],"position":{"start":{"line":201,"column":1,"offset":12204},"end":{"line":201,"column":50,"offset":12253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-do-lifecycle-methods-correspond-to-hooks"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-do-lifecycle-methods-correspond-to-hooks","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How do lifecycle methods correspond to Hooks? ","position":{"start":{"line":203,"column":5,"offset":12259},"end":{"line":203,"column":98,"offset":12352}}}],"position":{"start":{"line":203,"column":1,"offset":12255},"end":{"line":203,"column":98,"offset":12352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">constructor</code>","position":{"start":{"line":205,"column":3,"offset":12356},"end":{"line":205,"column":16,"offset":12369}}},{"type":"text","value":": Function components don’t need a constructor. You can initialize the state in the ","position":{"start":{"line":205,"column":16,"offset":12369},"end":{"line":205,"column":100,"offset":12453}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usestate"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":205,"column":101,"offset":12454},"end":{"line":205,"column":111,"offset":12464}}}],"position":{"start":{"line":205,"column":100,"offset":12453},"end":{"line":205,"column":149,"offset":12502}}},{"type":"text","value":" call. If computing the initial state is expensive, you can pass a function to ","position":{"start":{"line":205,"column":149,"offset":12502},"end":{"line":205,"column":228,"offset":12581}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":205,"column":228,"offset":12581},"end":{"line":205,"column":238,"offset":12591}}},{"type":"text","value":".","position":{"start":{"line":205,"column":238,"offset":12591},"end":{"line":205,"column":239,"offset":12592}}}],"position":{"start":{"line":205,"column":1,"offset":12354},"end":{"line":206,"column":1,"offset":12593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">getDerivedStateFromProps</code>","position":{"start":{"line":207,"column":3,"offset":12596},"end":{"line":207,"column":29,"offset":12622}}},{"type":"text","value":": Schedule an update ","position":{"start":{"line":207,"column":29,"offset":12622},"end":{"line":207,"column":50,"offset":12643}}},{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-getderivedstatefromprops"},"children":[{"type":"text","value":"while rendering","position":{"start":{"line":207,"column":51,"offset":12644},"end":{"line":207,"column":66,"offset":12659}}}],"position":{"start":{"line":207,"column":50,"offset":12643},"end":{"line":207,"column":113,"offset":12706}}},{"type":"text","value":" instead.","position":{"start":{"line":207,"column":113,"offset":12706},"end":{"line":207,"column":122,"offset":12715}}}],"position":{"start":{"line":207,"column":1,"offset":12594},"end":{"line":208,"column":1,"offset":12716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">shouldComponentUpdate</code>","position":{"start":{"line":209,"column":3,"offset":12719},"end":{"line":209,"column":26,"offset":12742}}},{"type":"text","value":": See ","position":{"start":{"line":209,"column":26,"offset":12742},"end":{"line":209,"column":32,"offset":12748}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.memo</code>","position":{"start":{"line":209,"column":32,"offset":12748},"end":{"line":209,"column":44,"offset":12760}}},{"type":"text","value":" ","position":{"start":{"line":209,"column":44,"offset":12760},"end":{"line":209,"column":45,"offset":12761}}},{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-shouldcomponentupdate"},"children":[{"type":"text","value":"below","position":{"start":{"line":209,"column":46,"offset":12762},"end":{"line":209,"column":51,"offset":12767}}}],"position":{"start":{"line":209,"column":45,"offset":12761},"end":{"line":209,"column":95,"offset":12811}}},{"type":"text","value":".","position":{"start":{"line":209,"column":95,"offset":12811},"end":{"line":209,"column":96,"offset":12812}}}],"position":{"start":{"line":209,"column":1,"offset":12717},"end":{"line":210,"column":1,"offset":12813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">render</code>","position":{"start":{"line":211,"column":3,"offset":12816},"end":{"line":211,"column":11,"offset":12824}}},{"type":"text","value":": This is the function component body itself.","position":{"start":{"line":211,"column":11,"offset":12824},"end":{"line":211,"column":56,"offset":12869}}}],"position":{"start":{"line":211,"column":1,"offset":12814},"end":{"line":212,"column":1,"offset":12870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">componentDidMount</code>","position":{"start":{"line":213,"column":3,"offset":12873},"end":{"line":213,"column":22,"offset":12892}}},{"type":"text","value":", ","position":{"start":{"line":213,"column":22,"offset":12892},"end":{"line":213,"column":24,"offset":12894}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">componentDidUpdate</code>","position":{"start":{"line":213,"column":24,"offset":12894},"end":{"line":213,"column":44,"offset":12914}}},{"type":"text","value":", ","position":{"start":{"line":213,"column":44,"offset":12914},"end":{"line":213,"column":46,"offset":12916}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">componentWillUnmount</code>","position":{"start":{"line":213,"column":46,"offset":12916},"end":{"line":213,"column":68,"offset":12938}}},{"type":"text","value":": The ","position":{"start":{"line":213,"column":68,"offset":12938},"end":{"line":213,"column":74,"offset":12944}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#useeffect"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useEffect</code>","position":{"start":{"line":213,"column":75,"offset":12945},"end":{"line":213,"column":86,"offset":12956}}},{"type":"text","value":" Hook","position":{"start":{"line":213,"column":86,"offset":12956},"end":{"line":213,"column":91,"offset":12961}}}],"position":{"start":{"line":213,"column":74,"offset":12944},"end":{"line":213,"column":130,"offset":13000}}},{"type":"text","value":" can express all combinations of these (including ","position":{"start":{"line":213,"column":130,"offset":13000},"end":{"line":213,"column":180,"offset":13050}}},{"type":"element","tagName":"a","properties":{"href":"#can-i-skip-an-effect-on-updates"},"children":[{"type":"text","value":"less","position":{"start":{"line":213,"column":181,"offset":13051},"end":{"line":213,"column":185,"offset":13055}}}],"position":{"start":{"line":213,"column":180,"offset":13050},"end":{"line":213,"column":220,"offset":13090}}},{"type":"text","value":" ","position":{"start":{"line":213,"column":220,"offset":13090},"end":{"line":213,"column":221,"offset":13091}}},{"type":"element","tagName":"a","properties":{"href":"#can-i-run-an-effect-only-on-updates"},"children":[{"type":"text","value":"common","position":{"start":{"line":213,"column":222,"offset":13092},"end":{"line":213,"column":228,"offset":13098}}}],"position":{"start":{"line":213,"column":221,"offset":13091},"end":{"line":213,"column":267,"offset":13137}}},{"type":"text","value":" cases).","position":{"start":{"line":213,"column":267,"offset":13137},"end":{"line":213,"column":275,"offset":13145}}}],"position":{"start":{"line":213,"column":1,"offset":12871},"end":{"line":214,"column":1,"offset":13146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">getSnapshotBeforeUpdate</code>","position":{"start":{"line":215,"column":3,"offset":13149},"end":{"line":215,"column":28,"offset":13174}}},{"type":"text","value":", ","position":{"start":{"line":215,"column":28,"offset":13174},"end":{"line":215,"column":30,"offset":13176}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">componentDidCatch</code>","position":{"start":{"line":215,"column":30,"offset":13176},"end":{"line":215,"column":49,"offset":13195}}},{"type":"text","value":" and ","position":{"start":{"line":215,"column":49,"offset":13195},"end":{"line":215,"column":54,"offset":13200}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">getDerivedStateFromError</code>","position":{"start":{"line":215,"column":54,"offset":13200},"end":{"line":215,"column":80,"offset":13226}}},{"type":"text","value":": There are no Hook equivalents for these methods yet, but they will be added soon.","position":{"start":{"line":215,"column":80,"offset":13226},"end":{"line":215,"column":163,"offset":13309}}}],"position":{"start":{"line":215,"column":1,"offset":13147},"end":{"line":215,"column":163,"offset":13309}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":12354},"end":{"line":215,"column":163,"offset":13309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-can-i-do-data-fetching-with-hooks"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-can-i-do-data-fetching-with-hooks","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How can I do data fetching with Hooks? ","position":{"start":{"line":217,"column":5,"offset":13315},"end":{"line":217,"column":84,"offset":13394}}}],"position":{"start":{"line":217,"column":1,"offset":13311},"end":{"line":217,"column":84,"offset":13394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is a ","position":{"start":{"line":219,"column":1,"offset":13396},"end":{"line":219,"column":11,"offset":13406}}},{"type":"element","tagName":"a","properties":{"href":"https://codesandbox.io/s/jvvkoo8pq3","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"small demo","position":{"start":{"line":219,"column":12,"offset":13407},"end":{"line":219,"column":22,"offset":13417}}}],"position":{"start":{"line":219,"column":11,"offset":13406},"end":{"line":219,"column":60,"offset":13455}}},{"type":"text","value":" to get you started. To learn more, check out ","position":{"start":{"line":219,"column":60,"offset":13455},"end":{"line":219,"column":106,"offset":13501}}},{"type":"element","tagName":"a","properties":{"href":"https://www.robinwieruch.de/react-hooks-fetch-data/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"this article","position":{"start":{"line":219,"column":107,"offset":13502},"end":{"line":219,"column":119,"offset":13514}}}],"position":{"start":{"line":219,"column":106,"offset":13501},"end":{"line":219,"column":173,"offset":13568}}},{"type":"text","value":" about data fetching with Hooks.","position":{"start":{"line":219,"column":173,"offset":13568},"end":{"line":219,"column":205,"offset":13600}}}],"position":{"start":{"line":219,"column":1,"offset":13396},"end":{"line":219,"column":205,"offset":13600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"is-there-something-like-instance-variables"},"children":[{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-instance-variables","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Is there something like instance variables? ","position":{"start":{"line":221,"column":5,"offset":13606},"end":{"line":221,"column":94,"offset":13695}}}],"position":{"start":{"line":221,"column":1,"offset":13602},"end":{"line":221,"column":94,"offset":13695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Yes! The ","position":{"start":{"line":223,"column":1,"offset":13697},"end":{"line":223,"column":10,"offset":13706}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#useref"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useRef()</code>","position":{"start":{"line":223,"column":11,"offset":13707},"end":{"line":223,"column":21,"offset":13717}}}],"position":{"start":{"line":223,"column":10,"offset":13706},"end":{"line":223,"column":57,"offset":13753}}},{"type":"text","value":" Hook isn’t just for DOM refs. The “ref” object is a generic container whose ","position":{"start":{"line":223,"column":57,"offset":13753},"end":{"line":223,"column":134,"offset":13830}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">current</code>","position":{"start":{"line":223,"column":134,"offset":13830},"end":{"line":223,"column":143,"offset":13839}}},{"type":"text","value":" property is mutable and can hold any value, similar to an instance property on a class.","position":{"start":{"line":223,"column":143,"offset":13839},"end":{"line":223,"column":231,"offset":13927}}}],"position":{"start":{"line":223,"column":1,"offset":13697},"end":{"line":223,"column":231,"offset":13927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can write to it from inside ","position":{"start":{"line":225,"column":1,"offset":13929},"end":{"line":225,"column":33,"offset":13961}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useEffect</code>","position":{"start":{"line":225,"column":33,"offset":13961},"end":{"line":225,"column":44,"offset":13972}}},{"type":"text","value":":","position":{"start":{"line":225,"column":44,"offset":13972},"end":{"line":225,"column":45,"offset":13973}}}],"position":{"start":{"line":225,"column":1,"offset":13929},"end":{"line":225,"column":45,"offset":13973}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> intervalRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    intervalRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":227,"column":1,"offset":13975},"end":{"line":243,"column":4,"offset":14233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we just wanted to set an interval, we wouldn’t need the ref (","position":{"start":{"line":245,"column":1,"offset":14235},"end":{"line":245,"column":65,"offset":14299}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">id</code>","position":{"start":{"line":245,"column":65,"offset":14299},"end":{"line":245,"column":69,"offset":14303}}},{"type":"text","value":" could be local to the effect), but it’s useful if we want to clear the interval from an event handler:","position":{"start":{"line":245,"column":69,"offset":14303},"end":{"line":245,"column":172,"offset":14406}}}],"position":{"start":{"line":245,"column":1,"offset":14235},"end":{"line":245,"column":172,"offset":14406}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleCancelClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>","position":{"start":{"line":247,"column":1,"offset":14408},"end":{"line":253,"column":4,"offset":14515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Conceptually, you can think of refs as similar to instance variables in a class. Unless you’re doing ","position":{"start":{"line":255,"column":1,"offset":14517},"end":{"line":255,"column":102,"offset":14618}}},{"type":"element","tagName":"a","properties":{"href":"#how-to-create-expensive-objects-lazily"},"children":[{"type":"text","value":"lazy initialization","position":{"start":{"line":255,"column":103,"offset":14619},"end":{"line":255,"column":122,"offset":14638}}}],"position":{"start":{"line":255,"column":102,"offset":14618},"end":{"line":255,"column":164,"offset":14680}}},{"type":"text","value":", avoid setting refs during rendering — this can lead to surprising behavior. Instead, typically you want to modify refs in event handlers and effects.","position":{"start":{"line":255,"column":164,"offset":14680},"end":{"line":255,"column":316,"offset":14832}}}],"position":{"start":{"line":255,"column":1,"offset":14517},"end":{"line":255,"column":316,"offset":14832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"should-i-use-one-or-many-state-variables"},"children":[{"type":"element","tagName":"a","properties":{"href":"#should-i-use-one-or-many-state-variables","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Should I use one or many state variables? ","position":{"start":{"line":257,"column":5,"offset":14838},"end":{"line":257,"column":90,"offset":14923}}}],"position":{"start":{"line":257,"column":1,"offset":14834},"end":{"line":257,"column":90,"offset":14923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you’re coming from classes, you might be tempted to always call ","position":{"start":{"line":259,"column":1,"offset":14925},"end":{"line":259,"column":68,"offset":14992}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState()</code>","position":{"start":{"line":259,"column":68,"offset":14992},"end":{"line":259,"column":80,"offset":15004}}},{"type":"text","value":" once and put all state into a single object. You can do it if you’d like. Here is an example of a component that follows the mouse movement. We keep its position and size in the local state:","position":{"start":{"line":259,"column":80,"offset":15004},"end":{"line":259,"column":271,"offset":15195}}}],"position":{"start":{"line":259,"column":1,"offset":14925},"end":{"line":259,"column":271,"offset":15195}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":261,"column":1,"offset":15197},"end":{"line":266,"column":4,"offset":15318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let’s say we want to write some logic that changes ","position":{"start":{"line":268,"column":1,"offset":15320},"end":{"line":268,"column":56,"offset":15375}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">left</code>","position":{"start":{"line":268,"column":56,"offset":15375},"end":{"line":268,"column":62,"offset":15381}}},{"type":"text","value":" and ","position":{"start":{"line":268,"column":62,"offset":15381},"end":{"line":268,"column":67,"offset":15386}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">top</code>","position":{"start":{"line":268,"column":67,"offset":15386},"end":{"line":268,"column":72,"offset":15391}}},{"type":"text","value":" when the user moves their mouse. Note how we have to merge these fields into the previous state object manually:","position":{"start":{"line":268,"column":72,"offset":15391},"end":{"line":268,"column":185,"offset":15504}}}],"position":{"start":{"line":268,"column":1,"offset":15320},"end":{"line":268,"column":185,"offset":15504}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleWindowMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Spreading \"...state\" ensures we don't \"lose\" width and height</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> left<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Note: this implementation is a bit simplified</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> handleWindowMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> handleWindowMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>","position":{"start":{"line":270,"column":1,"offset":15506},"end":{"line":282,"column":4,"offset":15954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is because when we update a state variable, we ","position":{"start":{"line":284,"column":1,"offset":15956},"end":{"line":284,"column":53,"offset":16008}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"replace","position":{"start":{"line":284,"column":54,"offset":16009},"end":{"line":284,"column":61,"offset":16016}}}],"position":{"start":{"line":284,"column":53,"offset":16008},"end":{"line":284,"column":62,"offset":16017}}},{"type":"text","value":" its value. This is different from ","position":{"start":{"line":284,"column":62,"offset":16017},"end":{"line":284,"column":97,"offset":16052}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">this.setState</code>","position":{"start":{"line":284,"column":97,"offset":16052},"end":{"line":284,"column":112,"offset":16067}}},{"type":"text","value":" in a class, which ","position":{"start":{"line":284,"column":112,"offset":16067},"end":{"line":284,"column":131,"offset":16086}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"merges","position":{"start":{"line":284,"column":132,"offset":16087},"end":{"line":284,"column":138,"offset":16093}}}],"position":{"start":{"line":284,"column":131,"offset":16086},"end":{"line":284,"column":139,"offset":16094}}},{"type":"text","value":" the updated fields into the object.","position":{"start":{"line":284,"column":139,"offset":16094},"end":{"line":284,"column":175,"offset":16130}}}],"position":{"start":{"line":284,"column":1,"offset":15956},"end":{"line":284,"column":175,"offset":16130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you miss automatic merging, you could write a custom ","position":{"start":{"line":286,"column":1,"offset":16132},"end":{"line":286,"column":57,"offset":16188}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useLegacyState</code>","position":{"start":{"line":286,"column":57,"offset":16188},"end":{"line":286,"column":73,"offset":16204}}},{"type":"text","value":" Hook that merges object state updates. However, ","position":{"start":{"line":286,"column":73,"offset":16204},"end":{"line":286,"column":122,"offset":16253}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"we recommend to split state into multiple state variables based on which values tend to change together.","position":{"start":{"line":286,"column":124,"offset":16255},"end":{"line":286,"column":228,"offset":16359}}}],"position":{"start":{"line":286,"column":122,"offset":16253},"end":{"line":286,"column":230,"offset":16361}}}],"position":{"start":{"line":286,"column":1,"offset":16132},"end":{"line":286,"column":230,"offset":16361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, we could split our component state into ","position":{"start":{"line":288,"column":1,"offset":16363},"end":{"line":288,"column":54,"offset":16416}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">position</code>","position":{"start":{"line":288,"column":54,"offset":16416},"end":{"line":288,"column":64,"offset":16426}}},{"type":"text","value":" and ","position":{"start":{"line":288,"column":64,"offset":16426},"end":{"line":288,"column":69,"offset":16431}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">size</code>","position":{"start":{"line":288,"column":69,"offset":16431},"end":{"line":288,"column":75,"offset":16437}}},{"type":"text","value":" objects, and always replace the ","position":{"start":{"line":288,"column":75,"offset":16437},"end":{"line":288,"column":108,"offset":16470}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">position</code>","position":{"start":{"line":288,"column":108,"offset":16470},"end":{"line":288,"column":118,"offset":16480}}},{"type":"text","value":" with no need for merging:","position":{"start":{"line":288,"column":118,"offset":16480},"end":{"line":288,"column":144,"offset":16506}}}],"position":{"start":{"line":288,"column":1,"offset":16363},"end":{"line":288,"column":144,"offset":16506}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> setPosition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> setSize<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleWindowMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span></code></pre></div>","position":{"start":{"line":290,"column":1,"offset":16508},"end":{"line":300,"column":4,"offset":16799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Separating independent state variables also has another benefit. It makes it easy to later extract some related logic into a custom Hook, for example:","position":{"start":{"line":302,"column":1,"offset":16801},"end":{"line":302,"column":151,"offset":16951}}}],"position":{"start":{"line":302,"column":1,"offset":16801},"end":{"line":302,"column":151,"offset":16951}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token function\">useWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> setSize<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> setPosition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> position<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":304,"column":1,"offset":16953},"end":{"line":318,"column":4,"offset":17259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note how we were able to move the ","position":{"start":{"line":320,"column":1,"offset":17261},"end":{"line":320,"column":35,"offset":17295}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":320,"column":35,"offset":17295},"end":{"line":320,"column":45,"offset":17305}}},{"type":"text","value":" call for the ","position":{"start":{"line":320,"column":45,"offset":17305},"end":{"line":320,"column":59,"offset":17319}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">position</code>","position":{"start":{"line":320,"column":59,"offset":17319},"end":{"line":320,"column":69,"offset":17329}}},{"type":"text","value":" state variable and the related effect into a custom Hook without changing their code. If all state was in a single object, extracting it would be more difficult.","position":{"start":{"line":320,"column":69,"offset":17329},"end":{"line":320,"column":231,"offset":17491}}}],"position":{"start":{"line":320,"column":1,"offset":17261},"end":{"line":320,"column":231,"offset":17491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both putting all state in a single ","position":{"start":{"line":322,"column":1,"offset":17493},"end":{"line":322,"column":36,"offset":17528}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":322,"column":36,"offset":17528},"end":{"line":322,"column":46,"offset":17538}}},{"type":"text","value":" call, and having a ","position":{"start":{"line":322,"column":46,"offset":17538},"end":{"line":322,"column":66,"offset":17558}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":322,"column":66,"offset":17558},"end":{"line":322,"column":76,"offset":17568}}},{"type":"text","value":" call per each field can work. Components tend to be most readable when you find a balance between these two extremes, and group related state into a few independent state variables. If the state logic becomes complex, we recommend ","position":{"start":{"line":322,"column":76,"offset":17568},"end":{"line":322,"column":308,"offset":17800}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usereducer"},"children":[{"type":"text","value":"managing it with a reducer","position":{"start":{"line":322,"column":309,"offset":17801},"end":{"line":322,"column":335,"offset":17827}}}],"position":{"start":{"line":322,"column":308,"offset":17800},"end":{"line":322,"column":375,"offset":17867}}},{"type":"text","value":" or a custom Hook.","position":{"start":{"line":322,"column":375,"offset":17867},"end":{"line":322,"column":393,"offset":17885}}}],"position":{"start":{"line":322,"column":1,"offset":17493},"end":{"line":322,"column":393,"offset":17885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"can-i-run-an-effect-only-on-updates"},"children":[{"type":"element","tagName":"a","properties":{"href":"#can-i-run-an-effect-only-on-updates","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Can I run an effect only on updates? ","position":{"start":{"line":324,"column":5,"offset":17891},"end":{"line":324,"column":80,"offset":17966}}}],"position":{"start":{"line":324,"column":1,"offset":17887},"end":{"line":324,"column":80,"offset":17966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a rare use case. If you need it, you can ","position":{"start":{"line":326,"column":1,"offset":17968},"end":{"line":326,"column":50,"offset":18017}}},{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-instance-variables"},"children":[{"type":"text","value":"use a mutable ref","position":{"start":{"line":326,"column":51,"offset":18018},"end":{"line":326,"column":68,"offset":18035}}}],"position":{"start":{"line":326,"column":50,"offset":18017},"end":{"line":326,"column":114,"offset":18081}}},{"type":"text","value":" to manually store a boolean value corresponding to whether you are on the first or a subsequent render, then check that flag in your effect. (If you find yourself doing this often, you could create a custom Hook for it.)","position":{"start":{"line":326,"column":114,"offset":18081},"end":{"line":326,"column":335,"offset":18302}}}],"position":{"start":{"line":326,"column":1,"offset":17968},"end":{"line":326,"column":335,"offset":18302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-to-get-the-previous-props-or-state"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-get-the-previous-props-or-state","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How to get the previous props or state? ","position":{"start":{"line":328,"column":5,"offset":18308},"end":{"line":328,"column":86,"offset":18389}}}],"position":{"start":{"line":328,"column":1,"offset":18304},"end":{"line":328,"column":86,"offset":18389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Currently, you can do it manually ","position":{"start":{"line":330,"column":1,"offset":18391},"end":{"line":330,"column":35,"offset":18425}}},{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-instance-variables"},"children":[{"type":"text","value":"with a ref","position":{"start":{"line":330,"column":36,"offset":18426},"end":{"line":330,"column":46,"offset":18436}}}],"position":{"start":{"line":330,"column":35,"offset":18425},"end":{"line":330,"column":92,"offset":18482}}},{"type":"text","value":":","position":{"start":{"line":330,"column":92,"offset":18482},"end":{"line":330,"column":93,"offset":18483}}}],"position":{"start":{"line":330,"column":1,"offset":18391},"end":{"line":330,"column":93,"offset":18483}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> prevCountRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    prevCountRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> prevCount <span class=\"token operator\">=</span> prevCountRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Now: </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, before: </span><span class=\"token punctuation\">{</span>prevCount<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":332,"column":1,"offset":18485},"end":{"line":344,"column":4,"offset":18753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This might be a bit convoluted but you can extract it into a custom Hook:","position":{"start":{"line":346,"column":1,"offset":18755},"end":{"line":346,"column":74,"offset":18828}}}],"position":{"start":{"line":346,"column":1,"offset":18755},"end":{"line":346,"column":74,"offset":18828}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> prevCount <span class=\"token operator\">=</span> <span class=\"token function\">usePrevious</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Now: </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, before: </span><span class=\"token punctuation\">{</span>prevCount<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">usePrevious</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":348,"column":1,"offset":18830},"end":{"line":362,"column":4,"offset":19131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note how this would work for props, state, or any other calculated value.","position":{"start":{"line":364,"column":1,"offset":19133},"end":{"line":364,"column":74,"offset":19206}}}],"position":{"start":{"line":364,"column":1,"offset":19133},"end":{"line":364,"column":74,"offset":19206}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> calculation <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> prevCalculation <span class=\"token operator\">=</span> <span class=\"token function\">usePrevious</span><span class=\"token punctuation\">(</span>calculation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span></code></pre></div>","position":{"start":{"line":366,"column":1,"offset":19208},"end":{"line":373,"column":4,"offset":19379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It’s possible that in the future React will provide a ","position":{"start":{"line":375,"column":1,"offset":19381},"end":{"line":375,"column":55,"offset":19435}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">usePrevious</code>","position":{"start":{"line":375,"column":55,"offset":19435},"end":{"line":375,"column":68,"offset":19448}}},{"type":"text","value":" Hook out of the box since it’s a relatively common use case.","position":{"start":{"line":375,"column":68,"offset":19448},"end":{"line":375,"column":129,"offset":19509}}}],"position":{"start":{"line":375,"column":1,"offset":19381},"end":{"line":375,"column":129,"offset":19509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See also ","position":{"start":{"line":377,"column":1,"offset":19511},"end":{"line":377,"column":10,"offset":19520}}},{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-getderivedstatefromprops"},"children":[{"type":"text","value":"the recommended pattern for derived state","position":{"start":{"line":377,"column":11,"offset":19521},"end":{"line":377,"column":52,"offset":19562}}}],"position":{"start":{"line":377,"column":10,"offset":19520},"end":{"line":377,"column":99,"offset":19609}}},{"type":"text","value":".","position":{"start":{"line":377,"column":99,"offset":19609},"end":{"line":377,"column":100,"offset":19610}}}],"position":{"start":{"line":377,"column":1,"offset":19511},"end":{"line":377,"column":100,"offset":19610}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"why-am-i-seeing-stale-props-or-state-inside-my-function"},"children":[{"type":"element","tagName":"a","properties":{"href":"#why-am-i-seeing-stale-props-or-state-inside-my-function","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Why am I seeing stale props or state inside my function? ","position":{"start":{"line":379,"column":5,"offset":19616},"end":{"line":379,"column":120,"offset":19731}}}],"position":{"start":{"line":379,"column":1,"offset":19612},"end":{"line":379,"column":120,"offset":19731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Any function inside a component, including event handlers and effects, “sees” the props and state from the render it was created in. For example, consider code like this:","position":{"start":{"line":381,"column":1,"offset":19733},"end":{"line":381,"column":171,"offset":19903}}}],"position":{"start":{"line":381,"column":1,"offset":19733},"end":{"line":381,"column":171,"offset":19903}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAlertClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked on: '</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Click me\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleAlertClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Show alert\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":383,"column":1,"offset":19905},"end":{"line":405,"column":4,"offset":20331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you first click “Show alert” and then increment the counter, the alert will show the ","position":{"start":{"line":407,"column":1,"offset":20333},"end":{"line":407,"column":89,"offset":20421}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">count</code>","position":{"start":{"line":407,"column":89,"offset":20421},"end":{"line":407,"column":96,"offset":20428}}},{"type":"text","value":" variable ","position":{"start":{"line":407,"column":96,"offset":20428},"end":{"line":407,"column":106,"offset":20438}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"at the time you clicked the “Show alert” button","position":{"start":{"line":407,"column":108,"offset":20440},"end":{"line":407,"column":155,"offset":20487}}}],"position":{"start":{"line":407,"column":106,"offset":20438},"end":{"line":407,"column":157,"offset":20489}}},{"type":"text","value":". This prevents bugs caused by the code assuming props and state don’t change.","position":{"start":{"line":407,"column":157,"offset":20489},"end":{"line":407,"column":235,"offset":20567}}}],"position":{"start":{"line":407,"column":1,"offset":20333},"end":{"line":407,"column":235,"offset":20567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you intentionally want to read the ","position":{"start":{"line":409,"column":1,"offset":20569},"end":{"line":409,"column":39,"offset":20607}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"latest","position":{"start":{"line":409,"column":40,"offset":20608},"end":{"line":409,"column":46,"offset":20614}}}],"position":{"start":{"line":409,"column":39,"offset":20607},"end":{"line":409,"column":47,"offset":20615}}},{"type":"text","value":" state from some asynchronous callback, you could keep it in ","position":{"start":{"line":409,"column":47,"offset":20615},"end":{"line":409,"column":108,"offset":20676}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-faq.html#is-there-something-like-instance-variables"},"children":[{"type":"text","value":"a ref","position":{"start":{"line":409,"column":109,"offset":20677},"end":{"line":409,"column":114,"offset":20682}}}],"position":{"start":{"line":409,"column":108,"offset":20676},"end":{"line":409,"column":180,"offset":20748}}},{"type":"text","value":", mutate it, and read from it.","position":{"start":{"line":409,"column":180,"offset":20748},"end":{"line":409,"column":210,"offset":20778}}}],"position":{"start":{"line":409,"column":1,"offset":20569},"end":{"line":409,"column":210,"offset":20778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Finally, another possible reason you’re seeing stale props or state is if you use the “dependency array” optimization but didn’t correctly specify all the dependencies. For example, if an effect specifies ","position":{"start":{"line":411,"column":1,"offset":20780},"end":{"line":411,"column":206,"offset":20985}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">[]</code>","position":{"start":{"line":411,"column":206,"offset":20985},"end":{"line":411,"column":210,"offset":20989}}},{"type":"text","value":" as the second argument but reads ","position":{"start":{"line":411,"column":210,"offset":20989},"end":{"line":411,"column":244,"offset":21023}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">someProp</code>","position":{"start":{"line":411,"column":244,"offset":21023},"end":{"line":411,"column":254,"offset":21033}}},{"type":"text","value":" inside, it will keep “seeing” the initial value of ","position":{"start":{"line":411,"column":254,"offset":21033},"end":{"line":411,"column":306,"offset":21085}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">someProp</code>","position":{"start":{"line":411,"column":306,"offset":21085},"end":{"line":411,"column":316,"offset":21095}}},{"type":"text","value":". The solution is to either remove the dependency array, or to fix it. Here’s ","position":{"start":{"line":411,"column":316,"offset":21095},"end":{"line":411,"column":394,"offset":21173}}},{"type":"element","tagName":"a","properties":{"href":"#is-it-safe-to-omit-functions-from-the-list-of-dependencies"},"children":[{"type":"text","value":"how you can deal with functions","position":{"start":{"line":411,"column":395,"offset":21174},"end":{"line":411,"column":426,"offset":21205}}}],"position":{"start":{"line":411,"column":394,"offset":21173},"end":{"line":411,"column":488,"offset":21267}}},{"type":"text","value":", and here’s ","position":{"start":{"line":411,"column":488,"offset":21267},"end":{"line":411,"column":501,"offset":21280}}},{"type":"element","tagName":"a","properties":{"href":"#what-can-i-do-if-my-effect-dependencies-change-too-often"},"children":[{"type":"text","value":"other common strategies","position":{"start":{"line":411,"column":502,"offset":21281},"end":{"line":411,"column":525,"offset":21304}}}],"position":{"start":{"line":411,"column":501,"offset":21280},"end":{"line":411,"column":585,"offset":21364}}},{"type":"text","value":" to run effects less often without incorrectly skipping dependencies.","position":{"start":{"line":411,"column":585,"offset":21364},"end":{"line":411,"column":654,"offset":21433}}}],"position":{"start":{"line":411,"column":1,"offset":20780},"end":{"line":411,"column":654,"offset":21433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":413,"column":2,"offset":21436},"end":{"line":413,"column":6,"offset":21440}}}],"position":{"start":{"line":413,"column":2,"offset":21436},"end":{"line":413,"column":6,"offset":21440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We provide an ","position":{"start":{"line":415,"column":2,"offset":21444},"end":{"line":415,"column":16,"offset":21458}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebook/react/issues/14920","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">exhaustive-deps</code>","position":{"start":{"line":415,"column":17,"offset":21459},"end":{"line":415,"column":34,"offset":21476}}}],"position":{"start":{"line":415,"column":16,"offset":21458},"end":{"line":415,"column":83,"offset":21525}}},{"type":"text","value":" ESLint rule as a part of the ","position":{"start":{"line":415,"column":83,"offset":21525},"end":{"line":415,"column":113,"offset":21555}}},{"type":"element","tagName":"a","properties":{"href":"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code>","position":{"start":{"line":415,"column":114,"offset":21556},"end":{"line":415,"column":141,"offset":21583}}}],"position":{"start":{"line":415,"column":113,"offset":21555},"end":{"line":415,"column":212,"offset":21654}}},{"type":"text","value":" package. It warns when dependencies are specified incorrectly and suggests a fix.","position":{"start":{"line":415,"column":212,"offset":21654},"end":{"line":415,"column":294,"offset":21736}}}],"position":{"start":{"line":415,"column":2,"offset":21444},"end":{"line":415,"column":294,"offset":21736}}},{"type":"text","value":"\n"}],"position":{"start":{"line":413,"column":1,"offset":21435},"end":{"line":415,"column":294,"offset":21736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-do-i-implement-getderivedstatefromprops"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-getderivedstatefromprops","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How do I implement ","position":{"start":{"line":417,"column":5,"offset":21742},"end":{"line":417,"column":24,"offset":21761}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">getDerivedStateFromProps</code>","position":{"start":{"line":417,"column":24,"offset":21761},"end":{"line":417,"column":50,"offset":21787}}},{"type":"text","value":"? ","position":{"start":{"line":417,"column":50,"offset":21787},"end":{"line":417,"column":98,"offset":21835}}}],"position":{"start":{"line":417,"column":1,"offset":21738},"end":{"line":417,"column":98,"offset":21835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While you probably ","position":{"start":{"line":419,"column":1,"offset":21837},"end":{"line":419,"column":20,"offset":21856}}},{"type":"element","tagName":"a","properties":{"href":"/blog/2018/06/07/you-probably-dont-need-derived-state.html"},"children":[{"type":"text","value":"don’t need it","position":{"start":{"line":419,"column":21,"offset":21857},"end":{"line":419,"column":34,"offset":21870}}}],"position":{"start":{"line":419,"column":20,"offset":21856},"end":{"line":419,"column":95,"offset":21931}}},{"type":"text","value":", in rare cases that you do (such as implementing a ","position":{"start":{"line":419,"column":95,"offset":21931},"end":{"line":419,"column":147,"offset":21983}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;Transition&gt;</code>","position":{"start":{"line":419,"column":147,"offset":21983},"end":{"line":419,"column":161,"offset":21997}}},{"type":"text","value":" component), you can update the state right during rendering. React will re-run the component with updated state immediately after exiting the first render so it wouldn’t be expensive.","position":{"start":{"line":419,"column":161,"offset":21997},"end":{"line":419,"column":345,"offset":22181}}}],"position":{"start":{"line":419,"column":1,"offset":21837},"end":{"line":419,"column":345,"offset":22181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here, we store the previous value of the ","position":{"start":{"line":421,"column":1,"offset":22183},"end":{"line":421,"column":42,"offset":22224}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">row</code>","position":{"start":{"line":421,"column":42,"offset":22224},"end":{"line":421,"column":47,"offset":22229}}},{"type":"text","value":" prop in a state variable so that we can compare:","position":{"start":{"line":421,"column":47,"offset":22229},"end":{"line":421,"column":96,"offset":22278}}}],"position":{"start":{"line":421,"column":1,"offset":22183},"end":{"line":421,"column":96,"offset":22278}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ScrollView</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>row<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isScrollingDown<span class=\"token punctuation\">,</span> setIsScrollingDown<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>prevRow<span class=\"token punctuation\">,</span> setPrevRow<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">!==</span> prevRow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Row changed since last render. Update isScrollingDown.</span>\n    <span class=\"token function\">setIsScrollingDown</span><span class=\"token punctuation\">(</span>prevRow <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> row <span class=\"token operator\">></span> prevRow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setPrevRow</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Scrolling down: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isScrollingDown<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":423,"column":1,"offset":22280},"end":{"line":436,"column":4,"offset":22653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This might look strange at first, but an update during rendering is exactly what ","position":{"start":{"line":438,"column":1,"offset":22655},"end":{"line":438,"column":82,"offset":22736}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">getDerivedStateFromProps</code>","position":{"start":{"line":438,"column":82,"offset":22736},"end":{"line":438,"column":108,"offset":22762}}},{"type":"text","value":" has always been like conceptually.","position":{"start":{"line":438,"column":108,"offset":22762},"end":{"line":438,"column":143,"offset":22797}}}],"position":{"start":{"line":438,"column":1,"offset":22655},"end":{"line":438,"column":143,"offset":22797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"is-there-something-like-forceupdate"},"children":[{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-forceupdate","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Is there something like forceUpdate? ","position":{"start":{"line":440,"column":5,"offset":22803},"end":{"line":440,"column":80,"offset":22878}}}],"position":{"start":{"line":440,"column":1,"offset":22799},"end":{"line":440,"column":80,"offset":22878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both ","position":{"start":{"line":442,"column":1,"offset":22880},"end":{"line":442,"column":6,"offset":22885}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":442,"column":6,"offset":22885},"end":{"line":442,"column":16,"offset":22895}}},{"type":"text","value":" and ","position":{"start":{"line":442,"column":16,"offset":22895},"end":{"line":442,"column":21,"offset":22900}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useReducer</code>","position":{"start":{"line":442,"column":21,"offset":22900},"end":{"line":442,"column":33,"offset":22912}}},{"type":"text","value":" Hooks ","position":{"start":{"line":442,"column":33,"offset":22912},"end":{"line":442,"column":40,"offset":22919}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#bailing-out-of-a-state-update"},"children":[{"type":"text","value":"bail out of updates","position":{"start":{"line":442,"column":41,"offset":22920},"end":{"line":442,"column":60,"offset":22939}}}],"position":{"start":{"line":442,"column":40,"offset":22919},"end":{"line":442,"column":119,"offset":22998}}},{"type":"text","value":" if the next value is the same as the previous one. Mutating state in place and calling ","position":{"start":{"line":442,"column":119,"offset":22998},"end":{"line":442,"column":207,"offset":23086}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setState</code>","position":{"start":{"line":442,"column":207,"offset":23086},"end":{"line":442,"column":217,"offset":23096}}},{"type":"text","value":" will not cause a re-render.","position":{"start":{"line":442,"column":217,"offset":23096},"end":{"line":442,"column":245,"offset":23124}}}],"position":{"start":{"line":442,"column":1,"offset":22880},"end":{"line":442,"column":245,"offset":23124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Normally, you shouldn’t mutate local state in React. However, as an escape hatch, you can use an incrementing counter to force a re-render even if the state has not changed:","position":{"start":{"line":444,"column":1,"offset":23126},"end":{"line":444,"column":174,"offset":23299}}}],"position":{"start":{"line":444,"column":1,"offset":23126},"end":{"line":444,"column":174,"offset":23299}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ignored<span class=\"token punctuation\">,</span> forceUpdate<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":446,"column":1,"offset":23301},"end":{"line":452,"column":4,"offset":23421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Try to avoid this pattern if possible.","position":{"start":{"line":454,"column":1,"offset":23423},"end":{"line":454,"column":39,"offset":23461}}}],"position":{"start":{"line":454,"column":1,"offset":23423},"end":{"line":454,"column":39,"offset":23461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"can-i-make-a-ref-to-a-function-component"},"children":[{"type":"element","tagName":"a","properties":{"href":"#can-i-make-a-ref-to-a-function-component","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Can I make a ref to a function component? ","position":{"start":{"line":456,"column":5,"offset":23467},"end":{"line":456,"column":90,"offset":23552}}}],"position":{"start":{"line":456,"column":1,"offset":23463},"end":{"line":456,"column":90,"offset":23552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While you shouldn’t need this often, you may expose some imperative methods to a parent component with the ","position":{"start":{"line":458,"column":1,"offset":23554},"end":{"line":458,"column":108,"offset":23661}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#useimperativehandle"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useImperativeHandle</code>","position":{"start":{"line":458,"column":109,"offset":23662},"end":{"line":458,"column":130,"offset":23683}}}],"position":{"start":{"line":458,"column":108,"offset":23661},"end":{"line":458,"column":179,"offset":23732}}},{"type":"text","value":" Hook.","position":{"start":{"line":458,"column":179,"offset":23732},"end":{"line":458,"column":185,"offset":23738}}}],"position":{"start":{"line":458,"column":1,"offset":23554},"end":{"line":458,"column":185,"offset":23738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-can-i-measure-a-dom-node"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-can-i-measure-a-dom-node","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How can I measure a DOM node? ","position":{"start":{"line":460,"column":5,"offset":23744},"end":{"line":460,"column":66,"offset":23805}}}],"position":{"start":{"line":460,"column":1,"offset":23740},"end":{"line":460,"column":66,"offset":23805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One rudimentary way to measure the position or size of a DOM node is to use a ","position":{"start":{"line":462,"column":1,"offset":23807},"end":{"line":462,"column":79,"offset":23885}}},{"type":"element","tagName":"a","properties":{"href":"/docs/refs-and-the-dom.html#callback-refs"},"children":[{"type":"text","value":"callback ref","position":{"start":{"line":462,"column":80,"offset":23886},"end":{"line":462,"column":92,"offset":23898}}}],"position":{"start":{"line":462,"column":79,"offset":23885},"end":{"line":462,"column":136,"offset":23942}}},{"type":"text","value":". React will call that callback whenever the ref gets attached to a different node. Here is a ","position":{"start":{"line":462,"column":136,"offset":23942},"end":{"line":462,"column":230,"offset":24036}}},{"type":"element","tagName":"a","properties":{"href":"https://codesandbox.io/s/l7m0v5x4v9","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"small demo","position":{"start":{"line":462,"column":231,"offset":24037},"end":{"line":462,"column":241,"offset":24047}}}],"position":{"start":{"line":462,"column":230,"offset":24036},"end":{"line":462,"column":279,"offset":24085}}},{"type":"text","value":":","position":{"start":{"line":462,"column":279,"offset":24085},"end":{"line":462,"column":280,"offset":24086}}}],"position":{"start":{"line":462,"column":1,"offset":23807},"end":{"line":462,"column":280,"offset":24086}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MeasureExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">,</span> setHeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> measuredRef <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>measuredRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">The above header is </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">px tall</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":464,"column":1,"offset":24088},"end":{"line":481,"column":4,"offset":24459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We didn’t choose ","position":{"start":{"line":483,"column":1,"offset":24461},"end":{"line":483,"column":18,"offset":24478}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useRef</code>","position":{"start":{"line":483,"column":18,"offset":24478},"end":{"line":483,"column":26,"offset":24486}}},{"type":"text","value":" in this example because an object ref doesn’t notify us about ","position":{"start":{"line":483,"column":26,"offset":24486},"end":{"line":483,"column":89,"offset":24549}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"changes","position":{"start":{"line":483,"column":90,"offset":24550},"end":{"line":483,"column":97,"offset":24557}}}],"position":{"start":{"line":483,"column":89,"offset":24549},"end":{"line":483,"column":98,"offset":24558}}},{"type":"text","value":" to the current ref value. Using a callback ref ensures that ","position":{"start":{"line":483,"column":98,"offset":24558},"end":{"line":483,"column":159,"offset":24619}}},{"type":"element","tagName":"a","properties":{"href":"https://codesandbox.io/s/818zzk8m78","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"even if a child component displays the measured node later","position":{"start":{"line":483,"column":160,"offset":24620},"end":{"line":483,"column":218,"offset":24678}}}],"position":{"start":{"line":483,"column":159,"offset":24619},"end":{"line":483,"column":256,"offset":24716}}},{"type":"text","value":" (e.g. in response to a click), we still get notified about it in the parent component and can update the measurements.","position":{"start":{"line":483,"column":256,"offset":24716},"end":{"line":483,"column":375,"offset":24835}}}],"position":{"start":{"line":483,"column":1,"offset":24461},"end":{"line":483,"column":375,"offset":24835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that we pass ","position":{"start":{"line":485,"column":1,"offset":24837},"end":{"line":485,"column":19,"offset":24855}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">[]</code>","position":{"start":{"line":485,"column":19,"offset":24855},"end":{"line":485,"column":23,"offset":24859}}},{"type":"text","value":" as a dependency array to ","position":{"start":{"line":485,"column":23,"offset":24859},"end":{"line":485,"column":49,"offset":24885}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useCallback</code>","position":{"start":{"line":485,"column":49,"offset":24885},"end":{"line":485,"column":62,"offset":24898}}},{"type":"text","value":". This ensures that our ref callback doesn’t change between the re-renders, and so React won’t call it unnecessarily.","position":{"start":{"line":485,"column":62,"offset":24898},"end":{"line":485,"column":179,"offset":25015}}}],"position":{"start":{"line":485,"column":1,"offset":24837},"end":{"line":485,"column":179,"offset":25015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this example, the callback ref will be called only when the component mounts and unmounts, since the rendered ","position":{"start":{"line":487,"column":1,"offset":25017},"end":{"line":487,"column":114,"offset":25130}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;h1&gt;</code>","position":{"start":{"line":487,"column":114,"offset":25130},"end":{"line":487,"column":120,"offset":25136}}},{"type":"text","value":" component stays present throughout any rerenders. If you want to be notified any time a component resizes, you may want to use ","position":{"start":{"line":487,"column":120,"offset":25136},"end":{"line":487,"column":248,"offset":25264}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">ResizeObserver</code>","position":{"start":{"line":487,"column":249,"offset":25265},"end":{"line":487,"column":265,"offset":25281}}}],"position":{"start":{"line":487,"column":248,"offset":25264},"end":{"line":487,"column":331,"offset":25347}}},{"type":"text","value":" or a third-party Hook built on it.","position":{"start":{"line":487,"column":331,"offset":25347},"end":{"line":487,"column":366,"offset":25382}}}],"position":{"start":{"line":487,"column":1,"offset":25017},"end":{"line":487,"column":366,"offset":25382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want, you can ","position":{"start":{"line":489,"column":1,"offset":25384},"end":{"line":489,"column":22,"offset":25405}}},{"type":"element","tagName":"a","properties":{"href":"https://codesandbox.io/s/m5o42082xy","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"extract this logic","position":{"start":{"line":489,"column":23,"offset":25406},"end":{"line":489,"column":41,"offset":25424}}}],"position":{"start":{"line":489,"column":22,"offset":25405},"end":{"line":489,"column":79,"offset":25462}}},{"type":"text","value":" into a reusable Hook:","position":{"start":{"line":489,"column":79,"offset":25462},"end":{"line":489,"column":101,"offset":25484}}}],"position":{"start":{"line":489,"column":1,"offset":25384},"end":{"line":489,"column":101,"offset":25484}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MeasureExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>rect <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">The above header is </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">px tall</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> setRect<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setRect</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":491,"column":1,"offset":25486},"end":{"line":513,"column":4,"offset":25954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"what-does-const-thing-setthing--usestate-mean"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-does-const-thing-setthing--usestate-mean","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What does ","position":{"start":{"line":516,"column":5,"offset":25961},"end":{"line":516,"column":15,"offset":25971}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">const [thing, setThing] = useState()</code>","position":{"start":{"line":516,"column":15,"offset":25971},"end":{"line":516,"column":53,"offset":26009}}},{"type":"text","value":" mean? ","position":{"start":{"line":516,"column":53,"offset":26009},"end":{"line":516,"column":108,"offset":26064}}}],"position":{"start":{"line":516,"column":1,"offset":25957},"end":{"line":516,"column":108,"offset":26064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you’re not familiar with this syntax, check out the ","position":{"start":{"line":518,"column":1,"offset":26066},"end":{"line":518,"column":56,"offset":26121}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-state.html#tip-what-do-square-brackets-mean"},"children":[{"type":"text","value":"explanation","position":{"start":{"line":518,"column":57,"offset":26122},"end":{"line":518,"column":68,"offset":26133}}}],"position":{"start":{"line":518,"column":56,"offset":26121},"end":{"line":518,"column":126,"offset":26191}}},{"type":"text","value":" in the State Hook documentation.","position":{"start":{"line":518,"column":126,"offset":26191},"end":{"line":518,"column":159,"offset":26224}}}],"position":{"start":{"line":518,"column":1,"offset":26066},"end":{"line":518,"column":159,"offset":26224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"performance-optimizations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#performance-optimizations","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Performance Optimizations ","position":{"start":{"line":521,"column":4,"offset":26230},"end":{"line":521,"column":58,"offset":26284}}}],"position":{"start":{"line":521,"column":1,"offset":26227},"end":{"line":521,"column":58,"offset":26284}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"can-i-skip-an-effect-on-updates"},"children":[{"type":"element","tagName":"a","properties":{"href":"#can-i-skip-an-effect-on-updates","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Can I skip an effect on updates? ","position":{"start":{"line":523,"column":5,"offset":26290},"end":{"line":523,"column":72,"offset":26357}}}],"position":{"start":{"line":523,"column":1,"offset":26286},"end":{"line":523,"column":72,"offset":26357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Yes. See ","position":{"start":{"line":525,"column":1,"offset":26359},"end":{"line":525,"column":10,"offset":26368}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#conditionally-firing-an-effect"},"children":[{"type":"text","value":"conditionally firing an effect","position":{"start":{"line":525,"column":11,"offset":26369},"end":{"line":525,"column":41,"offset":26399}}}],"position":{"start":{"line":525,"column":10,"offset":26368},"end":{"line":525,"column":101,"offset":26459}}},{"type":"text","value":". Note that forgetting to handle updates often ","position":{"start":{"line":525,"column":101,"offset":26459},"end":{"line":525,"column":148,"offset":26506}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-effect.html#explanation-why-effects-run-on-each-update"},"children":[{"type":"text","value":"introduces bugs","position":{"start":{"line":525,"column":149,"offset":26507},"end":{"line":525,"column":164,"offset":26522}}}],"position":{"start":{"line":525,"column":148,"offset":26506},"end":{"line":525,"column":233,"offset":26591}}},{"type":"text","value":", which is why this isn’t the default behavior.","position":{"start":{"line":525,"column":233,"offset":26591},"end":{"line":525,"column":280,"offset":26638}}}],"position":{"start":{"line":525,"column":1,"offset":26359},"end":{"line":525,"column":280,"offset":26638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"is-it-safe-to-omit-functions-from-the-list-of-dependencies"},"children":[{"type":"element","tagName":"a","properties":{"href":"#is-it-safe-to-omit-functions-from-the-list-of-dependencies","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Is it safe to omit functions from the list of dependencies? ","position":{"start":{"line":527,"column":5,"offset":26644},"end":{"line":527,"column":126,"offset":26765}}}],"position":{"start":{"line":527,"column":1,"offset":26640},"end":{"line":527,"column":126,"offset":26765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Generally speaking, no.","position":{"start":{"line":529,"column":1,"offset":26767},"end":{"line":529,"column":24,"offset":26790}}}],"position":{"start":{"line":529,"column":1,"offset":26767},"end":{"line":529,"column":24,"offset":26790}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> someProp <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someProp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 🔴 This is not safe (it calls `doSomething` which uses `someProp`)</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":531,"column":1,"offset":26792},"end":{"line":541,"column":4,"offset":27019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It’s difficult to remember which props or state are used by functions outside of the effect. This is why ","position":{"start":{"line":543,"column":1,"offset":27021},"end":{"line":543,"column":106,"offset":27126}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"usually you’ll want to declare functions needed by an effect ","position":{"start":{"line":543,"column":108,"offset":27128},"end":{"line":543,"column":169,"offset":27189}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inside","position":{"start":{"line":543,"column":170,"offset":27190},"end":{"line":543,"column":176,"offset":27196}}}],"position":{"start":{"line":543,"column":169,"offset":27189},"end":{"line":543,"column":177,"offset":27197}}},{"type":"text","value":" of it.","position":{"start":{"line":543,"column":177,"offset":27197},"end":{"line":543,"column":184,"offset":27204}}}],"position":{"start":{"line":543,"column":106,"offset":27126},"end":{"line":543,"column":186,"offset":27206}}},{"type":"text","value":" Then it’s easy to see what values from the component scope that effect depends on:","position":{"start":{"line":543,"column":186,"offset":27206},"end":{"line":543,"column":269,"offset":27289}}}],"position":{"start":{"line":543,"column":1,"offset":27021},"end":{"line":543,"column":269,"offset":27289}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> someProp <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someProp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>someProp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ OK (our effect only uses `someProp`)</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":545,"column":1,"offset":27291},"end":{"line":555,"column":4,"offset":27504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If after that we still don’t use any values from the component scope, it’s safe to specify ","position":{"start":{"line":557,"column":1,"offset":27506},"end":{"line":557,"column":92,"offset":27597}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">[]</code>","position":{"start":{"line":557,"column":92,"offset":27597},"end":{"line":557,"column":96,"offset":27601}}},{"type":"text","value":":","position":{"start":{"line":557,"column":96,"offset":27601},"end":{"line":557,"column":97,"offset":27602}}}],"position":{"start":{"line":557,"column":1,"offset":27506},"end":{"line":557,"column":97,"offset":27602}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ OK in this example because we don't use *any* values from component scope</span></span></code></pre></div>","position":{"start":{"line":559,"column":1,"offset":27604},"end":{"line":567,"column":4,"offset":27796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Depending on your use case, there are a few more options described below.","position":{"start":{"line":569,"column":1,"offset":27798},"end":{"line":569,"column":74,"offset":27871}}}],"position":{"start":{"line":569,"column":1,"offset":27798},"end":{"line":569,"column":74,"offset":27871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":571,"column":2,"offset":27874},"end":{"line":571,"column":6,"offset":27878}}}],"position":{"start":{"line":571,"column":2,"offset":27874},"end":{"line":571,"column":6,"offset":27878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We provide the ","position":{"start":{"line":573,"column":2,"offset":27882},"end":{"line":573,"column":17,"offset":27897}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebook/react/issues/14920","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">exhaustive-deps</code>","position":{"start":{"line":573,"column":18,"offset":27898},"end":{"line":573,"column":35,"offset":27915}}}],"position":{"start":{"line":573,"column":17,"offset":27897},"end":{"line":573,"column":84,"offset":27964}}},{"type":"text","value":" ESLint rule as a part of the ","position":{"start":{"line":573,"column":84,"offset":27964},"end":{"line":573,"column":114,"offset":27994}}},{"type":"element","tagName":"a","properties":{"href":"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code>","position":{"start":{"line":573,"column":115,"offset":27995},"end":{"line":573,"column":142,"offset":28022}}}],"position":{"start":{"line":573,"column":114,"offset":27994},"end":{"line":573,"column":213,"offset":28093}}},{"type":"text","value":" package. It helps you find components that don’t handle updates consistently.","position":{"start":{"line":573,"column":213,"offset":28093},"end":{"line":573,"column":291,"offset":28171}}}],"position":{"start":{"line":573,"column":2,"offset":27882},"end":{"line":573,"column":291,"offset":28171}}},{"type":"text","value":"\n"}],"position":{"start":{"line":571,"column":1,"offset":27873},"end":{"line":573,"column":291,"offset":28171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let’s see why this matters.","position":{"start":{"line":575,"column":1,"offset":28173},"end":{"line":575,"column":28,"offset":28200}}}],"position":{"start":{"line":575,"column":1,"offset":28173},"end":{"line":575,"column":28,"offset":28200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you specify a ","position":{"start":{"line":577,"column":1,"offset":28202},"end":{"line":577,"column":18,"offset":28219}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#conditionally-firing-an-effect"},"children":[{"type":"text","value":"list of dependencies","position":{"start":{"line":577,"column":19,"offset":28220},"end":{"line":577,"column":39,"offset":28240}}}],"position":{"start":{"line":577,"column":18,"offset":28219},"end":{"line":577,"column":99,"offset":28300}}},{"type":"text","value":" as the last argument to ","position":{"start":{"line":577,"column":99,"offset":28300},"end":{"line":577,"column":124,"offset":28325}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useEffect</code>","position":{"start":{"line":577,"column":124,"offset":28325},"end":{"line":577,"column":135,"offset":28336}}},{"type":"text","value":", ","position":{"start":{"line":577,"column":135,"offset":28336},"end":{"line":577,"column":137,"offset":28338}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":577,"column":137,"offset":28338},"end":{"line":577,"column":146,"offset":28347}}},{"type":"text","value":", ","position":{"start":{"line":577,"column":146,"offset":28347},"end":{"line":577,"column":148,"offset":28349}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useCallback</code>","position":{"start":{"line":577,"column":148,"offset":28349},"end":{"line":577,"column":161,"offset":28362}}},{"type":"text","value":", or ","position":{"start":{"line":577,"column":161,"offset":28362},"end":{"line":577,"column":166,"offset":28367}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useImperativeHandle</code>","position":{"start":{"line":577,"column":166,"offset":28367},"end":{"line":577,"column":187,"offset":28388}}},{"type":"text","value":", it must include all values that are used inside the callback and participate in the React data flow. That includes props, state, and anything derived from them.","position":{"start":{"line":577,"column":187,"offset":28388},"end":{"line":577,"column":349,"offset":28550}}}],"position":{"start":{"line":577,"column":1,"offset":28202},"end":{"line":577,"column":349,"offset":28550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is ","position":{"start":{"line":579,"column":1,"offset":28552},"end":{"line":579,"column":7,"offset":28558}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"only","position":{"start":{"line":579,"column":9,"offset":28560},"end":{"line":579,"column":13,"offset":28564}}}],"position":{"start":{"line":579,"column":7,"offset":28558},"end":{"line":579,"column":15,"offset":28566}}},{"type":"text","value":" safe to omit a function from the dependency list if nothing in it (or the functions called by it) references props, state, or values derived from them. This example has a bug:","position":{"start":{"line":579,"column":15,"offset":28566},"end":{"line":579,"column":191,"offset":28742}}}],"position":{"start":{"line":579,"column":1,"offset":28552},"end":{"line":579,"column":191,"offset":28742}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">,</span> setProduct<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uses productId prop</span></span>    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 🔴 Invalid because `fetchProduct` uses `productId`</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":581,"column":1,"offset":28744},"end":{"line":596,"column":4,"offset":29156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The recommended fix is to move that function ","position":{"start":{"line":598,"column":3,"offset":29160},"end":{"line":598,"column":48,"offset":29205}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inside","position":{"start":{"line":598,"column":49,"offset":29206},"end":{"line":598,"column":55,"offset":29212}}}],"position":{"start":{"line":598,"column":48,"offset":29205},"end":{"line":598,"column":56,"offset":29213}}},{"type":"text","value":" of your effect","position":{"start":{"line":598,"column":56,"offset":29213},"end":{"line":598,"column":71,"offset":29228}}}],"position":{"start":{"line":598,"column":1,"offset":29158},"end":{"line":598,"column":73,"offset":29230}}},{"type":"text","value":". That makes it easy to see which props or state your effect uses, and to ensure they’re all declared:","position":{"start":{"line":598,"column":73,"offset":29230},"end":{"line":598,"column":175,"offset":29332}}}],"position":{"start":{"line":598,"column":1,"offset":29158},"end":{"line":598,"column":175,"offset":29332}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">,</span> setProduct<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// By moving this function inside the effect, we can clearly see the values it uses.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ Valid because our effect only uses productId</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":600,"column":1,"offset":29334},"end":{"line":616,"column":4,"offset":29830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This also allows you to handle out-of-order responses with a local variable inside the effect:","position":{"start":{"line":618,"column":1,"offset":29832},"end":{"line":618,"column":95,"offset":29926}}}],"position":{"start":{"line":618,"column":1,"offset":29832},"end":{"line":618,"column":95,"offset":29926}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">let</span> ignore <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ignore<span class=\"token punctuation\">)</span> <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> ignore <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":620,"column":1,"offset":29928},"end":{"line":632,"column":4,"offset":30259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We moved the function inside the effect so it doesn’t need to be in its dependency list.","position":{"start":{"line":634,"column":1,"offset":30261},"end":{"line":634,"column":89,"offset":30349}}}],"position":{"start":{"line":634,"column":1,"offset":30261},"end":{"line":634,"column":89,"offset":30349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tip","position":{"start":{"line":636,"column":2,"offset":30352},"end":{"line":636,"column":5,"offset":30355}}}],"position":{"start":{"line":636,"column":2,"offset":30352},"end":{"line":636,"column":5,"offset":30355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Check out ","position":{"start":{"line":638,"column":2,"offset":30359},"end":{"line":638,"column":12,"offset":30369}}},{"type":"element","tagName":"a","properties":{"href":"https://codesandbox.io/s/jvvkoo8pq3","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"this small demo","position":{"start":{"line":638,"column":13,"offset":30370},"end":{"line":638,"column":28,"offset":30385}}}],"position":{"start":{"line":638,"column":12,"offset":30369},"end":{"line":638,"column":66,"offset":30423}}},{"type":"text","value":" and ","position":{"start":{"line":638,"column":66,"offset":30423},"end":{"line":638,"column":71,"offset":30428}}},{"type":"element","tagName":"a","properties":{"href":"https://www.robinwieruch.de/react-hooks-fetch-data/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"this article","position":{"start":{"line":638,"column":72,"offset":30429},"end":{"line":638,"column":84,"offset":30441}}}],"position":{"start":{"line":638,"column":71,"offset":30428},"end":{"line":638,"column":138,"offset":30495}}},{"type":"text","value":" to learn more about data fetching with Hooks.","position":{"start":{"line":638,"column":138,"offset":30495},"end":{"line":638,"column":184,"offset":30541}}}],"position":{"start":{"line":638,"column":2,"offset":30359},"end":{"line":638,"column":184,"offset":30541}}},{"type":"text","value":"\n"}],"position":{"start":{"line":636,"column":1,"offset":30351},"end":{"line":638,"column":184,"offset":30541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"If for some reason you ","position":{"start":{"line":640,"column":3,"offset":30545},"end":{"line":640,"column":26,"offset":30568}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"can’t","position":{"start":{"line":640,"column":27,"offset":30569},"end":{"line":640,"column":32,"offset":30574}}}],"position":{"start":{"line":640,"column":26,"offset":30568},"end":{"line":640,"column":33,"offset":30575}}},{"type":"text","value":" move a function inside an effect, there are a few more options:","position":{"start":{"line":640,"column":33,"offset":30575},"end":{"line":640,"column":97,"offset":30639}}}],"position":{"start":{"line":640,"column":1,"offset":30543},"end":{"line":640,"column":99,"offset":30641}}}],"position":{"start":{"line":640,"column":1,"offset":30543},"end":{"line":640,"column":99,"offset":30641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can try moving that function outside of your component","position":{"start":{"line":642,"column":5,"offset":30647},"end":{"line":642,"column":63,"offset":30705}}}],"position":{"start":{"line":642,"column":3,"offset":30645},"end":{"line":642,"column":65,"offset":30707}}},{"type":"text","value":". In that case, the function is guaranteed to not reference any props or state, and also doesn’t need to be in the list of dependencies.","position":{"start":{"line":642,"column":65,"offset":30707},"end":{"line":642,"column":201,"offset":30843}}}],"position":{"start":{"line":642,"column":1,"offset":30643},"end":{"line":642,"column":201,"offset":30843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If the function you’re calling is a pure computation and is safe to call while rendering, you may ","position":{"start":{"line":643,"column":3,"offset":30846},"end":{"line":643,"column":101,"offset":30944}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"call it outside of the effect instead,","position":{"start":{"line":643,"column":103,"offset":30946},"end":{"line":643,"column":141,"offset":30984}}}],"position":{"start":{"line":643,"column":101,"offset":30944},"end":{"line":643,"column":143,"offset":30986}}},{"type":"text","value":" and make the effect depend on the returned value.","position":{"start":{"line":643,"column":143,"offset":30986},"end":{"line":643,"column":193,"offset":31036}}}],"position":{"start":{"line":643,"column":1,"offset":30844},"end":{"line":643,"column":193,"offset":31036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"As a last resort, you can ","position":{"start":{"line":644,"column":3,"offset":31039},"end":{"line":644,"column":29,"offset":31065}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"add a function to effect dependencies but ","position":{"start":{"line":644,"column":31,"offset":31067},"end":{"line":644,"column":73,"offset":31109}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"wrap its definition","position":{"start":{"line":644,"column":74,"offset":31110},"end":{"line":644,"column":93,"offset":31129}}}],"position":{"start":{"line":644,"column":73,"offset":31109},"end":{"line":644,"column":94,"offset":31130}}}],"position":{"start":{"line":644,"column":29,"offset":31065},"end":{"line":644,"column":96,"offset":31132}}},{"type":"text","value":" into the ","position":{"start":{"line":644,"column":96,"offset":31132},"end":{"line":644,"column":106,"offset":31142}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usecallback"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useCallback</code>","position":{"start":{"line":644,"column":107,"offset":31143},"end":{"line":644,"column":120,"offset":31156}}}],"position":{"start":{"line":644,"column":106,"offset":31142},"end":{"line":644,"column":161,"offset":31197}}},{"type":"text","value":" Hook. This ensures it doesn’t change on every render unless ","position":{"start":{"line":644,"column":161,"offset":31197},"end":{"line":644,"column":222,"offset":31258}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"its own","position":{"start":{"line":644,"column":223,"offset":31259},"end":{"line":644,"column":230,"offset":31266}}}],"position":{"start":{"line":644,"column":222,"offset":31258},"end":{"line":644,"column":231,"offset":31267}}},{"type":"text","value":" dependencies also change:","position":{"start":{"line":644,"column":231,"offset":31267},"end":{"line":644,"column":257,"offset":31293}}}],"position":{"start":{"line":644,"column":1,"offset":31037},"end":{"line":644,"column":257,"offset":31293}}},{"type":"text","value":"\n"}],"position":{"start":{"line":642,"column":1,"offset":30643},"end":{"line":644,"column":257,"offset":31293}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ✅ Wrap with useCallback to avoid change on every render</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> fetchProduct <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// ... Does something with productId ...</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ All useCallback dependencies are specified</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProductDetails</span></span> <span class=\"token attr-name\">fetchProduct</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fetchProduct<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProductDetails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> fetchProduct <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fetchProduct<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ All useEffect dependencies are specified</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":646,"column":1,"offset":31295},"end":{"line":662,"column":4,"offset":31787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that in the above example we ","position":{"start":{"line":664,"column":1,"offset":31789},"end":{"line":664,"column":35,"offset":31823}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"need","position":{"start":{"line":664,"column":37,"offset":31825},"end":{"line":664,"column":41,"offset":31829}}}],"position":{"start":{"line":664,"column":35,"offset":31823},"end":{"line":664,"column":43,"offset":31831}}},{"type":"text","value":" to keep the function in the dependencies list. This ensures that a change in the ","position":{"start":{"line":664,"column":43,"offset":31831},"end":{"line":664,"column":125,"offset":31913}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">productId</code>","position":{"start":{"line":664,"column":125,"offset":31913},"end":{"line":664,"column":136,"offset":31924}}},{"type":"text","value":" prop of ","position":{"start":{"line":664,"column":136,"offset":31924},"end":{"line":664,"column":145,"offset":31933}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">ProductPage</code>","position":{"start":{"line":664,"column":145,"offset":31933},"end":{"line":664,"column":158,"offset":31946}}},{"type":"text","value":" automatically triggers a refetch in the ","position":{"start":{"line":664,"column":158,"offset":31946},"end":{"line":664,"column":199,"offset":31987}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">ProductDetails</code>","position":{"start":{"line":664,"column":199,"offset":31987},"end":{"line":664,"column":215,"offset":32003}}},{"type":"text","value":" component.","position":{"start":{"line":664,"column":215,"offset":32003},"end":{"line":664,"column":226,"offset":32014}}}],"position":{"start":{"line":664,"column":1,"offset":31789},"end":{"line":664,"column":226,"offset":32014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"what-can-i-do-if-my-effect-dependencies-change-too-often"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-can-i-do-if-my-effect-dependencies-change-too-often","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What can I do if my effect dependencies change too often? ","position":{"start":{"line":666,"column":5,"offset":32020},"end":{"line":666,"column":122,"offset":32137}}}],"position":{"start":{"line":666,"column":1,"offset":32016},"end":{"line":666,"column":122,"offset":32137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes, your effect may be using state that changes too often. You might be tempted to omit that state from a list of dependencies, but that usually leads to bugs:","position":{"start":{"line":668,"column":1,"offset":32139},"end":{"line":668,"column":167,"offset":32305}}}],"position":{"start":{"line":668,"column":1,"offset":32139},"end":{"line":668,"column":167,"offset":32305}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This effect depends on the `count` state</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 🔴 Bug: `count` is not specified as a dependency</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":670,"column":1,"offset":32307},"end":{"line":683,"column":4,"offset":32652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The empty set of dependencies, ","position":{"start":{"line":685,"column":1,"offset":32654},"end":{"line":685,"column":32,"offset":32685}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">[]</code>","position":{"start":{"line":685,"column":32,"offset":32685},"end":{"line":685,"column":36,"offset":32689}}},{"type":"text","value":", means that the effect will only run once when the component mounts, and not on every re-render. The problem is that inside the ","position":{"start":{"line":685,"column":36,"offset":32689},"end":{"line":685,"column":165,"offset":32818}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setInterval</code>","position":{"start":{"line":685,"column":165,"offset":32818},"end":{"line":685,"column":178,"offset":32831}}},{"type":"text","value":" callback, the value of ","position":{"start":{"line":685,"column":178,"offset":32831},"end":{"line":685,"column":202,"offset":32855}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">count</code>","position":{"start":{"line":685,"column":202,"offset":32855},"end":{"line":685,"column":209,"offset":32862}}},{"type":"text","value":" does not change, because we’ve created a closure with the value of ","position":{"start":{"line":685,"column":209,"offset":32862},"end":{"line":685,"column":277,"offset":32930}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">count</code>","position":{"start":{"line":685,"column":277,"offset":32930},"end":{"line":685,"column":284,"offset":32937}}},{"type":"text","value":" set to ","position":{"start":{"line":685,"column":284,"offset":32937},"end":{"line":685,"column":292,"offset":32945}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">0</code>","position":{"start":{"line":685,"column":292,"offset":32945},"end":{"line":685,"column":295,"offset":32948}}},{"type":"text","value":" as it was when the effect callback ran. Every second, this callback then calls ","position":{"start":{"line":685,"column":295,"offset":32948},"end":{"line":685,"column":375,"offset":33028}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setCount(0 + 1)</code>","position":{"start":{"line":685,"column":375,"offset":33028},"end":{"line":685,"column":392,"offset":33045}}},{"type":"text","value":", so the count never goes above 1.","position":{"start":{"line":685,"column":392,"offset":33045},"end":{"line":685,"column":426,"offset":33079}}}],"position":{"start":{"line":685,"column":1,"offset":32654},"end":{"line":685,"column":426,"offset":33079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Specifying ","position":{"start":{"line":687,"column":1,"offset":33081},"end":{"line":687,"column":12,"offset":33092}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">[count]</code>","position":{"start":{"line":687,"column":12,"offset":33092},"end":{"line":687,"column":21,"offset":33101}}},{"type":"text","value":" as a list of dependencies would fix the bug, but would cause the interval to be reset on every change. Effectively, each ","position":{"start":{"line":687,"column":21,"offset":33101},"end":{"line":687,"column":143,"offset":33223}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setInterval</code>","position":{"start":{"line":687,"column":143,"offset":33223},"end":{"line":687,"column":156,"offset":33236}}},{"type":"text","value":" would get one chance to execute before being cleared (similar to a ","position":{"start":{"line":687,"column":156,"offset":33236},"end":{"line":687,"column":224,"offset":33304}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setTimeout</code>","position":{"start":{"line":687,"column":224,"offset":33304},"end":{"line":687,"column":236,"offset":33316}}},{"type":"text","value":".) That may not be desirable. To fix this, we can use the ","position":{"start":{"line":687,"column":236,"offset":33316},"end":{"line":687,"column":294,"offset":33374}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#functional-updates"},"children":[{"type":"text","value":"functional update form of ","position":{"start":{"line":687,"column":295,"offset":33375},"end":{"line":687,"column":321,"offset":33401}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setState</code>","position":{"start":{"line":687,"column":321,"offset":33401},"end":{"line":687,"column":331,"offset":33411}}}],"position":{"start":{"line":687,"column":294,"offset":33374},"end":{"line":687,"column":379,"offset":33459}}},{"type":"text","value":". It lets us specify ","position":{"start":{"line":687,"column":379,"offset":33459},"end":{"line":687,"column":400,"offset":33480}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"how","position":{"start":{"line":687,"column":401,"offset":33481},"end":{"line":687,"column":404,"offset":33484}}}],"position":{"start":{"line":687,"column":400,"offset":33480},"end":{"line":687,"column":405,"offset":33485}}},{"type":"text","value":" the state needs to change without referencing the ","position":{"start":{"line":687,"column":405,"offset":33485},"end":{"line":687,"column":456,"offset":33536}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"current","position":{"start":{"line":687,"column":457,"offset":33537},"end":{"line":687,"column":464,"offset":33544}}}],"position":{"start":{"line":687,"column":456,"offset":33536},"end":{"line":687,"column":465,"offset":33545}}},{"type":"text","value":" state:","position":{"start":{"line":687,"column":465,"offset":33545},"end":{"line":687,"column":472,"offset":33552}}}],"position":{"start":{"line":687,"column":1,"offset":33081},"end":{"line":687,"column":472,"offset":33552}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span> <span class=\"token operator\">=></span> c <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ This doesn't depend on `count` variable outside</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ Our effect doesn't use any variables in the component scope</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":689,"column":1,"offset":33554},"end":{"line":702,"column":4,"offset":33922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(The identity of the ","position":{"start":{"line":704,"column":1,"offset":33924},"end":{"line":704,"column":22,"offset":33945}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setCount</code>","position":{"start":{"line":704,"column":22,"offset":33945},"end":{"line":704,"column":32,"offset":33955}}},{"type":"text","value":" function is guaranteed to be stable so it’s safe to omit.)","position":{"start":{"line":704,"column":32,"offset":33955},"end":{"line":704,"column":91,"offset":34014}}}],"position":{"start":{"line":704,"column":1,"offset":33924},"end":{"line":704,"column":91,"offset":34014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, the ","position":{"start":{"line":706,"column":1,"offset":34016},"end":{"line":706,"column":10,"offset":34025}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setInterval</code>","position":{"start":{"line":706,"column":10,"offset":34025},"end":{"line":706,"column":23,"offset":34038}}},{"type":"text","value":" callback executes once a second, but each time the inner call to ","position":{"start":{"line":706,"column":23,"offset":34038},"end":{"line":706,"column":89,"offset":34104}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">setCount</code>","position":{"start":{"line":706,"column":89,"offset":34104},"end":{"line":706,"column":99,"offset":34114}}},{"type":"text","value":" can use an up-to-date value for ","position":{"start":{"line":706,"column":99,"offset":34114},"end":{"line":706,"column":132,"offset":34147}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">count</code>","position":{"start":{"line":706,"column":132,"offset":34147},"end":{"line":706,"column":139,"offset":34154}}},{"type":"text","value":" (called ","position":{"start":{"line":706,"column":139,"offset":34154},"end":{"line":706,"column":148,"offset":34163}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">c</code>","position":{"start":{"line":706,"column":148,"offset":34163},"end":{"line":706,"column":151,"offset":34166}}},{"type":"text","value":" in the callback here.)","position":{"start":{"line":706,"column":151,"offset":34166},"end":{"line":706,"column":174,"offset":34189}}}],"position":{"start":{"line":706,"column":1,"offset":34016},"end":{"line":706,"column":174,"offset":34189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In more complex cases (such as if one state depends on another state), try moving the state update logic outside the effect with the ","position":{"start":{"line":708,"column":1,"offset":34191},"end":{"line":708,"column":134,"offset":34324}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usereducer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useReducer</code>","position":{"start":{"line":708,"column":135,"offset":34325},"end":{"line":708,"column":147,"offset":34337}}},{"type":"text","value":" Hook","position":{"start":{"line":708,"column":147,"offset":34337},"end":{"line":708,"column":152,"offset":34342}}}],"position":{"start":{"line":708,"column":134,"offset":34324},"end":{"line":708,"column":192,"offset":34382}}},{"type":"text","value":". ","position":{"start":{"line":708,"column":192,"offset":34382},"end":{"line":708,"column":194,"offset":34384}}},{"type":"element","tagName":"a","properties":{"href":"https://adamrackis.dev/state-and-use-reducer/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"This article","position":{"start":{"line":708,"column":195,"offset":34385},"end":{"line":708,"column":207,"offset":34397}}}],"position":{"start":{"line":708,"column":194,"offset":34384},"end":{"line":708,"column":255,"offset":34445}}},{"type":"text","value":" offers an example of how you can do this. ","position":{"start":{"line":708,"column":255,"offset":34445},"end":{"line":708,"column":298,"offset":34488}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The identity of the ","position":{"start":{"line":708,"column":300,"offset":34490},"end":{"line":708,"column":320,"offset":34510}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">dispatch</code>","position":{"start":{"line":708,"column":320,"offset":34510},"end":{"line":708,"column":330,"offset":34520}}},{"type":"text","value":" function from ","position":{"start":{"line":708,"column":330,"offset":34520},"end":{"line":708,"column":345,"offset":34535}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useReducer</code>","position":{"start":{"line":708,"column":345,"offset":34535},"end":{"line":708,"column":357,"offset":34547}}},{"type":"text","value":" is always stable","position":{"start":{"line":708,"column":357,"offset":34547},"end":{"line":708,"column":374,"offset":34564}}}],"position":{"start":{"line":708,"column":298,"offset":34488},"end":{"line":708,"column":376,"offset":34566}}},{"type":"text","value":" — even if the reducer function is declared inside the component and reads its props.","position":{"start":{"line":708,"column":376,"offset":34566},"end":{"line":708,"column":461,"offset":34651}}}],"position":{"start":{"line":708,"column":1,"offset":34191},"end":{"line":708,"column":461,"offset":34651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As a last resort, if you want something like ","position":{"start":{"line":710,"column":1,"offset":34653},"end":{"line":710,"column":46,"offset":34698}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">this</code>","position":{"start":{"line":710,"column":46,"offset":34698},"end":{"line":710,"column":52,"offset":34704}}},{"type":"text","value":" in a class, you can ","position":{"start":{"line":710,"column":52,"offset":34704},"end":{"line":710,"column":73,"offset":34725}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-faq.html#is-there-something-like-instance-variables"},"children":[{"type":"text","value":"use a ref","position":{"start":{"line":710,"column":74,"offset":34726},"end":{"line":710,"column":83,"offset":34735}}}],"position":{"start":{"line":710,"column":73,"offset":34725},"end":{"line":710,"column":149,"offset":34801}}},{"type":"text","value":" to hold a mutable variable. Then you can write and read to it. For example:","position":{"start":{"line":710,"column":149,"offset":34801},"end":{"line":710,"column":225,"offset":34877}}}],"position":{"start":{"line":710,"column":1,"offset":34653},"end":{"line":710,"column":225,"offset":34877}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Keep latest props in a ref.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> latestProps <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    latestProps<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Read latest props at any time</span></span><span class=\"gatsby-highlight-code-line\">      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>latestProps<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This effect never re-runs</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":712,"column":1,"offset":34879},"end":{"line":730,"column":4,"offset":35303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Only do this if you couldn’t find a better alternative, as relying on mutation makes components less predictable. If there’s a specific pattern that doesn’t translate well, ","position":{"start":{"line":732,"column":1,"offset":35305},"end":{"line":732,"column":174,"offset":35478}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebook/react/issues/new","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"file an issue","position":{"start":{"line":732,"column":175,"offset":35479},"end":{"line":732,"column":188,"offset":35492}}}],"position":{"start":{"line":732,"column":174,"offset":35478},"end":{"line":732,"column":235,"offset":35539}}},{"type":"text","value":" with a runnable example code and we can try to help.","position":{"start":{"line":732,"column":235,"offset":35539},"end":{"line":732,"column":288,"offset":35592}}}],"position":{"start":{"line":732,"column":1,"offset":35305},"end":{"line":732,"column":288,"offset":35592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-do-i-implement-shouldcomponentupdate"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-do-i-implement-shouldcomponentupdate","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How do I implement ","position":{"start":{"line":734,"column":5,"offset":35598},"end":{"line":734,"column":24,"offset":35617}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">shouldComponentUpdate</code>","position":{"start":{"line":734,"column":24,"offset":35617},"end":{"line":734,"column":47,"offset":35640}}},{"type":"text","value":"? ","position":{"start":{"line":734,"column":47,"offset":35640},"end":{"line":734,"column":92,"offset":35685}}}],"position":{"start":{"line":734,"column":1,"offset":35594},"end":{"line":734,"column":92,"offset":35685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can wrap a function component with ","position":{"start":{"line":736,"column":1,"offset":35687},"end":{"line":736,"column":40,"offset":35726}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.memo</code>","position":{"start":{"line":736,"column":40,"offset":35726},"end":{"line":736,"column":52,"offset":35738}}},{"type":"text","value":" to shallowly compare its props:","position":{"start":{"line":736,"column":52,"offset":35738},"end":{"line":736,"column":84,"offset":35770}}}],"position":{"start":{"line":736,"column":1,"offset":35687},"end":{"line":736,"column":84,"offset":35770}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> Button <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// your component</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":738,"column":1,"offset":35772},"end":{"line":742,"column":4,"offset":35844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It’s not a Hook because it doesn’t compose like Hooks do. ","position":{"start":{"line":744,"column":1,"offset":35846},"end":{"line":744,"column":59,"offset":35904}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.memo</code>","position":{"start":{"line":744,"column":59,"offset":35904},"end":{"line":744,"column":71,"offset":35916}}},{"type":"text","value":" is equivalent to ","position":{"start":{"line":744,"column":71,"offset":35916},"end":{"line":744,"column":89,"offset":35934}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">PureComponent</code>","position":{"start":{"line":744,"column":89,"offset":35934},"end":{"line":744,"column":104,"offset":35949}}},{"type":"text","value":", but it only compares props. (You can also add a second argument to specify a custom comparison function that takes the old and new props. If it returns true, the update is skipped.)","position":{"start":{"line":744,"column":104,"offset":35949},"end":{"line":744,"column":287,"offset":36132}}}],"position":{"start":{"line":744,"column":1,"offset":35846},"end":{"line":744,"column":287,"offset":36132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">React.memo</code>","position":{"start":{"line":746,"column":1,"offset":36134},"end":{"line":746,"column":13,"offset":36146}}},{"type":"text","value":" doesn’t compare state because there is no single state object to compare. But you can make children pure too, or even ","position":{"start":{"line":746,"column":13,"offset":36146},"end":{"line":746,"column":132,"offset":36265}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-faq.html#how-to-memoize-calculations"},"children":[{"type":"text","value":"optimize individual children with ","position":{"start":{"line":746,"column":133,"offset":36266},"end":{"line":746,"column":167,"offset":36300}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":746,"column":167,"offset":36300},"end":{"line":746,"column":176,"offset":36309}}}],"position":{"start":{"line":746,"column":132,"offset":36265},"end":{"line":746,"column":227,"offset":36360}}},{"type":"text","value":".","position":{"start":{"line":746,"column":227,"offset":36360},"end":{"line":746,"column":228,"offset":36361}}}],"position":{"start":{"line":746,"column":1,"offset":36134},"end":{"line":746,"column":228,"offset":36361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-to-memoize-calculations"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-memoize-calculations","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How to memoize calculations? ","position":{"start":{"line":748,"column":5,"offset":36367},"end":{"line":748,"column":64,"offset":36426}}}],"position":{"start":{"line":748,"column":1,"offset":36363},"end":{"line":748,"column":64,"offset":36426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":750,"column":1,"offset":36428},"end":{"line":750,"column":5,"offset":36432}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usememo"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":750,"column":6,"offset":36433},"end":{"line":750,"column":15,"offset":36442}}}],"position":{"start":{"line":750,"column":5,"offset":36432},"end":{"line":750,"column":52,"offset":36479}}},{"type":"text","value":" Hook lets you cache calculations between multiple renders by “remembering” the previous computation:","position":{"start":{"line":750,"column":52,"offset":36479},"end":{"line":750,"column":153,"offset":36580}}}],"position":{"start":{"line":750,"column":1,"offset":36428},"end":{"line":750,"column":153,"offset":36580}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":752,"column":1,"offset":36582},"end":{"line":754,"column":4,"offset":36665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This code calls ","position":{"start":{"line":756,"column":1,"offset":36667},"end":{"line":756,"column":17,"offset":36683}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">computeExpensiveValue(a, b)</code>","position":{"start":{"line":756,"column":17,"offset":36683},"end":{"line":756,"column":46,"offset":36712}}},{"type":"text","value":". But if the dependencies ","position":{"start":{"line":756,"column":46,"offset":36712},"end":{"line":756,"column":72,"offset":36738}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">[a, b]</code>","position":{"start":{"line":756,"column":72,"offset":36738},"end":{"line":756,"column":80,"offset":36746}}},{"type":"text","value":" haven’t changed since the last value, ","position":{"start":{"line":756,"column":80,"offset":36746},"end":{"line":756,"column":119,"offset":36785}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":756,"column":119,"offset":36785},"end":{"line":756,"column":128,"offset":36794}}},{"type":"text","value":" skips calling it a second time and simply reuses the last value it returned.","position":{"start":{"line":756,"column":128,"offset":36794},"end":{"line":756,"column":205,"offset":36871}}}],"position":{"start":{"line":756,"column":1,"offset":36667},"end":{"line":756,"column":205,"offset":36871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remember that the function passed to ","position":{"start":{"line":758,"column":1,"offset":36873},"end":{"line":758,"column":38,"offset":36910}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":758,"column":38,"offset":36910},"end":{"line":758,"column":47,"offset":36919}}},{"type":"text","value":" runs during rendering. Don’t do anything there that you wouldn’t normally do while rendering. For example, side effects belong in ","position":{"start":{"line":758,"column":47,"offset":36919},"end":{"line":758,"column":178,"offset":37050}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useEffect</code>","position":{"start":{"line":758,"column":178,"offset":37050},"end":{"line":758,"column":189,"offset":37061}}},{"type":"text","value":", not ","position":{"start":{"line":758,"column":189,"offset":37061},"end":{"line":758,"column":195,"offset":37067}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":758,"column":195,"offset":37067},"end":{"line":758,"column":204,"offset":37076}}},{"type":"text","value":".","position":{"start":{"line":758,"column":204,"offset":37076},"end":{"line":758,"column":205,"offset":37077}}}],"position":{"start":{"line":758,"column":1,"offset":36873},"end":{"line":758,"column":205,"offset":37077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You may rely on ","position":{"start":{"line":760,"column":3,"offset":37081},"end":{"line":760,"column":19,"offset":37097}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":760,"column":19,"offset":37097},"end":{"line":760,"column":28,"offset":37106}}},{"type":"text","value":" as a performance optimization, not as a semantic guarantee.","position":{"start":{"line":760,"column":28,"offset":37106},"end":{"line":760,"column":88,"offset":37166}}}],"position":{"start":{"line":760,"column":1,"offset":37079},"end":{"line":760,"column":90,"offset":37168}}},{"type":"text","value":" In the future, React may choose to “forget” some previously memoized values and recalculate them on next render, e.g. to free memory for offscreen components. Write your code so that it still works without ","position":{"start":{"line":760,"column":90,"offset":37168},"end":{"line":760,"column":297,"offset":37375}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":760,"column":297,"offset":37375},"end":{"line":760,"column":306,"offset":37384}}},{"type":"text","value":" — and then add it to optimize performance. (For rare cases when a value must ","position":{"start":{"line":760,"column":306,"offset":37384},"end":{"line":760,"column":384,"offset":37462}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"never","position":{"start":{"line":760,"column":385,"offset":37463},"end":{"line":760,"column":390,"offset":37468}}}],"position":{"start":{"line":760,"column":384,"offset":37462},"end":{"line":760,"column":391,"offset":37469}}},{"type":"text","value":" be recomputed, you can ","position":{"start":{"line":760,"column":391,"offset":37469},"end":{"line":760,"column":415,"offset":37493}}},{"type":"element","tagName":"a","properties":{"href":"#how-to-create-expensive-objects-lazily"},"children":[{"type":"text","value":"lazily initialize","position":{"start":{"line":760,"column":416,"offset":37494},"end":{"line":760,"column":433,"offset":37511}}}],"position":{"start":{"line":760,"column":415,"offset":37493},"end":{"line":760,"column":475,"offset":37553}}},{"type":"text","value":" a ref.)","position":{"start":{"line":760,"column":475,"offset":37553},"end":{"line":760,"column":483,"offset":37561}}}],"position":{"start":{"line":760,"column":1,"offset":37079},"end":{"line":760,"column":483,"offset":37561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Conveniently, ","position":{"start":{"line":762,"column":1,"offset":37563},"end":{"line":762,"column":15,"offset":37577}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":762,"column":15,"offset":37577},"end":{"line":762,"column":24,"offset":37586}}},{"type":"text","value":" also lets you skip an expensive re-render of a child:","position":{"start":{"line":762,"column":24,"offset":37586},"end":{"line":762,"column":78,"offset":37640}}}],"position":{"start":{"line":762,"column":1,"offset":37563},"end":{"line":762,"column":78,"offset":37640}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Only re-rendered if `a` changes:</span>\n  <span class=\"token keyword\">const</span> child1 <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child1</span></span> <span class=\"token attr-name\">a</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Only re-rendered if `b` changes:</span>\n  <span class=\"token keyword\">const</span> child2 <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child2</span></span> <span class=\"token attr-name\">b</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>child1<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>child2<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":764,"column":1,"offset":37642},"end":{"line":777,"column":4,"offset":37927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that this approach won’t work in a loop because Hook calls ","position":{"start":{"line":779,"column":1,"offset":37929},"end":{"line":779,"column":65,"offset":37993}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-rules.html"},"children":[{"type":"text","value":"can’t","position":{"start":{"line":779,"column":66,"offset":37994},"end":{"line":779,"column":71,"offset":37999}}}],"position":{"start":{"line":779,"column":65,"offset":37993},"end":{"line":779,"column":96,"offset":38024}}},{"type":"text","value":" be placed inside loops. But you can extract a separate component for the list item, and call ","position":{"start":{"line":779,"column":96,"offset":38024},"end":{"line":779,"column":190,"offset":38118}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":779,"column":190,"offset":38118},"end":{"line":779,"column":199,"offset":38127}}},{"type":"text","value":" there.","position":{"start":{"line":779,"column":199,"offset":38127},"end":{"line":779,"column":206,"offset":38134}}}],"position":{"start":{"line":779,"column":1,"offset":37929},"end":{"line":779,"column":206,"offset":38134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-to-create-expensive-objects-lazily"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-create-expensive-objects-lazily","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How to create expensive objects lazily? ","position":{"start":{"line":781,"column":5,"offset":38140},"end":{"line":781,"column":86,"offset":38221}}}],"position":{"start":{"line":781,"column":1,"offset":38136},"end":{"line":781,"column":86,"offset":38221}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":783,"column":1,"offset":38223},"end":{"line":783,"column":10,"offset":38232}}},{"type":"text","value":" lets you ","position":{"start":{"line":783,"column":10,"offset":38232},"end":{"line":783,"column":20,"offset":38242}}},{"type":"element","tagName":"a","properties":{"href":"#how-to-memoize-calculations"},"children":[{"type":"text","value":"memoize an expensive calculation","position":{"start":{"line":783,"column":21,"offset":38243},"end":{"line":783,"column":53,"offset":38275}}}],"position":{"start":{"line":783,"column":20,"offset":38242},"end":{"line":783,"column":84,"offset":38306}}},{"type":"text","value":" if the dependencies are the same. However, it only serves as a hint, and doesn’t ","position":{"start":{"line":783,"column":84,"offset":38306},"end":{"line":783,"column":166,"offset":38388}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"guarantee","position":{"start":{"line":783,"column":167,"offset":38389},"end":{"line":783,"column":176,"offset":38398}}}],"position":{"start":{"line":783,"column":166,"offset":38388},"end":{"line":783,"column":177,"offset":38399}}},{"type":"text","value":" the computation won’t re-run. But sometimes you need to be sure an object is only created once.","position":{"start":{"line":783,"column":177,"offset":38399},"end":{"line":783,"column":273,"offset":38495}}}],"position":{"start":{"line":783,"column":1,"offset":38223},"end":{"line":783,"column":273,"offset":38495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The first common use case is when creating the initial state is expensive:","position":{"start":{"line":785,"column":3,"offset":38499},"end":{"line":785,"column":77,"offset":38573}}}],"position":{"start":{"line":785,"column":1,"offset":38497},"end":{"line":785,"column":79,"offset":38575}}}],"position":{"start":{"line":785,"column":1,"offset":38497},"end":{"line":785,"column":79,"offset":38575}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Table</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ⚠️ createRows() is called on every render</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> setRows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token function\">createRows</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":787,"column":1,"offset":38577},"end":{"line":793,"column":4,"offset":38729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To avoid re-creating the ignored initial state, we can pass a ","position":{"start":{"line":795,"column":1,"offset":38731},"end":{"line":795,"column":63,"offset":38793}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"function","position":{"start":{"line":795,"column":65,"offset":38795},"end":{"line":795,"column":73,"offset":38803}}}],"position":{"start":{"line":795,"column":63,"offset":38793},"end":{"line":795,"column":75,"offset":38805}}},{"type":"text","value":" to ","position":{"start":{"line":795,"column":75,"offset":38805},"end":{"line":795,"column":79,"offset":38809}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":795,"column":79,"offset":38809},"end":{"line":795,"column":89,"offset":38819}}},{"type":"text","value":":","position":{"start":{"line":795,"column":89,"offset":38819},"end":{"line":795,"column":90,"offset":38820}}}],"position":{"start":{"line":795,"column":1,"offset":38731},"end":{"line":795,"column":90,"offset":38820}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Table</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ✅ createRows() is only called once</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> setRows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">createRows</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":797,"column":1,"offset":38822},"end":{"line":803,"column":4,"offset":38973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"React will only call this function during the first render. See the ","position":{"start":{"line":805,"column":1,"offset":38975},"end":{"line":805,"column":69,"offset":39043}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usestate"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":805,"column":70,"offset":39044},"end":{"line":805,"column":80,"offset":39054}}},{"type":"text","value":" API reference","position":{"start":{"line":805,"column":80,"offset":39054},"end":{"line":805,"column":94,"offset":39068}}}],"position":{"start":{"line":805,"column":69,"offset":39043},"end":{"line":805,"column":132,"offset":39106}}},{"type":"text","value":".","position":{"start":{"line":805,"column":132,"offset":39106},"end":{"line":805,"column":133,"offset":39107}}}],"position":{"start":{"line":805,"column":1,"offset":38975},"end":{"line":805,"column":133,"offset":39107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You might also occasionally want to avoid re-creating the ","position":{"start":{"line":807,"column":3,"offset":39111},"end":{"line":807,"column":61,"offset":39169}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useRef()</code>","position":{"start":{"line":807,"column":61,"offset":39169},"end":{"line":807,"column":71,"offset":39179}}},{"type":"text","value":" initial value.","position":{"start":{"line":807,"column":71,"offset":39179},"end":{"line":807,"column":86,"offset":39194}}}],"position":{"start":{"line":807,"column":1,"offset":39109},"end":{"line":807,"column":88,"offset":39196}}},{"type":"text","value":" For example, maybe you want to ensure some imperative class instance only gets created once:","position":{"start":{"line":807,"column":88,"offset":39196},"end":{"line":807,"column":181,"offset":39289}}}],"position":{"start":{"line":807,"column":1,"offset":39109},"end":{"line":807,"column":181,"offset":39289}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Image</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ⚠️ IntersectionObserver is created on every render</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>onIntersect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":809,"column":1,"offset":39291},"end":{"line":815,"column":4,"offset":39452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useRef</code>","position":{"start":{"line":817,"column":1,"offset":39454},"end":{"line":817,"column":9,"offset":39462}}},{"type":"text","value":" ","position":{"start":{"line":817,"column":9,"offset":39462},"end":{"line":817,"column":10,"offset":39463}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"does not","position":{"start":{"line":817,"column":12,"offset":39465},"end":{"line":817,"column":20,"offset":39473}}}],"position":{"start":{"line":817,"column":10,"offset":39463},"end":{"line":817,"column":22,"offset":39475}}},{"type":"text","value":" accept a special function overload like ","position":{"start":{"line":817,"column":22,"offset":39475},"end":{"line":817,"column":63,"offset":39516}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":817,"column":63,"offset":39516},"end":{"line":817,"column":73,"offset":39526}}},{"type":"text","value":". Instead, you can write your own function that creates and sets it lazily:","position":{"start":{"line":817,"column":73,"offset":39526},"end":{"line":817,"column":148,"offset":39601}}}],"position":{"start":{"line":817,"column":1,"offset":39454},"end":{"line":817,"column":148,"offset":39601}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Image</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ✅ IntersectionObserver is created lazily once</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>onIntersect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// When you need it, call getObserver()</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":819,"column":1,"offset":39603},"end":{"line":834,"column":4,"offset":39922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This avoids creating an expensive object until it’s truly needed for the first time. If you use Flow or TypeScript, you can also give ","position":{"start":{"line":836,"column":1,"offset":39924},"end":{"line":836,"column":135,"offset":40058}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">getObserver()</code>","position":{"start":{"line":836,"column":135,"offset":40058},"end":{"line":836,"column":150,"offset":40073}}},{"type":"text","value":" a non-nullable type for convenience.","position":{"start":{"line":836,"column":150,"offset":40073},"end":{"line":836,"column":187,"offset":40110}}}],"position":{"start":{"line":836,"column":1,"offset":39924},"end":{"line":836,"column":187,"offset":40110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"are-hooks-slow-because-of-creating-functions-in-render"},"children":[{"type":"element","tagName":"a","properties":{"href":"#are-hooks-slow-because-of-creating-functions-in-render","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Are Hooks slow because of creating functions in render? ","position":{"start":{"line":839,"column":5,"offset":40117},"end":{"line":839,"column":118,"offset":40230}}}],"position":{"start":{"line":839,"column":1,"offset":40113},"end":{"line":839,"column":118,"offset":40230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"No. In modern browsers, the raw performance of closures compared to classes doesn’t differ significantly except in extreme scenarios.","position":{"start":{"line":841,"column":1,"offset":40232},"end":{"line":841,"column":134,"offset":40365}}}],"position":{"start":{"line":841,"column":1,"offset":40232},"end":{"line":841,"column":134,"offset":40365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition, consider that the design of Hooks is more efficient in a couple ways:","position":{"start":{"line":843,"column":1,"offset":40367},"end":{"line":843,"column":83,"offset":40449}}}],"position":{"start":{"line":843,"column":1,"offset":40367},"end":{"line":843,"column":83,"offset":40449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Hooks avoid a lot of the overhead that classes require, like the cost of creating class instances and binding event handlers in the constructor.","position":{"start":{"line":845,"column":3,"offset":40453},"end":{"line":845,"column":147,"offset":40597}}}],"position":{"start":{"line":845,"column":1,"offset":40451},"end":{"line":846,"column":1,"offset":40598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Idiomatic code using Hooks doesn’t need the deep component tree nesting","position":{"start":{"line":847,"column":5,"offset":40603},"end":{"line":847,"column":76,"offset":40674}}}],"position":{"start":{"line":847,"column":3,"offset":40601},"end":{"line":847,"column":78,"offset":40676}}},{"type":"text","value":" that is prevalent in codebases that use higher-order components, render props, and context. With smaller component trees, React has less work to do.","position":{"start":{"line":847,"column":78,"offset":40676},"end":{"line":847,"column":227,"offset":40825}}}],"position":{"start":{"line":847,"column":1,"offset":40599},"end":{"line":847,"column":227,"offset":40825}}},{"type":"text","value":"\n"}],"position":{"start":{"line":845,"column":1,"offset":40451},"end":{"line":847,"column":227,"offset":40825}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Traditionally, performance concerns around inline functions in React have been related to how passing new callbacks on each render breaks ","position":{"start":{"line":849,"column":1,"offset":40827},"end":{"line":849,"column":139,"offset":40965}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">shouldComponentUpdate</code>","position":{"start":{"line":849,"column":139,"offset":40965},"end":{"line":849,"column":162,"offset":40988}}},{"type":"text","value":" optimizations in child components. Hooks approach this problem from three sides.","position":{"start":{"line":849,"column":162,"offset":40988},"end":{"line":849,"column":243,"offset":41069}}}],"position":{"start":{"line":849,"column":1,"offset":40827},"end":{"line":849,"column":243,"offset":41069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":851,"column":3,"offset":41073},"end":{"line":851,"column":7,"offset":41077}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usecallback"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useCallback</code>","position":{"start":{"line":851,"column":8,"offset":41078},"end":{"line":851,"column":21,"offset":41091}}}],"position":{"start":{"line":851,"column":7,"offset":41077},"end":{"line":851,"column":62,"offset":41132}}},{"type":"text","value":" Hook lets you keep the same callback reference between re-renders so that ","position":{"start":{"line":851,"column":62,"offset":41132},"end":{"line":851,"column":137,"offset":41207}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">shouldComponentUpdate</code>","position":{"start":{"line":851,"column":137,"offset":41207},"end":{"line":851,"column":160,"offset":41230}}},{"type":"text","value":" continues to work:","position":{"start":{"line":851,"column":160,"offset":41230},"end":{"line":851,"column":179,"offset":41249}}}],"position":{"start":{"line":851,"column":3,"offset":41073},"end":{"line":851,"column":179,"offset":41249}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Will not change unless `a` or `b` changes</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> memoizedCallback <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":853,"column":5,"offset":41255},"end":{"line":858,"column":8,"offset":41410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":851,"column":1,"offset":41071},"end":{"line":859,"column":1,"offset":41411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":860,"column":3,"offset":41414},"end":{"line":860,"column":7,"offset":41418}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-faq.html#how-to-memoize-calculations"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useMemo</code>","position":{"start":{"line":860,"column":8,"offset":41419},"end":{"line":860,"column":17,"offset":41428}}}],"position":{"start":{"line":860,"column":7,"offset":41418},"end":{"line":860,"column":68,"offset":41479}}},{"type":"text","value":" Hook makes it easier to control when individual children update, reducing the need for pure components.","position":{"start":{"line":860,"column":68,"offset":41479},"end":{"line":860,"column":172,"offset":41583}}}],"position":{"start":{"line":860,"column":1,"offset":41412},"end":{"line":861,"column":1,"offset":41584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Finally, the ","position":{"start":{"line":862,"column":3,"offset":41587},"end":{"line":862,"column":16,"offset":41600}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usereducer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useReducer</code>","position":{"start":{"line":862,"column":17,"offset":41601},"end":{"line":862,"column":29,"offset":41613}}}],"position":{"start":{"line":862,"column":16,"offset":41600},"end":{"line":862,"column":69,"offset":41653}}},{"type":"text","value":" Hook reduces the need to pass callbacks deeply, as explained below.","position":{"start":{"line":862,"column":69,"offset":41653},"end":{"line":862,"column":137,"offset":41721}}}],"position":{"start":{"line":862,"column":1,"offset":41585},"end":{"line":862,"column":137,"offset":41721}}},{"type":"text","value":"\n"}],"position":{"start":{"line":851,"column":1,"offset":41071},"end":{"line":862,"column":137,"offset":41721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-to-avoid-passing-callbacks-down"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-avoid-passing-callbacks-down","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How to avoid passing callbacks down? ","position":{"start":{"line":864,"column":5,"offset":41727},"end":{"line":864,"column":80,"offset":41802}}}],"position":{"start":{"line":864,"column":1,"offset":41723},"end":{"line":864,"column":80,"offset":41802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We’ve found that most people don’t enjoy manually passing callbacks through every level of a component tree. Even though it is more explicit, it can feel like a lot of “plumbing”.","position":{"start":{"line":866,"column":1,"offset":41804},"end":{"line":866,"column":180,"offset":41983}}}],"position":{"start":{"line":866,"column":1,"offset":41804},"end":{"line":866,"column":180,"offset":41983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In large component trees, an alternative we recommend is to pass down a ","position":{"start":{"line":868,"column":1,"offset":41985},"end":{"line":868,"column":73,"offset":42057}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">dispatch</code>","position":{"start":{"line":868,"column":73,"offset":42057},"end":{"line":868,"column":83,"offset":42067}}},{"type":"text","value":" function from ","position":{"start":{"line":868,"column":83,"offset":42067},"end":{"line":868,"column":98,"offset":42082}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usereducer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useReducer</code>","position":{"start":{"line":868,"column":99,"offset":42083},"end":{"line":868,"column":111,"offset":42095}}}],"position":{"start":{"line":868,"column":98,"offset":42082},"end":{"line":868,"column":151,"offset":42135}}},{"type":"text","value":" via context:","position":{"start":{"line":868,"column":151,"offset":42135},"end":{"line":868,"column":164,"offset":42148}}}],"position":{"start":{"line":868,"column":1,"offset":41985},"end":{"line":868,"column":164,"offset":42148}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> TodosDispatch <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TodosApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Note: `dispatch` won't change between re-renders</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodosDispatch.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>dispatch<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeepTree</span></span> <span class=\"token attr-name\">todos</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodosDispatch.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":870,"column":1,"offset":42150},"end":{"line":883,"column":4,"offset":42472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Any child in the tree inside ","position":{"start":{"line":885,"column":1,"offset":42474},"end":{"line":885,"column":30,"offset":42503}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">TodosApp</code>","position":{"start":{"line":885,"column":30,"offset":42503},"end":{"line":885,"column":40,"offset":42513}}},{"type":"text","value":" can use the ","position":{"start":{"line":885,"column":40,"offset":42513},"end":{"line":885,"column":53,"offset":42526}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">dispatch</code>","position":{"start":{"line":885,"column":53,"offset":42526},"end":{"line":885,"column":63,"offset":42536}}},{"type":"text","value":" function to pass actions up to ","position":{"start":{"line":885,"column":63,"offset":42536},"end":{"line":885,"column":95,"offset":42568}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">TodosApp</code>","position":{"start":{"line":885,"column":95,"offset":42568},"end":{"line":885,"column":105,"offset":42578}}},{"type":"text","value":":","position":{"start":{"line":885,"column":105,"offset":42578},"end":{"line":885,"column":106,"offset":42579}}}],"position":{"start":{"line":885,"column":1,"offset":42474},"end":{"line":885,"column":106,"offset":42579}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">DeepChild</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// If we want to perform an action, we can get dispatch from context.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>TodosDispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Add todo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":887,"column":1,"offset":42581},"end":{"line":900,"column":4,"offset":42890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is both more convenient from the maintenance perspective (no need to keep forwarding callbacks), and avoids the callback problem altogether. Passing ","position":{"start":{"line":902,"column":1,"offset":42892},"end":{"line":902,"column":155,"offset":43046}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">dispatch</code>","position":{"start":{"line":902,"column":155,"offset":43046},"end":{"line":902,"column":165,"offset":43056}}},{"type":"text","value":" down like this is the recommended pattern for deep updates.","position":{"start":{"line":902,"column":165,"offset":43056},"end":{"line":902,"column":225,"offset":43116}}}],"position":{"start":{"line":902,"column":1,"offset":42892},"end":{"line":902,"column":225,"offset":43116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that you can still choose whether to pass the application ","position":{"start":{"line":904,"column":1,"offset":43118},"end":{"line":904,"column":64,"offset":43181}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":904,"column":65,"offset":43182},"end":{"line":904,"column":70,"offset":43187}}}],"position":{"start":{"line":904,"column":64,"offset":43181},"end":{"line":904,"column":71,"offset":43188}}},{"type":"text","value":" down as props (more explicit) or as context (more convenient for very deep updates). If you use context to pass down the state too, use two different context types — the ","position":{"start":{"line":904,"column":71,"offset":43188},"end":{"line":904,"column":243,"offset":43360}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">dispatch</code>","position":{"start":{"line":904,"column":243,"offset":43360},"end":{"line":904,"column":253,"offset":43370}}},{"type":"text","value":" context never changes, so components that read it don’t need to rerender unless they also need the application state.","position":{"start":{"line":904,"column":253,"offset":43370},"end":{"line":904,"column":371,"offset":43488}}}],"position":{"start":{"line":904,"column":1,"offset":43118},"end":{"line":904,"column":371,"offset":43488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-to-read-an-often-changing-value-from-usecallback"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-to-read-an-often-changing-value-from-usecallback","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How to read an often-changing value from ","position":{"start":{"line":906,"column":5,"offset":43494},"end":{"line":906,"column":46,"offset":43535}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useCallback</code>","position":{"start":{"line":906,"column":46,"offset":43535},"end":{"line":906,"column":59,"offset":43548}}},{"type":"text","value":"? ","position":{"start":{"line":906,"column":59,"offset":43548},"end":{"line":906,"column":116,"offset":43605}}}],"position":{"start":{"line":906,"column":1,"offset":43490},"end":{"line":906,"column":116,"offset":43605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":908,"column":2,"offset":43608},"end":{"line":908,"column":6,"offset":43612}}}],"position":{"start":{"line":908,"column":2,"offset":43608},"end":{"line":908,"column":6,"offset":43612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We recommend to ","position":{"start":{"line":910,"column":2,"offset":43616},"end":{"line":910,"column":18,"offset":43632}}},{"type":"element","tagName":"a","properties":{"href":"#how-to-avoid-passing-callbacks-down"},"children":[{"type":"text","value":"pass ","position":{"start":{"line":910,"column":19,"offset":43633},"end":{"line":910,"column":24,"offset":43638}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">dispatch</code>","position":{"start":{"line":910,"column":24,"offset":43638},"end":{"line":910,"column":34,"offset":43648}}},{"type":"text","value":" down in context","position":{"start":{"line":910,"column":34,"offset":43648},"end":{"line":910,"column":50,"offset":43664}}}],"position":{"start":{"line":910,"column":18,"offset":43632},"end":{"line":910,"column":89,"offset":43703}}},{"type":"text","value":" rather than individual callbacks in props. The approach below is only mentioned here for completeness and as an escape hatch.","position":{"start":{"line":910,"column":89,"offset":43703},"end":{"line":910,"column":215,"offset":43829}}}],"position":{"start":{"line":910,"column":2,"offset":43616},"end":{"line":910,"column":215,"offset":43829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also note that this pattern might cause problems in the ","position":{"start":{"line":912,"column":2,"offset":43833},"end":{"line":912,"column":58,"offset":43889}}},{"type":"element","tagName":"a","properties":{"href":"/blog/2018/03/27/update-on-async-rendering.html"},"children":[{"type":"text","value":"concurrent mode","position":{"start":{"line":912,"column":59,"offset":43890},"end":{"line":912,"column":74,"offset":43905}}}],"position":{"start":{"line":912,"column":58,"offset":43889},"end":{"line":912,"column":124,"offset":43955}}},{"type":"text","value":". We plan to provide more ergonomic alternatives in the future, but the safest solution right now is to always invalidate the callback if some value it depends on changes.","position":{"start":{"line":912,"column":124,"offset":43955},"end":{"line":912,"column":295,"offset":44126}}}],"position":{"start":{"line":912,"column":2,"offset":43833},"end":{"line":912,"column":295,"offset":44126}}},{"type":"text","value":"\n"}],"position":{"start":{"line":908,"column":1,"offset":43607},"end":{"line":912,"column":295,"offset":44126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In some rare cases you might need to memoize a callback with ","position":{"start":{"line":914,"column":1,"offset":44128},"end":{"line":914,"column":62,"offset":44189}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-reference.html#usecallback"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">useCallback</code>","position":{"start":{"line":914,"column":63,"offset":44190},"end":{"line":914,"column":76,"offset":44203}}}],"position":{"start":{"line":914,"column":62,"offset":44189},"end":{"line":914,"column":117,"offset":44244}}},{"type":"text","value":" but the memoization doesn’t work very well because the inner function has to be re-created too often. If the function you’re memoizing is an event handler and isn’t used during rendering, you can use ","position":{"start":{"line":914,"column":117,"offset":44244},"end":{"line":914,"column":318,"offset":44445}}},{"type":"element","tagName":"a","properties":{"href":"#is-there-something-like-instance-variables"},"children":[{"type":"text","value":"ref as an instance variable","position":{"start":{"line":914,"column":319,"offset":44446},"end":{"line":914,"column":346,"offset":44473}}}],"position":{"start":{"line":914,"column":318,"offset":44445},"end":{"line":914,"column":392,"offset":44519}}},{"type":"text","value":", and save the last committed value into it manually:","position":{"start":{"line":914,"column":392,"offset":44519},"end":{"line":914,"column":445,"offset":44572}}}],"position":{"start":{"line":914,"column":1,"offset":44128},"end":{"line":914,"column":445,"offset":44572}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> updateText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> textRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    textRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Write it to the ref</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> handleSubmit <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentText <span class=\"token operator\">=</span> textRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Read it from the ref</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>currentText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>textRef<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Don't recreate handleSubmit like [text] would do</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpensiveTree</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":916,"column":1,"offset":44574},"end":{"line":937,"column":4,"offset":45112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a rather convoluted pattern but it shows that you can do this escape hatch optimization if you need it. It’s more bearable if you extract it to a custom Hook:","position":{"start":{"line":939,"column":1,"offset":45114},"end":{"line":939,"column":167,"offset":45280}}}],"position":{"start":{"line":939,"column":1,"offset":45114},"end":{"line":939,"column":167,"offset":45280}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> updateText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Will be memoized even if `text` changes:</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> handleSubmit <span class=\"token operator\">=</span> <span class=\"token function\">useEventCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpensiveTree</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useEventCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> dependencies</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call an event handler while rendering.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fn<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>dependencies<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fn <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":941,"column":1,"offset":45282},"end":{"line":971,"column":4,"offset":45951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In either case, we ","position":{"start":{"line":973,"column":1,"offset":45953},"end":{"line":973,"column":20,"offset":45972}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"don’t recommend this pattern","position":{"start":{"line":973,"column":22,"offset":45974},"end":{"line":973,"column":50,"offset":46002}}}],"position":{"start":{"line":973,"column":20,"offset":45972},"end":{"line":973,"column":52,"offset":46004}}},{"type":"text","value":" and only show it here for completeness. Instead, it is preferable to ","position":{"start":{"line":973,"column":52,"offset":46004},"end":{"line":973,"column":122,"offset":46074}}},{"type":"element","tagName":"a","properties":{"href":"#how-to-avoid-passing-callbacks-down"},"children":[{"type":"text","value":"avoid passing callbacks deep down","position":{"start":{"line":973,"column":123,"offset":46075},"end":{"line":973,"column":156,"offset":46108}}}],"position":{"start":{"line":973,"column":122,"offset":46074},"end":{"line":973,"column":195,"offset":46147}}},{"type":"text","value":".","position":{"start":{"line":973,"column":195,"offset":46147},"end":{"line":973,"column":196,"offset":46148}}}],"position":{"start":{"line":973,"column":1,"offset":45953},"end":{"line":973,"column":196,"offset":46148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"under-the-hood"},"children":[{"type":"element","tagName":"a","properties":{"href":"#under-the-hood","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Under the Hood ","position":{"start":{"line":976,"column":4,"offset":46154},"end":{"line":976,"column":36,"offset":46186}}}],"position":{"start":{"line":976,"column":1,"offset":46151},"end":{"line":976,"column":36,"offset":46186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"how-does-react-associate-hook-calls-with-components"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-does-react-associate-hook-calls-with-components","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"How does React associate Hook calls with components? ","position":{"start":{"line":978,"column":5,"offset":46192},"end":{"line":978,"column":112,"offset":46299}}}],"position":{"start":{"line":978,"column":1,"offset":46188},"end":{"line":978,"column":112,"offset":46299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"React keeps track of the currently rendering component. Thanks to the ","position":{"start":{"line":980,"column":1,"offset":46301},"end":{"line":980,"column":71,"offset":46371}}},{"type":"element","tagName":"a","properties":{"href":"/docs/hooks-rules.html"},"children":[{"type":"text","value":"Rules of Hooks","position":{"start":{"line":980,"column":72,"offset":46372},"end":{"line":980,"column":86,"offset":46386}}}],"position":{"start":{"line":980,"column":71,"offset":46371},"end":{"line":980,"column":111,"offset":46411}}},{"type":"text","value":", we know that Hooks are only called from React components (or custom Hooks — which are also only called from React components).","position":{"start":{"line":980,"column":111,"offset":46411},"end":{"line":980,"column":240,"offset":46540}}}],"position":{"start":{"line":980,"column":1,"offset":46301},"end":{"line":980,"column":240,"offset":46540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There is an internal list of “memory cells” associated with each component. They’re just JavaScript objects where we can put some data. When you call a Hook like ","position":{"start":{"line":982,"column":1,"offset":46542},"end":{"line":982,"column":163,"offset":46704}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState()</code>","position":{"start":{"line":982,"column":163,"offset":46704},"end":{"line":982,"column":175,"offset":46716}}},{"type":"text","value":", it reads the current cell (or initializes it during the first render), and then moves the pointer to the next one. This is how multiple ","position":{"start":{"line":982,"column":175,"offset":46716},"end":{"line":982,"column":313,"offset":46854}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">useState()</code>","position":{"start":{"line":982,"column":313,"offset":46854},"end":{"line":982,"column":325,"offset":46866}}},{"type":"text","value":" calls each get independent local state.","position":{"start":{"line":982,"column":325,"offset":46866},"end":{"line":982,"column":365,"offset":46906}}}],"position":{"start":{"line":982,"column":1,"offset":46542},"end":{"line":982,"column":365,"offset":46906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"what-is-the-prior-art-for-hooks"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-is-the-prior-art-for-hooks","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What is the prior art for Hooks? ","position":{"start":{"line":984,"column":5,"offset":46912},"end":{"line":984,"column":72,"offset":46979}}}],"position":{"start":{"line":984,"column":1,"offset":46908},"end":{"line":984,"column":72,"offset":46979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hooks synthesize ideas from several different sources:","position":{"start":{"line":986,"column":1,"offset":46981},"end":{"line":986,"column":55,"offset":47035}}}],"position":{"start":{"line":986,"column":1,"offset":46981},"end":{"line":986,"column":55,"offset":47035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Our old experiments with functional APIs in the ","position":{"start":{"line":988,"column":3,"offset":47039},"end":{"line":988,"column":51,"offset":47087}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"react-future","position":{"start":{"line":988,"column":52,"offset":47088},"end":{"line":988,"column":64,"offset":47100}}}],"position":{"start":{"line":988,"column":51,"offset":47087},"end":{"line":988,"column":145,"offset":47181}}},{"type":"text","value":" repository.","position":{"start":{"line":988,"column":145,"offset":47181},"end":{"line":988,"column":157,"offset":47193}}}],"position":{"start":{"line":988,"column":1,"offset":47037},"end":{"line":988,"column":157,"offset":47193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"React community’s experiments with render prop APIs, including ","position":{"start":{"line":989,"column":3,"offset":47196},"end":{"line":989,"column":66,"offset":47259}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/ryanflorence","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Ryan Florence","position":{"start":{"line":989,"column":67,"offset":47260},"end":{"line":989,"column":80,"offset":47273}}}],"position":{"start":{"line":989,"column":66,"offset":47259},"end":{"line":989,"column":114,"offset":47307}}},{"type":"text","value":"’s ","position":{"start":{"line":989,"column":114,"offset":47307},"end":{"line":989,"column":117,"offset":47310}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/reactions/component","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Reactions Component","position":{"start":{"line":989,"column":118,"offset":47311},"end":{"line":989,"column":137,"offset":47330}}}],"position":{"start":{"line":989,"column":117,"offset":47310},"end":{"line":989,"column":178,"offset":47371}}},{"type":"text","value":".","position":{"start":{"line":989,"column":178,"offset":47371},"end":{"line":989,"column":179,"offset":47372}}}],"position":{"start":{"line":989,"column":1,"offset":47194},"end":{"line":989,"column":179,"offset":47372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/trueadm","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Dominic Gannaway","position":{"start":{"line":990,"column":4,"offset":47376},"end":{"line":990,"column":20,"offset":47392}}}],"position":{"start":{"line":990,"column":3,"offset":47375},"end":{"line":990,"column":49,"offset":47421}}},{"type":"text","value":"’s ","position":{"start":{"line":990,"column":49,"offset":47421},"end":{"line":990,"column":52,"offset":47424}}},{"type":"element","tagName":"a","properties":{"href":"https://gist.github.com/trueadm/17beb64288e30192f3aa29cad0218067","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">adopt</code>","position":{"start":{"line":990,"column":53,"offset":47425},"end":{"line":990,"column":60,"offset":47432}}},{"type":"text","value":" keyword","position":{"start":{"line":990,"column":60,"offset":47432},"end":{"line":990,"column":68,"offset":47440}}}],"position":{"start":{"line":990,"column":52,"offset":47424},"end":{"line":990,"column":135,"offset":47507}}},{"type":"text","value":" proposal as a sugar syntax for render props.","position":{"start":{"line":990,"column":135,"offset":47507},"end":{"line":990,"column":180,"offset":47552}}}],"position":{"start":{"line":990,"column":1,"offset":47373},"end":{"line":990,"column":180,"offset":47552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"State variables and state cells in ","position":{"start":{"line":991,"column":3,"offset":47555},"end":{"line":991,"column":38,"offset":47590}}},{"type":"element","tagName":"a","properties":{"href":"http://displayscript.org/introduction.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"DisplayScript","position":{"start":{"line":991,"column":39,"offset":47591},"end":{"line":991,"column":52,"offset":47604}}}],"position":{"start":{"line":991,"column":38,"offset":47590},"end":{"line":991,"column":97,"offset":47649}}},{"type":"text","value":".","position":{"start":{"line":991,"column":97,"offset":47649},"end":{"line":991,"column":98,"offset":47650}}}],"position":{"start":{"line":991,"column":1,"offset":47553},"end":{"line":991,"column":98,"offset":47650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://reasonml.github.io/reason-react/docs/en/state-actions-reducer.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Reducer components","position":{"start":{"line":992,"column":4,"offset":47654},"end":{"line":992,"column":22,"offset":47672}}}],"position":{"start":{"line":992,"column":3,"offset":47653},"end":{"line":992,"column":99,"offset":47749}}},{"type":"text","value":" in ReasonReact.","position":{"start":{"line":992,"column":99,"offset":47749},"end":{"line":992,"column":115,"offset":47765}}}],"position":{"start":{"line":992,"column":1,"offset":47651},"end":{"line":992,"column":115,"offset":47765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://reactivex.io/rxjs/class/es6/Subscription.js~Subscription.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Subscriptions","position":{"start":{"line":993,"column":4,"offset":47769},"end":{"line":993,"column":17,"offset":47782}}}],"position":{"start":{"line":993,"column":3,"offset":47768},"end":{"line":993,"column":88,"offset":47853}}},{"type":"text","value":" in Rx.","position":{"start":{"line":993,"column":88,"offset":47853},"end":{"line":993,"column":95,"offset":47860}}}],"position":{"start":{"line":993,"column":1,"offset":47766},"end":{"line":993,"column":95,"offset":47860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/ocamllabs/ocaml-effects-tutorial#2-effectful-computations-in-a-pure-setting","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Algebraic effects","position":{"start":{"line":994,"column":4,"offset":47864},"end":{"line":994,"column":21,"offset":47881}}}],"position":{"start":{"line":994,"column":3,"offset":47863},"end":{"line":994,"column":118,"offset":47978}}},{"type":"text","value":" in Multicore OCaml.","position":{"start":{"line":994,"column":118,"offset":47978},"end":{"line":994,"column":138,"offset":47998}}}],"position":{"start":{"line":994,"column":1,"offset":47861},"end":{"line":994,"column":138,"offset":47998}}},{"type":"text","value":"\n"}],"position":{"start":{"line":988,"column":1,"offset":47037},"end":{"line":994,"column":138,"offset":47998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/sebmarkbage","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Sebastian Markbåge","position":{"start":{"line":996,"column":2,"offset":48001},"end":{"line":996,"column":20,"offset":48019}}}],"position":{"start":{"line":996,"column":1,"offset":48000},"end":{"line":996,"column":53,"offset":48052}}},{"type":"text","value":" came up with the original design for Hooks, later refined by ","position":{"start":{"line":996,"column":53,"offset":48052},"end":{"line":996,"column":115,"offset":48114}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/acdlite","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Andrew Clark","position":{"start":{"line":996,"column":116,"offset":48115},"end":{"line":996,"column":128,"offset":48127}}}],"position":{"start":{"line":996,"column":115,"offset":48114},"end":{"line":996,"column":157,"offset":48156}}},{"type":"text","value":", ","position":{"start":{"line":996,"column":157,"offset":48156},"end":{"line":996,"column":159,"offset":48158}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/sophiebits","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Sophie Alpert","position":{"start":{"line":996,"column":160,"offset":48159},"end":{"line":996,"column":173,"offset":48172}}}],"position":{"start":{"line":996,"column":159,"offset":48158},"end":{"line":996,"column":205,"offset":48204}}},{"type":"text","value":", ","position":{"start":{"line":996,"column":205,"offset":48204},"end":{"line":996,"column":207,"offset":48206}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/trueadm","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Dominic Gannaway","position":{"start":{"line":996,"column":208,"offset":48207},"end":{"line":996,"column":224,"offset":48223}}}],"position":{"start":{"line":996,"column":207,"offset":48206},"end":{"line":996,"column":253,"offset":48252}}},{"type":"text","value":", and other members of the React team.","position":{"start":{"line":996,"column":253,"offset":48252},"end":{"line":996,"column":291,"offset":48290}}}],"position":{"start":{"line":996,"column":1,"offset":48000},"end":{"line":996,"column":291,"offset":48290}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":997,"column":1,"offset":48291}}}}