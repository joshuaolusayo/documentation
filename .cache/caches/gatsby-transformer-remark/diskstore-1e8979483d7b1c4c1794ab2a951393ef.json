{"expireTime":9007200851888157000,"key":"transformer-remark-markdown-html-ast-c6b506ff72408f6b650c86d590e97753-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fundamentally, JSX just provides syntactic sugar for the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.createElement(component, props, ...children)</code>","position":{"start":{"line":2,"column":58,"offset":58},"end":{"line":2,"column":110,"offset":110}}},{"type":"text","value":" function. The JSX code:","position":{"start":{"line":2,"column":110,"offset":110},"end":{"line":2,"column":134,"offset":134}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":134,"offset":134}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">shadowSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  Click Me\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyButton</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":4,"column":1,"offset":136},"end":{"line":8,"column":4,"offset":207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"compiles into:","position":{"start":{"line":10,"column":1,"offset":209},"end":{"line":10,"column":15,"offset":223}}}],"position":{"start":{"line":10,"column":1,"offset":209},"end":{"line":10,"column":15,"offset":223}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  MyButton<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> shadowSize<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Click Me'</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":12,"column":1,"offset":225},"end":{"line":18,"column":4,"offset":316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also use the self-closing form of the tag if there are no children. So:","position":{"start":{"line":20,"column":1,"offset":318},"end":{"line":20,"column":80,"offset":397}}}],"position":{"start":{"line":20,"column":1,"offset":318},"end":{"line":20,"column":80,"offset":397}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sidebar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>","position":{"start":{"line":22,"column":1,"offset":399},"end":{"line":24,"column":4,"offset":436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"compiles into:","position":{"start":{"line":26,"column":1,"offset":438},"end":{"line":26,"column":15,"offset":452}}}],"position":{"start":{"line":26,"column":1,"offset":438},"end":{"line":26,"column":15,"offset":452}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>className<span class=\"token operator\">:</span> <span class=\"token string\">'sidebar'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":28,"column":1,"offset":454},"end":{"line":33,"column":4,"offset":520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to test out how some specific JSX is converted into JavaScript, you can try out ","position":{"start":{"line":35,"column":1,"offset":522},"end":{"line":35,"column":93,"offset":614}}},{"type":"raw","value":"<a href=\"https://babeljs.io/repl/#?presets=react&code_lz=GYVwdgxgLglg9mABACwKYBt1wBQEpEDeAUIogE6pQhlIA8AJjAG4B8AEhlogO5xnr0AhLQD0jVgG4iAXyJA\" target=\"_blank\" rel=\"noreferrer\">the online Babel compiler</a>"},{"type":"text","value":".","position":{"start":{"line":35,"column":148,"offset":669},"end":{"line":35,"column":149,"offset":670}}}],"position":{"start":{"line":35,"column":1,"offset":522},"end":{"line":35,"column":149,"offset":670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"specifying-the-react-element-type"},"children":[{"type":"element","tagName":"a","properties":{"href":"#specifying-the-react-element-type","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Specifying The React Element Type ","position":{"start":{"line":37,"column":4,"offset":675},"end":{"line":37,"column":74,"offset":745}}}],"position":{"start":{"line":37,"column":1,"offset":672},"end":{"line":37,"column":74,"offset":745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first part of a JSX tag determines the type of the React element.","position":{"start":{"line":39,"column":1,"offset":747},"end":{"line":39,"column":70,"offset":816}}}],"position":{"start":{"line":39,"column":1,"offset":747},"end":{"line":39,"column":70,"offset":816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Capitalized types indicate that the JSX tag is referring to a React component. These tags get compiled into a direct reference to the named variable, so if you use the JSX ","position":{"start":{"line":41,"column":1,"offset":818},"end":{"line":41,"column":173,"offset":990}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;Foo /&gt;</code>","position":{"start":{"line":41,"column":173,"offset":990},"end":{"line":41,"column":182,"offset":999}}},{"type":"text","value":" expression, ","position":{"start":{"line":41,"column":182,"offset":999},"end":{"line":41,"column":195,"offset":1012}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">Foo</code>","position":{"start":{"line":41,"column":195,"offset":1012},"end":{"line":41,"column":200,"offset":1017}}},{"type":"text","value":" must be in scope.","position":{"start":{"line":41,"column":200,"offset":1017},"end":{"line":41,"column":218,"offset":1035}}}],"position":{"start":{"line":41,"column":1,"offset":818},"end":{"line":41,"column":218,"offset":1035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"react-must-be-in-scope"},"children":[{"type":"element","tagName":"a","properties":{"href":"#react-must-be-in-scope","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"React Must Be in Scope ","position":{"start":{"line":43,"column":5,"offset":1041},"end":{"line":43,"column":53,"offset":1089}}}],"position":{"start":{"line":43,"column":1,"offset":1037},"end":{"line":43,"column":53,"offset":1089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since JSX compiles into calls to ","position":{"start":{"line":45,"column":1,"offset":1091},"end":{"line":45,"column":34,"offset":1124}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.createElement</code>","position":{"start":{"line":45,"column":34,"offset":1124},"end":{"line":45,"column":55,"offset":1145}}},{"type":"text","value":", the ","position":{"start":{"line":45,"column":55,"offset":1145},"end":{"line":45,"column":61,"offset":1151}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React</code>","position":{"start":{"line":45,"column":61,"offset":1151},"end":{"line":45,"column":68,"offset":1158}}},{"type":"text","value":" library must also always be in scope from your JSX code.","position":{"start":{"line":45,"column":68,"offset":1158},"end":{"line":45,"column":125,"offset":1215}}}],"position":{"start":{"line":45,"column":1,"offset":1091},"end":{"line":45,"column":125,"offset":1215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, both of the imports are necessary in this code, even though ","position":{"start":{"line":47,"column":1,"offset":1217},"end":{"line":47,"column":74,"offset":1290}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React</code>","position":{"start":{"line":47,"column":74,"offset":1290},"end":{"line":47,"column":81,"offset":1297}}},{"type":"text","value":" and ","position":{"start":{"line":47,"column":81,"offset":1297},"end":{"line":47,"column":86,"offset":1302}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">CustomButton</code>","position":{"start":{"line":47,"column":86,"offset":1302},"end":{"line":47,"column":100,"offset":1316}}},{"type":"text","value":" are not directly referenced from JavaScript:","position":{"start":{"line":47,"column":100,"offset":1316},"end":{"line":47,"column":145,"offset":1361}}}],"position":{"start":{"line":47,"column":1,"offset":1217},"end":{"line":47,"column":145,"offset":1361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> CustomButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./CustomButton'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">WarningButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// return React.createElement(CustomButton, {color: 'red'}, null);</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":49,"column":1,"offset":1363},"end":{"line":57,"column":4,"offset":1587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you don’t use a JavaScript bundler and loaded React from a ","position":{"start":{"line":59,"column":1,"offset":1589},"end":{"line":59,"column":63,"offset":1651}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;script&gt;</code>","position":{"start":{"line":59,"column":63,"offset":1651},"end":{"line":59,"column":73,"offset":1661}}},{"type":"text","value":" tag, it is already in scope as the ","position":{"start":{"line":59,"column":73,"offset":1661},"end":{"line":59,"column":109,"offset":1697}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React</code>","position":{"start":{"line":59,"column":109,"offset":1697},"end":{"line":59,"column":116,"offset":1704}}},{"type":"text","value":" global.","position":{"start":{"line":59,"column":116,"offset":1704},"end":{"line":59,"column":124,"offset":1712}}}],"position":{"start":{"line":59,"column":1,"offset":1589},"end":{"line":59,"column":124,"offset":1712}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"using-dot-notation-for-jsx-type"},"children":[{"type":"element","tagName":"a","properties":{"href":"#using-dot-notation-for-jsx-type","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Using Dot Notation for JSX Type ","position":{"start":{"line":61,"column":5,"offset":1718},"end":{"line":61,"column":71,"offset":1784}}}],"position":{"start":{"line":61,"column":1,"offset":1714},"end":{"line":61,"column":71,"offset":1784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also refer to a React component using dot-notation from within JSX. This is convenient if you have a single module that exports many React components. For example, if ","position":{"start":{"line":63,"column":1,"offset":1786},"end":{"line":63,"column":176,"offset":1961}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">MyComponents.DatePicker</code>","position":{"start":{"line":63,"column":176,"offset":1961},"end":{"line":63,"column":201,"offset":1986}}},{"type":"text","value":" is a component, you can use it directly from JSX with:","position":{"start":{"line":63,"column":201,"offset":1986},"end":{"line":63,"column":256,"offset":2041}}}],"position":{"start":{"line":63,"column":1,"offset":1786},"end":{"line":63,"column":256,"offset":2041}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MyComponents <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">DatePicker</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DatePicker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Imagine a </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> datepicker here.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlueDatePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponents.DatePicker</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":65,"column":1,"offset":2043},"end":{"line":77,"column":4,"offset":2302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"user-defined-components-must-be-capitalized"},"children":[{"type":"element","tagName":"a","properties":{"href":"#user-defined-components-must-be-capitalized","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"User-Defined Components Must Be Capitalized ","position":{"start":{"line":79,"column":5,"offset":2308},"end":{"line":79,"column":95,"offset":2398}}}],"position":{"start":{"line":79,"column":1,"offset":2304},"end":{"line":79,"column":95,"offset":2398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When an element type starts with a lowercase letter, it refers to a built-in component like ","position":{"start":{"line":81,"column":1,"offset":2400},"end":{"line":81,"column":93,"offset":2492}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;div&gt;</code>","position":{"start":{"line":81,"column":93,"offset":2492},"end":{"line":81,"column":100,"offset":2499}}},{"type":"text","value":" or ","position":{"start":{"line":81,"column":100,"offset":2499},"end":{"line":81,"column":104,"offset":2503}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;span&gt;</code>","position":{"start":{"line":81,"column":104,"offset":2503},"end":{"line":81,"column":112,"offset":2511}}},{"type":"text","value":" and results in a string ","position":{"start":{"line":81,"column":112,"offset":2511},"end":{"line":81,"column":137,"offset":2536}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&#39;div&#39;</code>","position":{"start":{"line":81,"column":137,"offset":2536},"end":{"line":81,"column":144,"offset":2543}}},{"type":"text","value":" or ","position":{"start":{"line":81,"column":144,"offset":2543},"end":{"line":81,"column":148,"offset":2547}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&#39;span&#39;</code>","position":{"start":{"line":81,"column":148,"offset":2547},"end":{"line":81,"column":156,"offset":2555}}},{"type":"text","value":" passed to ","position":{"start":{"line":81,"column":156,"offset":2555},"end":{"line":81,"column":167,"offset":2566}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.createElement</code>","position":{"start":{"line":81,"column":167,"offset":2566},"end":{"line":81,"column":188,"offset":2587}}},{"type":"text","value":". Types that start with a capital letter like ","position":{"start":{"line":81,"column":188,"offset":2587},"end":{"line":81,"column":234,"offset":2633}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;Foo /&gt;</code>","position":{"start":{"line":81,"column":234,"offset":2633},"end":{"line":81,"column":243,"offset":2642}}},{"type":"text","value":" compile to ","position":{"start":{"line":81,"column":243,"offset":2642},"end":{"line":81,"column":255,"offset":2654}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">React.createElement(Foo)</code>","position":{"start":{"line":81,"column":255,"offset":2654},"end":{"line":81,"column":281,"offset":2680}}},{"type":"text","value":" and correspond to a component defined or imported in your JavaScript file.","position":{"start":{"line":81,"column":281,"offset":2680},"end":{"line":81,"column":356,"offset":2755}}}],"position":{"start":{"line":81,"column":1,"offset":2400},"end":{"line":81,"column":356,"offset":2755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We recommend naming components with a capital letter. If you do have a component that starts with a lowercase letter, assign it to a capitalized variable before using it in JSX.","position":{"start":{"line":83,"column":1,"offset":2757},"end":{"line":83,"column":178,"offset":2934}}}],"position":{"start":{"line":83,"column":1,"offset":2757},"end":{"line":83,"column":178,"offset":2934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, this code will not run as expected:","position":{"start":{"line":85,"column":1,"offset":2936},"end":{"line":85,"column":49,"offset":2984}}}],"position":{"start":{"line":85,"column":1,"offset":2936},"end":{"line":85,"column":49,"offset":2984}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Wrong! This is a component and should have been capitalized:</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// Correct! This use of &lt;div> is legitimate because div is a valid HTML tag:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Wrong! React thinks &lt;hello /> is an HTML tag because it's not capitalized:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hello</span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":87,"column":1,"offset":2986},"end":{"line":100,"column":4,"offset":3387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To fix this, we will rename ","position":{"start":{"line":102,"column":1,"offset":3389},"end":{"line":102,"column":29,"offset":3417}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">hello</code>","position":{"start":{"line":102,"column":29,"offset":3417},"end":{"line":102,"column":36,"offset":3424}}},{"type":"text","value":" to ","position":{"start":{"line":102,"column":36,"offset":3424},"end":{"line":102,"column":40,"offset":3428}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">Hello</code>","position":{"start":{"line":102,"column":40,"offset":3428},"end":{"line":102,"column":47,"offset":3435}}},{"type":"text","value":" and use ","position":{"start":{"line":102,"column":47,"offset":3435},"end":{"line":102,"column":56,"offset":3444}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;Hello /&gt;</code>","position":{"start":{"line":102,"column":56,"offset":3444},"end":{"line":102,"column":67,"offset":3455}}},{"type":"text","value":" when referring to it:","position":{"start":{"line":102,"column":67,"offset":3455},"end":{"line":102,"column":89,"offset":3477}}}],"position":{"start":{"line":102,"column":1,"offset":3389},"end":{"line":102,"column":89,"offset":3477}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Correct! This is a component and should be capitalized:</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// Correct! This use of &lt;div> is legitimate because div is a valid HTML tag:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Correct! React knows &lt;Hello /> is a component because it's capitalized.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":104,"column":1,"offset":3479},"end":{"line":117,"column":4,"offset":3872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"choosing-the-type-at-runtime"},"children":[{"type":"element","tagName":"a","properties":{"href":"#choosing-the-type-at-runtime","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Choosing the Type at Runtime ","position":{"start":{"line":119,"column":5,"offset":3878},"end":{"line":119,"column":65,"offset":3938}}}],"position":{"start":{"line":119,"column":1,"offset":3874},"end":{"line":119,"column":65,"offset":3938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You cannot use a general expression as the React element type. If you do want to use a general expression to indicate the type of the element, just assign it to a capitalized variable first. This often comes up when you want to render a different component based on a prop:","position":{"start":{"line":121,"column":1,"offset":3940},"end":{"line":121,"column":274,"offset":4213}}}],"position":{"start":{"line":121,"column":1,"offset":3940},"end":{"line":121,"column":274,"offset":4213}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhotoStory<span class=\"token punctuation\">,</span> VideoStory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./stories'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  photo<span class=\"token operator\">:</span> PhotoStory<span class=\"token punctuation\">,</span>\n  video<span class=\"token operator\">:</span> VideoStory\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Story</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Wrong! JSX type can't be an expression.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>components<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>storyType<span class=\"token punctuation\">]</span> story<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":123,"column":1,"offset":4215},"end":{"line":136,"column":4,"offset":4510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To fix this, we will assign the type to a capitalized variable first:","position":{"start":{"line":138,"column":1,"offset":4512},"end":{"line":138,"column":70,"offset":4581}}}],"position":{"start":{"line":138,"column":1,"offset":4512},"end":{"line":138,"column":70,"offset":4581}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhotoStory<span class=\"token punctuation\">,</span> VideoStory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./stories'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  photo<span class=\"token operator\">:</span> PhotoStory<span class=\"token punctuation\">,</span>\n  video<span class=\"token operator\">:</span> VideoStory\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Story</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Correct! JSX type can be a capitalized variable.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> SpecificStory <span class=\"token operator\">=</span> components<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>storyType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SpecificStory</span></span> <span class=\"token attr-name\">story</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":140,"column":1,"offset":4583},"end":{"line":154,"column":4,"offset":4926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"props-in-jsx"},"children":[{"type":"element","tagName":"a","properties":{"href":"#props-in-jsx","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Props in JSX ","position":{"start":{"line":156,"column":4,"offset":4931},"end":{"line":156,"column":32,"offset":4959}}}],"position":{"start":{"line":156,"column":1,"offset":4928},"end":{"line":156,"column":32,"offset":4959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are several different ways to specify props in JSX.","position":{"start":{"line":158,"column":1,"offset":4961},"end":{"line":158,"column":58,"offset":5018}}}],"position":{"start":{"line":158,"column":1,"offset":4961},"end":{"line":158,"column":58,"offset":5018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"javascript-expressions-as-props"},"children":[{"type":"element","tagName":"a","properties":{"href":"#javascript-expressions-as-props","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JavaScript Expressions as Props ","position":{"start":{"line":160,"column":5,"offset":5024},"end":{"line":160,"column":71,"offset":5090}}}],"position":{"start":{"line":160,"column":1,"offset":5020},"end":{"line":160,"column":71,"offset":5090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can pass any JavaScript expression as a prop, by surrounding it with ","position":{"start":{"line":162,"column":1,"offset":5092},"end":{"line":162,"column":74,"offset":5165}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">{}</code>","position":{"start":{"line":162,"column":74,"offset":5165},"end":{"line":162,"column":78,"offset":5169}}},{"type":"text","value":". For example, in this JSX:","position":{"start":{"line":162,"column":78,"offset":5169},"end":{"line":162,"column":105,"offset":5196}}}],"position":{"start":{"line":162,"column":1,"offset":5092},"end":{"line":162,"column":105,"offset":5196}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">foo</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>","position":{"start":{"line":164,"column":1,"offset":5198},"end":{"line":166,"column":4,"offset":5243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For ","position":{"start":{"line":168,"column":1,"offset":5245},"end":{"line":168,"column":5,"offset":5249}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">MyComponent</code>","position":{"start":{"line":168,"column":5,"offset":5249},"end":{"line":168,"column":18,"offset":5262}}},{"type":"text","value":", the value of ","position":{"start":{"line":168,"column":18,"offset":5262},"end":{"line":168,"column":33,"offset":5277}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.foo</code>","position":{"start":{"line":168,"column":33,"offset":5277},"end":{"line":168,"column":44,"offset":5288}}},{"type":"text","value":" will be ","position":{"start":{"line":168,"column":44,"offset":5288},"end":{"line":168,"column":53,"offset":5297}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">10</code>","position":{"start":{"line":168,"column":53,"offset":5297},"end":{"line":168,"column":57,"offset":5301}}},{"type":"text","value":" because the expression ","position":{"start":{"line":168,"column":57,"offset":5301},"end":{"line":168,"column":81,"offset":5325}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">1 + 2 + 3 + 4</code>","position":{"start":{"line":168,"column":81,"offset":5325},"end":{"line":168,"column":96,"offset":5340}}},{"type":"text","value":" gets evaluated.","position":{"start":{"line":168,"column":96,"offset":5340},"end":{"line":168,"column":112,"offset":5356}}}],"position":{"start":{"line":168,"column":1,"offset":5245},"end":{"line":168,"column":112,"offset":5356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">if</code>","position":{"start":{"line":170,"column":1,"offset":5358},"end":{"line":170,"column":5,"offset":5362}}},{"type":"text","value":" statements and ","position":{"start":{"line":170,"column":5,"offset":5362},"end":{"line":170,"column":21,"offset":5378}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">for</code>","position":{"start":{"line":170,"column":21,"offset":5378},"end":{"line":170,"column":26,"offset":5383}}},{"type":"text","value":" loops are not expressions in JavaScript, so they can’t be used in JSX directly. Instead, you can put these in the surrounding code. For example:","position":{"start":{"line":170,"column":26,"offset":5383},"end":{"line":170,"column":171,"offset":5528}}}],"position":{"start":{"line":170,"column":1,"offset":5358},"end":{"line":170,"column":171,"offset":5528}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberDescriber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> description<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    description <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">even</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    description <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">odd</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> is an </span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> number</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":172,"column":1,"offset":5530},"end":{"line":182,"column":4,"offset":5779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can learn more about ","position":{"start":{"line":184,"column":1,"offset":5781},"end":{"line":184,"column":26,"offset":5806}}},{"type":"element","tagName":"a","properties":{"href":"/docs/conditional-rendering.html"},"children":[{"type":"text","value":"conditional rendering","position":{"start":{"line":184,"column":27,"offset":5807},"end":{"line":184,"column":48,"offset":5828}}}],"position":{"start":{"line":184,"column":26,"offset":5806},"end":{"line":184,"column":83,"offset":5863}}},{"type":"text","value":" and ","position":{"start":{"line":184,"column":83,"offset":5863},"end":{"line":184,"column":88,"offset":5868}}},{"type":"element","tagName":"a","properties":{"href":"/docs/lists-and-keys.html"},"children":[{"type":"text","value":"loops","position":{"start":{"line":184,"column":89,"offset":5869},"end":{"line":184,"column":94,"offset":5874}}}],"position":{"start":{"line":184,"column":88,"offset":5868},"end":{"line":184,"column":122,"offset":5902}}},{"type":"text","value":" in the corresponding sections.","position":{"start":{"line":184,"column":122,"offset":5902},"end":{"line":184,"column":153,"offset":5933}}}],"position":{"start":{"line":184,"column":1,"offset":5781},"end":{"line":184,"column":153,"offset":5933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"string-literals"},"children":[{"type":"element","tagName":"a","properties":{"href":"#string-literals","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"String Literals ","position":{"start":{"line":186,"column":5,"offset":5939},"end":{"line":186,"column":39,"offset":5973}}}],"position":{"start":{"line":186,"column":1,"offset":5935},"end":{"line":186,"column":39,"offset":5973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can pass a string literal as a prop. These two JSX expressions are equivalent:","position":{"start":{"line":188,"column":1,"offset":5975},"end":{"line":188,"column":83,"offset":6057}}}],"position":{"start":{"line":188,"column":1,"offset":5975},"end":{"line":188,"column":83,"offset":6057}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello world<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>","position":{"start":{"line":190,"column":1,"offset":6059},"end":{"line":194,"column":4,"offset":6147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you pass a string literal, its value is HTML-unescaped. So these two JSX expressions are equivalent:","position":{"start":{"line":196,"column":1,"offset":6149},"end":{"line":196,"column":106,"offset":6254}}}],"position":{"start":{"line":196,"column":1,"offset":6149},"end":{"line":196,"column":106,"offset":6254}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>3<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'&lt;3'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>","position":{"start":{"line":198,"column":1,"offset":6256},"end":{"line":202,"column":4,"offset":6329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This behavior is usually not relevant. It’s only mentioned here for completeness.","position":{"start":{"line":204,"column":1,"offset":6331},"end":{"line":204,"column":82,"offset":6412}}}],"position":{"start":{"line":204,"column":1,"offset":6331},"end":{"line":204,"column":82,"offset":6412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"props-default-to-true"},"children":[{"type":"element","tagName":"a","properties":{"href":"#props-default-to-true","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Props Default to “True” ","position":{"start":{"line":206,"column":5,"offset":6418},"end":{"line":206,"column":53,"offset":6466}}}],"position":{"start":{"line":206,"column":1,"offset":6414},"end":{"line":206,"column":53,"offset":6466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you pass no value for a prop, it defaults to ","position":{"start":{"line":208,"column":1,"offset":6468},"end":{"line":208,"column":49,"offset":6516}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">true</code>","position":{"start":{"line":208,"column":49,"offset":6516},"end":{"line":208,"column":55,"offset":6522}}},{"type":"text","value":". These two JSX expressions are equivalent:","position":{"start":{"line":208,"column":55,"offset":6522},"end":{"line":208,"column":98,"offset":6565}}}],"position":{"start":{"line":208,"column":1,"offset":6468},"end":{"line":208,"column":98,"offset":6565}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyTextBox</span></span> <span class=\"token attr-name\">autocomplete</span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyTextBox</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>","position":{"start":{"line":210,"column":1,"offset":6567},"end":{"line":214,"column":4,"offset":6638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In general, we don’t recommend ","position":{"start":{"line":216,"column":1,"offset":6640},"end":{"line":216,"column":32,"offset":6671}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":216,"column":33,"offset":6672},"end":{"line":216,"column":36,"offset":6675}}}],"position":{"start":{"line":216,"column":32,"offset":6671},"end":{"line":216,"column":37,"offset":6676}}},{"type":"text","value":" passing a value for a prop, because it can be confused with the ","position":{"start":{"line":216,"column":37,"offset":6676},"end":{"line":216,"column":102,"offset":6741}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#New_notations_in_ECMAScript_2015","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"ES6 object shorthand","position":{"start":{"line":216,"column":103,"offset":6742},"end":{"line":216,"column":123,"offset":6762}}}],"position":{"start":{"line":216,"column":102,"offset":6741},"end":{"line":216,"column":250,"offset":6889}}},{"type":"text","value":" ","position":{"start":{"line":216,"column":250,"offset":6889},"end":{"line":216,"column":251,"offset":6890}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">{foo}</code>","position":{"start":{"line":216,"column":251,"offset":6890},"end":{"line":216,"column":258,"offset":6897}}},{"type":"text","value":" which is short for ","position":{"start":{"line":216,"column":258,"offset":6897},"end":{"line":216,"column":278,"offset":6917}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">{foo: foo}</code>","position":{"start":{"line":216,"column":278,"offset":6917},"end":{"line":216,"column":290,"offset":6929}}},{"type":"text","value":" rather than ","position":{"start":{"line":216,"column":290,"offset":6929},"end":{"line":216,"column":303,"offset":6942}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">{foo: true}</code>","position":{"start":{"line":216,"column":303,"offset":6942},"end":{"line":216,"column":316,"offset":6955}}},{"type":"text","value":". This behavior is just there so that it matches the behavior of HTML.","position":{"start":{"line":216,"column":316,"offset":6955},"end":{"line":216,"column":386,"offset":7025}}}],"position":{"start":{"line":216,"column":1,"offset":6640},"end":{"line":216,"column":386,"offset":7025}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"spread-attributes"},"children":[{"type":"element","tagName":"a","properties":{"href":"#spread-attributes","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Spread Attributes ","position":{"start":{"line":218,"column":5,"offset":7031},"end":{"line":218,"column":43,"offset":7069}}}],"position":{"start":{"line":218,"column":1,"offset":7027},"end":{"line":218,"column":43,"offset":7069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you already have ","position":{"start":{"line":220,"column":1,"offset":7071},"end":{"line":220,"column":21,"offset":7091}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props</code>","position":{"start":{"line":220,"column":21,"offset":7091},"end":{"line":220,"column":28,"offset":7098}}},{"type":"text","value":" as an object, and you want to pass it in JSX, you can use ","position":{"start":{"line":220,"column":28,"offset":7098},"end":{"line":220,"column":87,"offset":7157}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">...</code>","position":{"start":{"line":220,"column":87,"offset":7157},"end":{"line":220,"column":92,"offset":7162}}},{"type":"text","value":" as a “spread” operator to pass the whole props object. These two components are equivalent:","position":{"start":{"line":220,"column":92,"offset":7162},"end":{"line":220,"column":184,"offset":7254}}}],"position":{"start":{"line":220,"column":1,"offset":7071},"end":{"line":220,"column":184,"offset":7254}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">App1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">firstName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Ben<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lastName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Hector<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Ben'</span><span class=\"token punctuation\">,</span> lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Hector'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":222,"column":1,"offset":7256},"end":{"line":231,"column":4,"offset":7456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also pick specific props that your component will consume while passing all other props using the spread operator.","position":{"start":{"line":233,"column":1,"offset":7458},"end":{"line":233,"column":123,"offset":7580}}}],"position":{"start":{"line":233,"column":1,"offset":7458},"end":{"line":233,"column":123,"offset":7580}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Button</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> kind<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>other <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> className <span class=\"token operator\">=</span> kind <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"PrimaryButton\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"SecondaryButton\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">other</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">kind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clicked!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Hello World!</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":235,"column":1,"offset":7582},"end":{"line":251,"column":4,"offset":7959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the example above, the ","position":{"start":{"line":253,"column":1,"offset":7961},"end":{"line":253,"column":27,"offset":7987}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">kind</code>","position":{"start":{"line":253,"column":27,"offset":7987},"end":{"line":253,"column":33,"offset":7993}}},{"type":"text","value":" prop is safely consumed and ","position":{"start":{"line":253,"column":33,"offset":7993},"end":{"line":253,"column":62,"offset":8022}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"is not","position":{"start":{"line":253,"column":63,"offset":8023},"end":{"line":253,"column":69,"offset":8029}}}],"position":{"start":{"line":253,"column":62,"offset":8022},"end":{"line":253,"column":70,"offset":8030}}},{"type":"text","value":" passed on to the ","position":{"start":{"line":253,"column":70,"offset":8030},"end":{"line":253,"column":88,"offset":8048}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;button&gt;</code>","position":{"start":{"line":253,"column":88,"offset":8048},"end":{"line":253,"column":98,"offset":8058}}},{"type":"text","value":" element in the DOM.\nAll other props are passed via the ","position":{"start":{"line":253,"column":98,"offset":8058},"end":{"line":254,"column":36,"offset":8114}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">...other</code>","position":{"start":{"line":254,"column":36,"offset":8114},"end":{"line":254,"column":46,"offset":8124}}},{"type":"text","value":" object making this component really flexible. You can see that it passes an ","position":{"start":{"line":254,"column":46,"offset":8124},"end":{"line":254,"column":123,"offset":8201}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">onClick</code>","position":{"start":{"line":254,"column":123,"offset":8201},"end":{"line":254,"column":132,"offset":8210}}},{"type":"text","value":" and ","position":{"start":{"line":254,"column":132,"offset":8210},"end":{"line":254,"column":137,"offset":8215}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">children</code>","position":{"start":{"line":254,"column":137,"offset":8215},"end":{"line":254,"column":147,"offset":8225}}},{"type":"text","value":" props.","position":{"start":{"line":254,"column":147,"offset":8225},"end":{"line":254,"column":154,"offset":8232}}}],"position":{"start":{"line":253,"column":1,"offset":7961},"end":{"line":254,"column":154,"offset":8232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Spread attributes can be useful but they also make it easy to pass unnecessary props to components that don’t care about them or to pass invalid HTML attributes to the DOM. We recommend using this syntax sparingly.  ","position":{"start":{"line":256,"column":1,"offset":8234},"end":{"line":256,"column":217,"offset":8450}}}],"position":{"start":{"line":256,"column":1,"offset":8234},"end":{"line":256,"column":217,"offset":8450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"children-in-jsx"},"children":[{"type":"element","tagName":"a","properties":{"href":"#children-in-jsx","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Children in JSX ","position":{"start":{"line":258,"column":4,"offset":8455},"end":{"line":258,"column":38,"offset":8489}}}],"position":{"start":{"line":258,"column":1,"offset":8452},"end":{"line":258,"column":38,"offset":8489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In JSX expressions that contain both an opening tag and a closing tag, the content between those tags is passed as a special prop: ","position":{"start":{"line":260,"column":1,"offset":8491},"end":{"line":260,"column":132,"offset":8622}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.children</code>","position":{"start":{"line":260,"column":132,"offset":8622},"end":{"line":260,"column":148,"offset":8638}}},{"type":"text","value":". There are several different ways to pass children:","position":{"start":{"line":260,"column":148,"offset":8638},"end":{"line":260,"column":200,"offset":8690}}}],"position":{"start":{"line":260,"column":1,"offset":8491},"end":{"line":260,"column":200,"offset":8690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"string-literals-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#string-literals-1","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"String Literals ","position":{"start":{"line":262,"column":5,"offset":8696},"end":{"line":262,"column":41,"offset":8732}}}],"position":{"start":{"line":262,"column":1,"offset":8692},"end":{"line":262,"column":41,"offset":8732}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can put a string between the opening and closing tags and ","position":{"start":{"line":264,"column":1,"offset":8734},"end":{"line":264,"column":63,"offset":8796}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.children</code>","position":{"start":{"line":264,"column":63,"offset":8796},"end":{"line":264,"column":79,"offset":8812}}},{"type":"text","value":" will just be that string. This is useful for many of the built-in HTML elements. For example:","position":{"start":{"line":264,"column":79,"offset":8812},"end":{"line":264,"column":173,"offset":8906}}}],"position":{"start":{"line":264,"column":1,"offset":8734},"end":{"line":264,"column":173,"offset":8906}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":266,"column":1,"offset":8908},"end":{"line":268,"column":4,"offset":8957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is valid JSX, and ","position":{"start":{"line":270,"column":1,"offset":8959},"end":{"line":270,"column":24,"offset":8982}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.children</code>","position":{"start":{"line":270,"column":24,"offset":8982},"end":{"line":270,"column":40,"offset":8998}}},{"type":"text","value":" in ","position":{"start":{"line":270,"column":40,"offset":8998},"end":{"line":270,"column":44,"offset":9002}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">MyComponent</code>","position":{"start":{"line":270,"column":44,"offset":9002},"end":{"line":270,"column":57,"offset":9015}}},{"type":"text","value":" will simply be the string ","position":{"start":{"line":270,"column":57,"offset":9015},"end":{"line":270,"column":84,"offset":9042}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&quot;Hello world!&quot;</code>","position":{"start":{"line":270,"column":84,"offset":9042},"end":{"line":270,"column":100,"offset":9058}}},{"type":"text","value":". HTML is unescaped, so you can generally write JSX just like you would write HTML in this way:","position":{"start":{"line":270,"column":100,"offset":9058},"end":{"line":270,"column":195,"offset":9153}}}],"position":{"start":{"line":270,"column":1,"offset":8959},"end":{"line":270,"column":195,"offset":9153}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>This is valid HTML <span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span> JSX at the same time.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":272,"column":1,"offset":9155},"end":{"line":274,"column":4,"offset":9224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JSX removes whitespace at the beginning and ending of a line. It also removes blank lines. New lines adjacent to tags are removed; new lines that occur in the middle of string literals are condensed into a single space. So these all render to the same thing:","position":{"start":{"line":276,"column":1,"offset":9226},"end":{"line":276,"column":259,"offset":9484}}}],"position":{"start":{"line":276,"column":1,"offset":9226},"end":{"line":276,"column":259,"offset":9484}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello World</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  Hello World\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  Hello\n  World\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n  Hello World\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":278,"column":1,"offset":9486},"end":{"line":294,"column":4,"offset":9605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"jsx-children"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jsx-children","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JSX Children ","position":{"start":{"line":296,"column":5,"offset":9611},"end":{"line":296,"column":33,"offset":9639}}}],"position":{"start":{"line":296,"column":1,"offset":9607},"end":{"line":296,"column":33,"offset":9639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can provide more JSX elements as the children. This is useful for displaying nested components:","position":{"start":{"line":298,"column":1,"offset":9641},"end":{"line":298,"column":100,"offset":9740}}}],"position":{"start":{"line":298,"column":1,"offset":9641},"end":{"line":298,"column":100,"offset":9740}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyFirstComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MySecondComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContainer</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":300,"column":1,"offset":9742},"end":{"line":305,"column":4,"offset":9827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can mix together different types of children, so you can use string literals together with JSX children. This is another way in which JSX is like HTML, so that this is both valid JSX and valid HTML:","position":{"start":{"line":307,"column":1,"offset":9829},"end":{"line":307,"column":203,"offset":10031}}}],"position":{"start":{"line":307,"column":1,"offset":9829},"end":{"line":307,"column":203,"offset":10031}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  Here is a list:\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":309,"column":1,"offset":10033},"end":{"line":317,"column":4,"offset":10130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A React component can also return an array of elements:","position":{"start":{"line":319,"column":1,"offset":10132},"end":{"line":319,"column":56,"offset":10187}}}],"position":{"start":{"line":319,"column":1,"offset":10132},"end":{"line":319,"column":56,"offset":10187}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// No need to wrap list items in an extra element!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Don't forget the keys :)</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">First item</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>B<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Second item</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>C<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Third item</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":321,"column":1,"offset":10189},"end":{"line":331,"column":4,"offset":10412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"javascript-expressions-as-children"},"children":[{"type":"element","tagName":"a","properties":{"href":"#javascript-expressions-as-children","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JavaScript Expressions as Children ","position":{"start":{"line":333,"column":5,"offset":10418},"end":{"line":333,"column":77,"offset":10490}}}],"position":{"start":{"line":333,"column":1,"offset":10414},"end":{"line":333,"column":77,"offset":10490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can pass any JavaScript expression as children, by enclosing it within ","position":{"start":{"line":335,"column":1,"offset":10492},"end":{"line":335,"column":76,"offset":10567}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">{}</code>","position":{"start":{"line":335,"column":76,"offset":10567},"end":{"line":335,"column":80,"offset":10571}}},{"type":"text","value":". For example, these expressions are equivalent:","position":{"start":{"line":335,"column":80,"offset":10571},"end":{"line":335,"column":128,"offset":10619}}}],"position":{"start":{"line":335,"column":1,"offset":10492},"end":{"line":335,"column":128,"offset":10619}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":337,"column":1,"offset":10621},"end":{"line":341,"column":4,"offset":10697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is often useful for rendering a list of JSX expressions of arbitrary length. For example, this renders an HTML list:","position":{"start":{"line":343,"column":1,"offset":10699},"end":{"line":343,"column":122,"offset":10820}}}],"position":{"start":{"line":343,"column":1,"offset":10699},"end":{"line":343,"column":122,"offset":10820}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Item</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'finish doc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'submit pr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nag dan to review'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":345,"column":1,"offset":10822},"end":{"line":358,"column":4,"offset":11095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript expressions can be mixed with other types of children. This is often useful in lieu of string templates:","position":{"start":{"line":360,"column":1,"offset":11097},"end":{"line":360,"column":116,"offset":11212}}}],"position":{"start":{"line":360,"column":1,"offset":11097},"end":{"line":360,"column":116,"offset":11212}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>addressee<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":362,"column":1,"offset":11214},"end":{"line":366,"column":4,"offset":11298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"functions-as-children"},"children":[{"type":"element","tagName":"a","properties":{"href":"#functions-as-children","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Functions as Children ","position":{"start":{"line":368,"column":5,"offset":11304},"end":{"line":368,"column":51,"offset":11350}}}],"position":{"start":{"line":368,"column":1,"offset":11300},"end":{"line":368,"column":51,"offset":11350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Normally, JavaScript expressions inserted in JSX will evaluate to a string, a React element, or a list of those things. However, ","position":{"start":{"line":370,"column":1,"offset":11352},"end":{"line":370,"column":130,"offset":11481}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.children</code>","position":{"start":{"line":370,"column":130,"offset":11481},"end":{"line":370,"column":146,"offset":11497}}},{"type":"text","value":" works just like any other prop in that it can pass any sort of data, not just the sorts that React knows how to render. For example, if you have a custom component, you could have it take a callback as ","position":{"start":{"line":370,"column":146,"offset":11497},"end":{"line":370,"column":349,"offset":11700}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.children</code>","position":{"start":{"line":370,"column":349,"offset":11700},"end":{"line":370,"column":365,"offset":11716}}},{"type":"text","value":":","position":{"start":{"line":370,"column":365,"offset":11716},"end":{"line":370,"column":366,"offset":11717}}}],"position":{"start":{"line":370,"column":1,"offset":11352},"end":{"line":370,"column":366,"offset":11717}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Calls the children callback numTimes to produce a repeated component</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> props<span class=\"token punctuation\">.</span>numTimes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    items<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListOfTenThings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Repeat</span></span> <span class=\"token attr-name\">numTimes</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">10</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This is item </span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> in the list</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Repeat</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":372,"column":1,"offset":11719},"end":{"line":389,"column":4,"offset":12128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Children passed to a custom component can be anything, as long as that component transforms them into something React can understand before rendering. This usage is not common, but it works if you want to stretch what JSX is capable of.","position":{"start":{"line":391,"column":1,"offset":12130},"end":{"line":391,"column":237,"offset":12366}}}],"position":{"start":{"line":391,"column":1,"offset":12130},"end":{"line":391,"column":237,"offset":12366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"booleans-null-and-undefined-are-ignored"},"children":[{"type":"element","tagName":"a","properties":{"href":"#booleans-null-and-undefined-are-ignored","aria-hidden":true,"class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Booleans, Null, and Undefined Are Ignored ","position":{"start":{"line":393,"column":5,"offset":12372},"end":{"line":393,"column":89,"offset":12456}}}],"position":{"start":{"line":393,"column":1,"offset":12368},"end":{"line":393,"column":89,"offset":12456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"gatsby-code-text\">false</code>","position":{"start":{"line":395,"column":1,"offset":12458},"end":{"line":395,"column":8,"offset":12465}}},{"type":"text","value":", ","position":{"start":{"line":395,"column":8,"offset":12465},"end":{"line":395,"column":10,"offset":12467}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">null</code>","position":{"start":{"line":395,"column":10,"offset":12467},"end":{"line":395,"column":16,"offset":12473}}},{"type":"text","value":", ","position":{"start":{"line":395,"column":16,"offset":12473},"end":{"line":395,"column":18,"offset":12475}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">undefined</code>","position":{"start":{"line":395,"column":18,"offset":12475},"end":{"line":395,"column":29,"offset":12486}}},{"type":"text","value":", and ","position":{"start":{"line":395,"column":29,"offset":12486},"end":{"line":395,"column":35,"offset":12492}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">true</code>","position":{"start":{"line":395,"column":35,"offset":12492},"end":{"line":395,"column":41,"offset":12498}}},{"type":"text","value":" are valid children. They simply don’t render. These JSX expressions will all render to the same thing:","position":{"start":{"line":395,"column":41,"offset":12498},"end":{"line":395,"column":144,"offset":12601}}}],"position":{"start":{"line":395,"column":1,"offset":12458},"end":{"line":395,"column":144,"offset":12601}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":397,"column":1,"offset":12603},"end":{"line":409,"column":4,"offset":12715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This can be useful to conditionally render React elements. This JSX renders the ","position":{"start":{"line":411,"column":1,"offset":12717},"end":{"line":411,"column":81,"offset":12797}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&lt;Header /&gt;</code>","position":{"start":{"line":411,"column":81,"offset":12797},"end":{"line":411,"column":93,"offset":12809}}},{"type":"text","value":" component only if ","position":{"start":{"line":411,"column":93,"offset":12809},"end":{"line":411,"column":112,"offset":12828}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">showHeader</code>","position":{"start":{"line":411,"column":112,"offset":12828},"end":{"line":411,"column":124,"offset":12840}}},{"type":"text","value":" is ","position":{"start":{"line":411,"column":124,"offset":12840},"end":{"line":411,"column":128,"offset":12844}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">true</code>","position":{"start":{"line":411,"column":128,"offset":12844},"end":{"line":411,"column":134,"offset":12850}}},{"type":"text","value":":","position":{"start":{"line":411,"column":134,"offset":12850},"end":{"line":411,"column":135,"offset":12851}}}],"position":{"start":{"line":411,"column":1,"offset":12717},"end":{"line":411,"column":135,"offset":12851}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>showHeader <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":413,"column":1,"offset":12853},"end":{"line":418,"column":4,"offset":12921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One caveat is that some ","position":{"start":{"line":420,"column":1,"offset":12923},"end":{"line":420,"column":25,"offset":12947}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Glossary/Falsy","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"“falsy” values","position":{"start":{"line":420,"column":26,"offset":12948},"end":{"line":420,"column":40,"offset":12962}}}],"position":{"start":{"line":420,"column":25,"offset":12947},"end":{"line":420,"column":98,"offset":13020}}},{"type":"text","value":", such as the ","position":{"start":{"line":420,"column":98,"offset":13020},"end":{"line":420,"column":112,"offset":13034}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">0</code>","position":{"start":{"line":420,"column":112,"offset":13034},"end":{"line":420,"column":115,"offset":13037}}},{"type":"text","value":" number, are still rendered by React. For example, this code will not behave as you might expect because ","position":{"start":{"line":420,"column":115,"offset":13037},"end":{"line":420,"column":220,"offset":13142}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">0</code>","position":{"start":{"line":420,"column":220,"offset":13142},"end":{"line":420,"column":223,"offset":13145}}},{"type":"text","value":" will be printed when ","position":{"start":{"line":420,"column":223,"offset":13145},"end":{"line":420,"column":245,"offset":13167}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">props.messages</code>","position":{"start":{"line":420,"column":245,"offset":13167},"end":{"line":420,"column":261,"offset":13183}}},{"type":"text","value":" is an empty array:","position":{"start":{"line":420,"column":261,"offset":13183},"end":{"line":420,"column":280,"offset":13202}}}],"position":{"start":{"line":420,"column":1,"offset":12923},"end":{"line":420,"column":280,"offset":13202}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageList</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":422,"column":1,"offset":13204},"end":{"line":428,"column":4,"offset":13307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To fix this, make sure that the expression before ","position":{"start":{"line":430,"column":1,"offset":13309},"end":{"line":430,"column":51,"offset":13359}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">&amp;&amp;</code>","position":{"start":{"line":430,"column":51,"offset":13359},"end":{"line":430,"column":55,"offset":13363}}},{"type":"text","value":" is always boolean:","position":{"start":{"line":430,"column":55,"offset":13363},"end":{"line":430,"column":74,"offset":13382}}}],"position":{"start":{"line":430,"column":1,"offset":13309},"end":{"line":430,"column":74,"offset":13382}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageList</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":432,"column":1,"offset":13384},"end":{"line":438,"column":4,"offset":13491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Conversely, if you want a value like ","position":{"start":{"line":440,"column":1,"offset":13493},"end":{"line":440,"column":38,"offset":13530}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">false</code>","position":{"start":{"line":440,"column":38,"offset":13530},"end":{"line":440,"column":45,"offset":13537}}},{"type":"text","value":", ","position":{"start":{"line":440,"column":45,"offset":13537},"end":{"line":440,"column":47,"offset":13539}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">true</code>","position":{"start":{"line":440,"column":47,"offset":13539},"end":{"line":440,"column":53,"offset":13545}}},{"type":"text","value":", ","position":{"start":{"line":440,"column":53,"offset":13545},"end":{"line":440,"column":55,"offset":13547}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">null</code>","position":{"start":{"line":440,"column":55,"offset":13547},"end":{"line":440,"column":61,"offset":13553}}},{"type":"text","value":", or ","position":{"start":{"line":440,"column":61,"offset":13553},"end":{"line":440,"column":66,"offset":13558}}},{"type":"raw","value":"<code class=\"gatsby-code-text\">undefined</code>","position":{"start":{"line":440,"column":66,"offset":13558},"end":{"line":440,"column":77,"offset":13569}}},{"type":"text","value":" to appear in the output, you have to ","position":{"start":{"line":440,"column":77,"offset":13569},"end":{"line":440,"column":115,"offset":13607}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#String_conversion","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"convert it to a string","position":{"start":{"line":440,"column":116,"offset":13608},"end":{"line":440,"column":138,"offset":13630}}}],"position":{"start":{"line":440,"column":115,"offset":13607},"end":{"line":440,"column":246,"offset":13738}}},{"type":"text","value":" first:","position":{"start":{"line":440,"column":246,"offset":13738},"end":{"line":440,"column":253,"offset":13745}}}],"position":{"start":{"line":440,"column":1,"offset":13493},"end":{"line":440,"column":253,"offset":13745}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  My JavaScript variable is </span><span class=\"token punctuation\">{</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>myVariable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":442,"column":1,"offset":13747},"end":{"line":446,"column":4,"offset":13822}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":447,"column":1,"offset":13823}}}}