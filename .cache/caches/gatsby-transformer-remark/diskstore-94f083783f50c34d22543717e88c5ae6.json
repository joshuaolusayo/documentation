{"expireTime":9007200851888156000,"key":"transformer-remark-markdown-ast-c8fe020896a9e34102fb3f02522e85f8-gatsby-remark-responsive-iframegatsby-remark-imagesgatsby-remark-external-linksgatsby-remark-header-custom-idsgatsby-remark-code-replsgatsby-remark-embed-snippetgatsby-remark-use-jsxgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Hooks","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":7,"offset":7},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":8,"offset":8},"indent":[]}},{"type":"text","value":" are a new addition in React 16.8. They let you use state and other React features without writing a class.","position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":115,"offset":115},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":115,"offset":115},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hooks are JavaScript functions, but you need to follow two rules when using them. We provide a ","position":{"start":{"line":4,"column":1,"offset":117},"end":{"line":4,"column":96,"offset":212},"indent":[]}},{"type":"link","title":null,"url":"https://www.npmjs.com/package/eslint-plugin-react-hooks","children":[{"type":"text","value":"linter plugin","position":{"start":{"line":4,"column":97,"offset":213},"end":{"line":4,"column":110,"offset":226},"indent":[]}}],"position":{"start":{"line":4,"column":96,"offset":212},"end":{"line":4,"column":168,"offset":284},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" to enforce these rules automatically:","position":{"start":{"line":4,"column":168,"offset":284},"end":{"line":4,"column":206,"offset":322},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":117},"end":{"line":4,"column":206,"offset":322},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#only-call-hooks-at-the-top-level","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Only Call Hooks at the Top Level ","position":{"start":{"line":6,"column":5,"offset":328},"end":{"line":6,"column":73,"offset":396},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":324},"end":{"line":6,"column":73,"offset":396},"indent":[]},"data":{"id":"only-call-hooks-at-the-top-level","htmlAttributes":{"id":"only-call-hooks-at-the-top-level"},"hProperties":{"id":"only-call-hooks-at-the-top-level"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Don’t call Hooks inside loops, conditions, or nested functions.","position":{"start":{"line":8,"column":3,"offset":400},"end":{"line":8,"column":66,"offset":463},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":68,"offset":465},"indent":[]}},{"type":"text","value":" Instead, always use Hooks at the top level of your React function. By following this rule, you ensure that Hooks are called in the same order each time a component renders. That’s what allows React to correctly preserve the state of Hooks between multiple ","position":{"start":{"line":8,"column":68,"offset":465},"end":{"line":8,"column":325,"offset":722},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":8,"column":325,"offset":722},"end":{"line":8,"column":335,"offset":732},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":8,"column":335,"offset":732},"end":{"line":8,"column":340,"offset":737},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">useEffect</code>","position":{"start":{"line":8,"column":340,"offset":737},"end":{"line":8,"column":351,"offset":748},"indent":[]}},{"type":"text","value":" calls. (If you’re curious, we’ll explain this in depth ","position":{"start":{"line":8,"column":351,"offset":748},"end":{"line":8,"column":407,"offset":804},"indent":[]}},{"type":"link","title":null,"url":"#explanation","children":[{"type":"text","value":"below","position":{"start":{"line":8,"column":408,"offset":805},"end":{"line":8,"column":413,"offset":810},"indent":[]}}],"position":{"start":{"line":8,"column":407,"offset":804},"end":{"line":8,"column":428,"offset":825},"indent":[]}},{"type":"text","value":".)","position":{"start":{"line":8,"column":428,"offset":825},"end":{"line":8,"column":430,"offset":827},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":430,"offset":827},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#only-call-hooks-from-react-functions","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Only Call Hooks from React Functions ","position":{"start":{"line":10,"column":5,"offset":833},"end":{"line":10,"column":81,"offset":909},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":829},"end":{"line":10,"column":81,"offset":909},"indent":[]},"data":{"id":"only-call-hooks-from-react-functions","htmlAttributes":{"id":"only-call-hooks-from-react-functions"},"hProperties":{"id":"only-call-hooks-from-react-functions"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Don’t call Hooks from regular JavaScript functions.","position":{"start":{"line":12,"column":3,"offset":913},"end":{"line":12,"column":54,"offset":964},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":911},"end":{"line":12,"column":56,"offset":966},"indent":[]}},{"type":"text","value":" Instead, you can:","position":{"start":{"line":12,"column":56,"offset":966},"end":{"line":12,"column":74,"offset":984},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":911},"end":{"line":12,"column":74,"offset":984},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"✅ Call Hooks from React function components.","position":{"start":{"line":14,"column":3,"offset":988},"end":{"line":14,"column":47,"offset":1032},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":988},"end":{"line":14,"column":47,"offset":1032},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":986},"end":{"line":14,"column":47,"offset":1032},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"✅ Call Hooks from custom Hooks (we’ll learn about them ","position":{"start":{"line":15,"column":3,"offset":1035},"end":{"line":15,"column":58,"offset":1090},"indent":[]}},{"type":"link","title":null,"url":"/docs/hooks-custom.html","children":[{"type":"text","value":"on the next page","position":{"start":{"line":15,"column":59,"offset":1091},"end":{"line":15,"column":75,"offset":1107},"indent":[]}}],"position":{"start":{"line":15,"column":58,"offset":1090},"end":{"line":15,"column":101,"offset":1133},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":15,"column":101,"offset":1133},"end":{"line":15,"column":103,"offset":1135},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1035},"end":{"line":15,"column":103,"offset":1135},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1033},"end":{"line":15,"column":103,"offset":1135},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":986},"end":{"line":15,"column":103,"offset":1135},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"By following this rule, you ensure that all stateful logic in a component is clearly visible from its source code.","position":{"start":{"line":17,"column":1,"offset":1137},"end":{"line":17,"column":115,"offset":1251},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1137},"end":{"line":17,"column":115,"offset":1251},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#eslint-plugin","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"ESLint Plugin ","position":{"start":{"line":19,"column":4,"offset":1256},"end":{"line":19,"column":34,"offset":1286},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1253},"end":{"line":19,"column":34,"offset":1286},"indent":[]},"data":{"id":"eslint-plugin","htmlAttributes":{"id":"eslint-plugin"},"hProperties":{"id":"eslint-plugin"}}},{"type":"paragraph","children":[{"type":"text","value":"We released an ESLint plugin called ","position":{"start":{"line":21,"column":1,"offset":1288},"end":{"line":21,"column":37,"offset":1324},"indent":[]}},{"type":"link","title":null,"url":"https://www.npmjs.com/package/eslint-plugin-react-hooks","children":[{"type":"html","value":"<code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code>","position":{"start":{"line":21,"column":38,"offset":1325},"end":{"line":21,"column":65,"offset":1352},"indent":[]}}],"position":{"start":{"line":21,"column":37,"offset":1324},"end":{"line":21,"column":123,"offset":1410},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" that enforces these two rules. You can add this plugin to your project if you’d like to try it:","position":{"start":{"line":21,"column":123,"offset":1410},"end":{"line":21,"column":219,"offset":1506},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1288},"end":{"line":21,"column":219,"offset":1506},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This plugin is included by default in ","position":{"start":{"line":23,"column":1,"offset":1508},"end":{"line":23,"column":39,"offset":1546},"indent":[]}},{"type":"link","title":null,"url":"/docs/create-a-new-react-app.html#create-react-app","children":[{"type":"text","value":"Create React App","position":{"start":{"line":23,"column":40,"offset":1547},"end":{"line":23,"column":56,"offset":1563},"indent":[]}}],"position":{"start":{"line":23,"column":39,"offset":1546},"end":{"line":23,"column":109,"offset":1616},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":109,"offset":1616},"end":{"line":23,"column":110,"offset":1617},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1508},"end":{"line":23,"column":110,"offset":1617},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint-plugin-react-hooks --save-dev</code></pre></div>","position":{"start":{"line":25,"column":1,"offset":1619},"end":{"line":27,"column":4,"offset":1679},"indent":[1,1]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// Your ESLint configuration</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks/rules-of-hooks\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Checks rules of Hooks</span>\n    <span class=\"token string\">\"react-hooks/exhaustive-deps\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"warn\"</span> <span class=\"token comment\">// Checks effect dependencies</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":29,"column":1,"offset":1681},"end":{"line":42,"column":4,"offset":1940},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"You can skip to the next page explaining how to write ","position":{"start":{"line":44,"column":3,"offset":1944},"end":{"line":44,"column":57,"offset":1998},"indent":[]}},{"type":"link","title":null,"url":"/docs/hooks-custom.html","children":[{"type":"text","value":"your own Hooks","position":{"start":{"line":44,"column":58,"offset":1999},"end":{"line":44,"column":72,"offset":2013},"indent":[]}}],"position":{"start":{"line":44,"column":57,"offset":1998},"end":{"line":44,"column":98,"offset":2039},"indent":[]}},{"type":"text","value":" now.","position":{"start":{"line":44,"column":98,"offset":2039},"end":{"line":44,"column":103,"offset":2044},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1942},"end":{"line":44,"column":105,"offset":2046},"indent":[]}},{"type":"text","value":" On this page, we’ll continue by explaining the reasoning behind these rules.","position":{"start":{"line":44,"column":105,"offset":2046},"end":{"line":44,"column":182,"offset":2123},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1942},"end":{"line":44,"column":182,"offset":2123},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#explanation","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Explanation ","position":{"start":{"line":46,"column":4,"offset":2128},"end":{"line":46,"column":30,"offset":2154},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2125},"end":{"line":46,"column":30,"offset":2154},"indent":[]},"data":{"id":"explanation","htmlAttributes":{"id":"explanation"},"hProperties":{"id":"explanation"}}},{"type":"paragraph","children":[{"type":"text","value":"As we ","position":{"start":{"line":48,"column":1,"offset":2156},"end":{"line":48,"column":7,"offset":2162},"indent":[]}},{"type":"link","title":null,"url":"/docs/hooks-state.html#tip-using-multiple-state-variables","children":[{"type":"text","value":"learned earlier","position":{"start":{"line":48,"column":8,"offset":2163},"end":{"line":48,"column":23,"offset":2178},"indent":[]}}],"position":{"start":{"line":48,"column":7,"offset":2162},"end":{"line":48,"column":83,"offset":2238},"indent":[]}},{"type":"text","value":", we can use multiple State or Effect Hooks in a single component:","position":{"start":{"line":48,"column":83,"offset":2238},"end":{"line":48,"column":149,"offset":2304},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2156},"end":{"line":48,"column":149,"offset":2304},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. Use the name state variable</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 2. Use an effect for persisting the form</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 3. Use the surname state variable</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>surname<span class=\"token punctuation\">,</span> setSurname<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 4. Use an effect for updating the title</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">updateTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> surname<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":50,"column":1,"offset":2306},"end":{"line":70,"column":4,"offset":2784},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So how does React know which state corresponds to which ","position":{"start":{"line":72,"column":1,"offset":2786},"end":{"line":72,"column":57,"offset":2842},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":72,"column":57,"offset":2842},"end":{"line":72,"column":67,"offset":2852},"indent":[]}},{"type":"text","value":" call? The answer is that ","position":{"start":{"line":72,"column":67,"offset":2852},"end":{"line":72,"column":93,"offset":2878},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"React relies on the order in which Hooks are called","position":{"start":{"line":72,"column":95,"offset":2880},"end":{"line":72,"column":146,"offset":2931},"indent":[]}}],"position":{"start":{"line":72,"column":93,"offset":2878},"end":{"line":72,"column":148,"offset":2933},"indent":[]}},{"type":"text","value":". Our example works because the order of the Hook calls is the same on every render:","position":{"start":{"line":72,"column":148,"offset":2933},"end":{"line":72,"column":232,"offset":3017},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2786},"end":{"line":72,"column":232,"offset":3017},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// ------------</span>\n<span class=\"token comment\">// First render</span>\n<span class=\"token comment\">// ------------</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. Initialize the name state variable with 'Mary'</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>persistForm<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 2. Add an effect for persisting the form</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 3. Initialize the surname state variable with 'Poppins'</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 4. Add an effect for updating the title</span>\n\n<span class=\"token comment\">// -------------</span>\n<span class=\"token comment\">// Second render</span>\n<span class=\"token comment\">// -------------</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. Read the name state variable (argument is ignored)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>persistForm<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 2. Replace the effect for persisting the form</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 3. Read the surname state variable (argument is ignored)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 4. Replace the effect for updating the title</span>\n\n<span class=\"token comment\">// ...</span></code></pre></div>","position":{"start":{"line":74,"column":1,"offset":3019},"end":{"line":92,"column":4,"offset":3765},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As long as the order of the Hook calls is the same between renders, React can associate some local state with each of them. But what happens if we put a Hook call (for example, the ","position":{"start":{"line":94,"column":1,"offset":3767},"end":{"line":94,"column":182,"offset":3948},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">persistForm</code>","position":{"start":{"line":94,"column":182,"offset":3948},"end":{"line":94,"column":195,"offset":3961},"indent":[]}},{"type":"text","value":" effect) inside a condition?","position":{"start":{"line":94,"column":195,"offset":3961},"end":{"line":94,"column":223,"offset":3989},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3767},"end":{"line":94,"column":223,"offset":3989},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">  <span class=\"token comment\">// 🔴 We're breaking the first rule by using a Hook in a condition</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":96,"column":1,"offset":3991},"end":{"line":103,"column":4,"offset":4187},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":105,"column":1,"offset":4189},"end":{"line":105,"column":5,"offset":4193},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">name !== &#39;&#39;</code>","position":{"start":{"line":105,"column":5,"offset":4193},"end":{"line":105,"column":18,"offset":4206},"indent":[]}},{"type":"text","value":" condition is ","position":{"start":{"line":105,"column":18,"offset":4206},"end":{"line":105,"column":32,"offset":4220},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">true</code>","position":{"start":{"line":105,"column":32,"offset":4220},"end":{"line":105,"column":38,"offset":4226},"indent":[]}},{"type":"text","value":" on the first render, so we run this Hook. However, on the next render the user might clear the form, making the condition ","position":{"start":{"line":105,"column":38,"offset":4226},"end":{"line":105,"column":161,"offset":4349},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">false</code>","position":{"start":{"line":105,"column":161,"offset":4349},"end":{"line":105,"column":168,"offset":4356},"indent":[]}},{"type":"text","value":". Now that we skip this Hook during rendering, the order of the Hook calls becomes different:","position":{"start":{"line":105,"column":168,"offset":4356},"end":{"line":105,"column":261,"offset":4449},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":4189},"end":{"line":105,"column":261,"offset":4449},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. Read the name state variable (argument is ignored)</span>\n<span class=\"token comment\">// useEffect(persistForm)  // 🔴 This Hook was skipped!</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 🔴 2 (but was 3). Fail to read the surname state variable</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 🔴 3 (but was 4). Fail to replace the effect</span></code></pre></div>","position":{"start":{"line":107,"column":1,"offset":4451},"end":{"line":112,"column":4,"offset":4763},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"React wouldn’t know what to return for the second ","position":{"start":{"line":114,"column":1,"offset":4765},"end":{"line":114,"column":51,"offset":4815},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">useState</code>","position":{"start":{"line":114,"column":51,"offset":4815},"end":{"line":114,"column":61,"offset":4825},"indent":[]}},{"type":"text","value":" Hook call. React expected that the second Hook call in this component corresponds to the ","position":{"start":{"line":114,"column":61,"offset":4825},"end":{"line":114,"column":151,"offset":4915},"indent":[]}},{"type":"html","value":"<code class=\"gatsby-code-text\">persistForm</code>","position":{"start":{"line":114,"column":151,"offset":4915},"end":{"line":114,"column":164,"offset":4928},"indent":[]}},{"type":"text","value":" effect, just like during the previous render, but it doesn’t anymore. From that point, every next Hook call after the one we skipped would also shift by one, leading to bugs.","position":{"start":{"line":114,"column":164,"offset":4928},"end":{"line":114,"column":339,"offset":5103},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4765},"end":{"line":114,"column":339,"offset":5103},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"This is why Hooks must be called on the top level of our components.","position":{"start":{"line":116,"column":3,"offset":5107},"end":{"line":116,"column":71,"offset":5175},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5105},"end":{"line":116,"column":73,"offset":5177},"indent":[]}},{"type":"text","value":" If we want to run an effect conditionally, we can put that condition ","position":{"start":{"line":116,"column":73,"offset":5177},"end":{"line":116,"column":143,"offset":5247},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"inside","position":{"start":{"line":116,"column":144,"offset":5248},"end":{"line":116,"column":150,"offset":5254},"indent":[]}}],"position":{"start":{"line":116,"column":143,"offset":5247},"end":{"line":116,"column":151,"offset":5255},"indent":[]}},{"type":"text","value":" our Hook:","position":{"start":{"line":116,"column":151,"offset":5255},"end":{"line":116,"column":161,"offset":5265},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5105},"end":{"line":116,"column":161,"offset":5265},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 👍 We're not breaking the first rule anymore</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":118,"column":1,"offset":5267},"end":{"line":125,"column":4,"offset":5446},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note that you don’t need to worry about this problem if you use the ","position":{"start":{"line":127,"column":3,"offset":5450},"end":{"line":127,"column":71,"offset":5518},"indent":[]}},{"type":"link","title":null,"url":"https://www.npmjs.com/package/eslint-plugin-react-hooks","children":[{"type":"text","value":"provided lint rule","position":{"start":{"line":127,"column":72,"offset":5519},"end":{"line":127,"column":90,"offset":5537},"indent":[]}}],"position":{"start":{"line":127,"column":71,"offset":5518},"end":{"line":127,"column":148,"offset":5595},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":127,"column":148,"offset":5595},"end":{"line":127,"column":149,"offset":5596},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5448},"end":{"line":127,"column":151,"offset":5598},"indent":[]}},{"type":"text","value":" But now you also know ","position":{"start":{"line":127,"column":151,"offset":5598},"end":{"line":127,"column":174,"offset":5621},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"why","position":{"start":{"line":127,"column":175,"offset":5622},"end":{"line":127,"column":178,"offset":5625},"indent":[]}}],"position":{"start":{"line":127,"column":174,"offset":5621},"end":{"line":127,"column":179,"offset":5626},"indent":[]}},{"type":"text","value":" Hooks work this way, and which issues the rule is preventing.","position":{"start":{"line":127,"column":179,"offset":5626},"end":{"line":127,"column":241,"offset":5688},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5448},"end":{"line":127,"column":241,"offset":5688},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#next-steps","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Next Steps ","position":{"start":{"line":129,"column":4,"offset":5693},"end":{"line":129,"column":28,"offset":5717},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":5690},"end":{"line":129,"column":28,"offset":5717},"indent":[]},"data":{"id":"next-steps","htmlAttributes":{"id":"next-steps"},"hProperties":{"id":"next-steps"}}},{"type":"paragraph","children":[{"type":"text","value":"Finally, we’re ready to learn about ","position":{"start":{"line":131,"column":1,"offset":5719},"end":{"line":131,"column":37,"offset":5755},"indent":[]}},{"type":"link","title":null,"url":"/docs/hooks-custom.html","children":[{"type":"text","value":"writing your own Hooks","position":{"start":{"line":131,"column":38,"offset":5756},"end":{"line":131,"column":60,"offset":5778},"indent":[]}}],"position":{"start":{"line":131,"column":37,"offset":5755},"end":{"line":131,"column":86,"offset":5804},"indent":[]}},{"type":"text","value":"! Custom Hooks let you combine Hooks provided by React into your own abstractions, and reuse common stateful logic between different components.","position":{"start":{"line":131,"column":86,"offset":5804},"end":{"line":131,"column":230,"offset":5948},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":5719},"end":{"line":131,"column":230,"offset":5948},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":132,"column":1,"offset":5949}}}}